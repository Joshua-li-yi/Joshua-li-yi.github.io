<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>MFC对话框、菜单栏、工具栏、控件的创建和基本使用</title>
    <url>/2020/04/14/MFC%E5%AF%B9%E8%AF%9D%E6%A1%86%E3%80%81%E8%8F%9C%E5%8D%95%E6%A0%8F%E3%80%81%E5%B7%A5%E5%85%B7%E6%A0%8F%E3%80%81%E6%8E%A7%E4%BB%B6%E7%9A%84%E5%88%9B%E5%BB%BA%E5%92%8C%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<br>

<p>下面我们通过一个实例来了解MFC对话框的建立，菜单栏、工具栏、控件的一些基本使用</p>
<h3 id="先简单看一下效果"><a href="#先简单看一下效果" class="headerlink" title="先简单看一下效果"></a>先简单看一下效果</h3><p><img src="https://img-blog.csdnimg.cn/20200414155503433.gif" alt="在这里插入图片描述"></p>
<br>

<h3 id="系统环境"><a href="#系统环境" class="headerlink" title="系统环境"></a>系统环境</h3><ul>
<li>window10</li>
<li>Visual Studio 2017</li>
</ul>
<h3 id="项目的目录"><a href="#项目的目录" class="headerlink" title="项目的目录"></a>项目的目录</h3><p><img src="https://img-blog.csdnimg.cn/20200414153850245.png" alt="在这里插入图片描述"></p>
<h3 id="一、对话框"><a href="#一、对话框" class="headerlink" title="一、对话框"></a>一、对话框</h3><p>首先需要知道的是</p>
<p>MFC中创建的对话框分为两种</p>
<ul>
<li>模态对话框</li>
<li>非模态对话框</li>
</ul>
<p>两者区别简单来说就是</p>
<blockquote>
<p>模态对话框就像和你女朋友聊天，一旦你打开了她的对话框，除非你把她哄好打点好之后，你才能干其他的事情</p>
<p>非模态对话框就像是兄弟，简单的回个“打球不？”</p>
<p>他说“好”</p>
<p>然后你就可以去干其他的事情了此时的对话框可以关闭，也可以开启着</p>
</blockquote>
<br>

<p>比较专业一点来说就是</p>
<p>模态对话框当其显示时，程序会暂停执行，直到关闭这个模态对话框后，才能继续执行程序中其他任务。</p>
<p>非模态对话框当其显示时，允许转而执行程序中其他任务，而不用关闭这个对话框。</p>
<p>再就是这两者的创建和关闭的情况有所区别了</p>
<p>见下图</p>
<p><img src="https://img-blog.csdnimg.cn/20200414144516830.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDk4NDY2NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>以下我只演示关于模态对话框的操作</p>
<p>如果只对非模态对话框感兴趣的兄弟阔以走了</p>
<h4 id="1、创建对话框资源"><a href="#1、创建对话框资源" class="headerlink" title="1、创建对话框资源"></a>1、创建对话框资源</h4><p><img src="https://img-blog.csdnimg.cn/20200414145435716.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDk4NDY2NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>然后右键Dialog 选择插入Dialog</p>
<p><img src="https://img-blog.csdnimg.cn/20200414145724362.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDk4NDY2NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>之后就会出现一个空白的对话框</p>
<p>我们可以通过工具箱来拖拽里面的控件</p>
<p>如果没有工具箱这个视图的童鞋,可以在菜单中的视图里找到</p>
<p><img src="https://img-blog.csdnimg.cn/20200414145947188.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDk4NDY2NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>在对话框的属性里可以更改这个对话框的ID</p>
<p><img src="https://img-blog.csdnimg.cn/20200414150118203.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDk4NDY2NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>当然懒得改的话，且只有一个对话框的话，也可以不改</p>
<p>之后咱通过拖拽控件形成一个界面</p>
<p><img src="https://img-blog.csdnimg.cn/20200414150310211.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDk4NDY2NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>当然此时的界面也就是个界面而已，啥也没做</p>
<h4 id="2、创建对应的对话框类、以及控件对应的变量"><a href="#2、创建对应的对话框类、以及控件对应的变量" class="headerlink" title="2、创建对应的对话框类、以及控件对应的变量"></a>2、创建对应的对话框类、以及控件对应的变量</h4><p><img src="https://img-blog.csdnimg.cn/20200414150524738.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDk4NDY2NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>在创建好的对话框上右键，然后点击添加类</p>
<p><img src="https://img-blog.csdnimg.cn/20200414150648681.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDk4NDY2NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>之后就能对这个对话框类进行，命名和设置基类了</p>
<p>添加好类之后</p>
<p>我们需要对控件添加相应的变量来传递相应的值</p>
<p>需要注意的是不同的控件需要传递不同的值</p>
<p>下面演示的我所用到的，</p>
<p><code>Edit Control</code></p>
<p><code>MFC ColorButton Control</code></p>
<p><code>Button</code></p>
<p><code>Static Text</code>和<code>Group Box</code>就不说了，我只是改了一下他们的名称</p>
<br>

<p><code>Edit Control</code></p>
<p><img src="https://img-blog.csdnimg.cn/20200414151353478.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDk4NDY2NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>选中控件后右键，选择添加变量</p>
<p><img src="https://img-blog.csdnimg.cn/2020041415151677.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDk4NDY2NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>之后就可以对这些进行设置了</p>
<p>因为我这些控件是之前设置好的，所以是暗色的</p>
<br>

<p><code>MFC ColorButton Control</code></p>
<p>这个控件就比较特殊了</p>
<p>在选择属性的时候，我这里设置的是</p>
<ul>
<li><p>类别为控件</p>
</li>
<li><p>变量类型设置为<code>CMFCColorButton</code>类型</p>
</li>
</ul>
<p>如果你有特殊要求再自己设置</p>
<p><img src="https://img-blog.csdnimg.cn/20200414151653623.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDk4NDY2NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<br>

<p>需要注意</p>
<p>此时的颜色设置框，其实是不可以使用的</p>
<p>我们需要再为这个控件设置一个行为</p>
<p><img src="https://img-blog.csdnimg.cn/20200414152118580.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDk4NDY2NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>选中颜色选择框后，点击其属性中的控件行为</p>
<p>添加一个点击行为</p>
<p>之后就有系统自动生成的函数了</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">void</span> CMyDialog::OnBnClickedMymfccolorbutton()</span><br><span class="line">&#123;</span><br><span class="line">	<span class="comment">// <span class="doctag">TODO:</span> 在此添加控件通知处理程序代码</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">//获取控件上选择的RGB</span></span><br><span class="line">	 color = text_color.GetColor();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<br>

<p>上面的<code>color</code>是我自己定义的</p>
<p>在<code>CMyDialog</code>的对话框类中</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">COLORREF color; <span class="comment">//我自己定义的</span></span><br><span class="line">CMFCColorButton text_color; <span class="comment">//刚刚设置变量的时候系统自动生成的</span></span><br></pre></td></tr></table></figure>

<br>

<p><code>Button</code></p>
<p><img src="https://img-blog.csdnimg.cn/20200414152702247.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDk4NDY2NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>按钮就比较方便了</p>
<p>在按钮上双击之后就可以转到他的点击函数中</p>
<p>代码如下</p>
<p>需要注意的是</p>
<p><code>UpdateData()</code>函数的使用</p>
<blockquote>
<p>UpdateData(1); 将控件的值赋值给成员变量</p>
<p>UpdateData(0); 将成员变量的值赋值给控件</p>
</blockquote>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 使用该设置的按钮</span></span><br><span class="line"><span class="keyword">void</span> CMyDialog::OnBnClickedButton1()</span><br><span class="line">&#123;</span><br><span class="line">	<span class="comment">// <span class="doctag">TODO:</span> 在此添加控件通知处理程序代码</span></span><br><span class="line">	<span class="comment">// 将控件的值赋值给成员变量</span></span><br><span class="line">	UpdateData(<span class="number">1</span>);</span><br><span class="line">    <span class="comment">// 将成员变量的值赋值给控件</span></span><br><span class="line">	UpdateData(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用默认设置的按钮</span></span><br><span class="line"><span class="keyword">void</span> CMyDialog::OnBnClickedButton2()</span><br><span class="line">&#123;</span><br><span class="line">	<span class="comment">// <span class="doctag">TODO:</span> 在此添加控件通知处理程序代码</span></span><br><span class="line">	text_str = <span class="string">"默认输出"</span>;</span><br><span class="line">	text_x = <span class="number">100</span>;</span><br><span class="line">	text_y = <span class="number">100</span>;</span><br><span class="line">	color = RGB(<span class="number">255</span>,<span class="number">0</span> , <span class="number">0</span>);</span><br><span class="line">    <span class="comment">// 设置控件上显示的颜色</span></span><br><span class="line">	text_color.SetColor(color);</span><br><span class="line">	<span class="comment">// 将成员变量的值赋值给控件</span></span><br><span class="line">	UpdateData(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> CMyDialog::OnBnClickedOk()</span><br><span class="line">&#123;</span><br><span class="line">	<span class="comment">// <span class="doctag">TODO:</span> 在此添加控件通知处理程序代码</span></span><br><span class="line">	CDialogEx::OnOK();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="二、菜单栏"><a href="#二、菜单栏" class="headerlink" title="二、菜单栏"></a>二、菜单栏</h3><h4 id="1、创建对应的资源、ID"><a href="#1、创建对应的资源、ID" class="headerlink" title="1、创建对应的资源、ID"></a>1、创建对应的资源、ID</h4><p>在MFC中已经有默认的菜单了，我们直接在上面进行修改</p>
<p>和上面创建对话框的资源类似</p>
<p><img src="https://img-blog.csdnimg.cn/2020041415325558.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDk4NDY2NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>同时我们将其ID修改为<code>ID_MODELDIALOG</code></p>
<p><img src="https://img-blog.csdnimg.cn/20200414153449761.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDk4NDY2NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<br>

<h4 id="2、为view视图类添加变量"><a href="#2、为view视图类添加变量" class="headerlink" title="2、为view视图类添加变量"></a>2、为view视图类添加变量</h4><p>变量的作用：与<code>CMyDialog</code>类进行信息的传递</p>
<p><img src="https://img-blog.csdnimg.cn/20200414154124377.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDk4NDY2NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h4 id="3、为添加的菜单ID加对应的处理函数"><a href="#3、为添加的菜单ID加对应的处理函数" class="headerlink" title="3、为添加的菜单ID加对应的处理函数"></a>3、为添加的菜单ID加对应的处理函数</h4><p>之后我们在类视图中通过类向导为刚刚的ID添加对应的处理函数</p>
<p><img src="https://img-blog.csdnimg.cn/2020041415365232.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDk4NDY2NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<br>

<p><img src="https://img-blog.csdnimg.cn/20200414154042171.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDk4NDY2NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>函数内容如下</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">void</span> Csecond2View::OnModeldialog()</span><br><span class="line">&#123;</span><br><span class="line">	<span class="comment">// <span class="doctag">TODO:</span> 在此添加命令处理程序代码</span></span><br><span class="line">	CMyDialog dlg;</span><br><span class="line">    <span class="comment">// 在模态对话框点击“确定”按钮后</span></span><br><span class="line">	<span class="keyword">if</span> (dlg.DoModal() == IDOK) &#123;</span><br><span class="line">        <span class="comment">// 传值</span></span><br><span class="line">		text_str = dlg.text_str;</span><br><span class="line">		text_x = dlg.text_x;</span><br><span class="line">		text_y = dlg.text_y;</span><br><span class="line">		text_color = dlg.color;</span><br><span class="line">        <span class="comment">// 绘制字体</span></span><br><span class="line">		CDC *pDC;</span><br><span class="line">		pDC = GetDC();</span><br><span class="line">		pDC-&gt;SetTextColor(text_color);</span><br><span class="line">		pDC-&gt;TextOutW(text_x, text_y, text_str);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<br>

<h3 id="三、工具栏"><a href="#三、工具栏" class="headerlink" title="三、工具栏"></a>三、工具栏</h3><h4 id="1、创建ID"><a href="#1、创建ID" class="headerlink" title="1、创建ID"></a>1、创建ID</h4><p>工具栏和菜单栏类似</p>
<p>不过需要自定图标</p>
<p><img src="https://img-blog.csdnimg.cn/20200414155009906.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDk4NDY2NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>工具在菜单栏的图像里</p>
<br>

<p>接着我们再设置一下</p>
<p>ID:<code>ID_BUTTON_MYDIALOG</code></p>
<p>同菜单栏类似</p>
<h4 id="2、在类向导里为ID添加一个处理函数"><a href="#2、在类向导里为ID添加一个处理函数" class="headerlink" title="2、在类向导里为ID添加一个处理函数"></a>2、在类向导里为ID添加一个处理函数</h4><p>函数内容如下</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">void</span> Csecond2View::OnButtonMydialog()</span><br><span class="line">&#123;</span><br><span class="line">	<span class="comment">// <span class="doctag">TODO:</span> 在此添加命令处理程序代码</span></span><br><span class="line">	CMyDialog dlg;</span><br><span class="line">    <span class="comment">// 在模态对话框点击“确定”按钮后</span></span><br><span class="line">	<span class="keyword">if</span> (dlg.DoModal() == IDOK) &#123;</span><br><span class="line">		text_str = dlg.text_str;</span><br><span class="line">		text_x = dlg.text_x;</span><br><span class="line">		text_y = dlg.text_y;</span><br><span class="line">		text_color = dlg.color;</span><br><span class="line">        <span class="comment">// 绘制字体</span></span><br><span class="line">		CDC *pDC;</span><br><span class="line">		pDC = GetDC();</span><br><span class="line">		pDC-&gt;SetTextColor(text_color);</span><br><span class="line">		pDC-&gt;TextOutW(text_x, text_y, text_str);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<br>

<h3 id="四、总结"><a href="#四、总结" class="headerlink" title="四、总结"></a>四、总结</h3><p>以上就是MFC中模态对话框的创建、控件、菜单、工具栏的基本使用了</p>
<p>如果觉得此文对你们有帮助的话请给个三连吧~~</p>
<p>谢谢老铁们<del>~</del></p>
]]></content>
      <categories>
        <category>可视化</category>
      </categories>
      <tags>
        <tag>MFC 可视化</tag>
      </tags>
  </entry>
  <entry>
    <title>调用mathpix API 自制mathpix snipping（每月1000次免费）</title>
    <url>/2020/04/01/%E8%87%AA%E5%88%B6mathpix-snipping/</url>
    <content><![CDATA[<br>

<p>相信大家都知道mathpix吧</p>
<p>一款特别的牛逼的img2latex软件</p>
<p>如果有小伙伴不知道的话可以看我之前的博客</p>
<p><a href="https://blog.csdn.net/weixin_44984664/article/details/104660033" target="_blank" rel="noopener">超级利器——mathpix   文本、图片公式转md/latex格式</a></p>
<p>牛逼虽说是牛逼，但是对于普通的用户来说每个月只有50次免费的机会</p>
<p>剩下的还得靠克金……</p>
<br>

<p>让我们看一下官网的价格</p>
<p><img src="https://img-blog.csdnimg.cn/20200331232929917.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDk4NDY2NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>虽说这几天美元贬值，但是算下来还是得每月二三十</p>
<p>像我这样节俭的人</p>
<p>……对，我就是穷，能把我咋滴( ﹁ ﹁ ) ~→</p>
<br>

<p>但是官方还是非常友好的，开放了API，让像我这样的开发者（qb）有了机遇</p>
<p>看一下API的价格</p>
<p><img src="https://img-blog.csdnimg.cn/20200331232133666.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDk4NDY2NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>每个月前1000次免费！！！</p>
<p>这对于普通人来说真的够用了</p>
<p>下面我通过调用官方给出的API写了个精简版的mathpix snipping</p>
<br>

<h3 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h3><p><img src="https://img-blog.csdnimg.cn/20200401113113292.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDk4NDY2NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<br>



<h3 id="功能如下"><a href="#功能如下" class="headerlink" title="功能如下"></a>功能如下</h3><ul>
<li>ALT+T 快捷键开始转换</li>
<li>ALT+C 复制转化为后的latex公式</li>
<li>上面部分可以将剪切板中图片显示出来</li>
</ul>
<br>

<p>本来还写了latex2img的部分，但是运行的不太稳定</p>
<p>已经把那部分注释掉了，思路是用<code>matplotlib</code>中的自带的显示latex公式，然后将横纵坐标轴去掉</p>
<p><code>plt.text</code>然后调整一下文字的显示位置和文字的大小等属性</p>
<br>

<p>话不多说直接上动画</p>
<p><img src="https://img-blog.csdnimg.cn/20200401111712522.gif" alt="在这里插入图片描述"></p>
<p>看起来效果还不错</p>
<p>下面就是教学时间了</p>
<p><img src="https://img-blog.csdnimg.cn/20200401112914577.gif" alt="在这里插入图片描述"></p>
<h3 id="一、注册API接口账号"><a href="#一、注册API接口账号" class="headerlink" title="一、注册API接口账号"></a>一、注册API接口账号</h3><p>先注册一个mathpix的账号</p>
<p><a href="https://dashboard.mathpix.com/login" target="_blank" rel="noopener">https://dashboard.mathpix.com/login</a></p>
<p><img src="https://img-blog.csdnimg.cn/20200331232256180.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDk4NDY2NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>然后需要接受一个激活的协议</p>
<p><img src="https://img-blog.csdnimg.cn/20200331232856633.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDk4NDY2NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>下面就是输入信用卡激活了</p>
<p><img src="https://img-blog.csdnimg.cn/20200331232218189.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDk4NDY2NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>之后就可以看到账户的信息啦</p>
<p><img src="https://img-blog.csdnimg.cn/20200331232752162.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDk4NDY2NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>这两个我们待会要用到</p>
<p>接下来就要调用接口了</p>
<p>这里给出官方的接口文档<a href="https://docs.mathpix.com/" target="_blank" rel="noopener">https://docs.mathpix.com</a></p>
<p>还有有一些API的示例</p>
<p><a href="https://github.com/Mathpix/api-examples" target="_blank" rel="noopener">https://github.com/Mathpix/api-examples</a></p>
<h3 id="二、敲代码"><a href="#二、敲代码" class="headerlink" title="二、敲代码"></a>二、敲代码</h3><p>我用的是python实现的，用<code>pyqt5</code> 做UI界面，再用<code>qss</code>加了一定的美化</p>
<br>



<h4 id="结构目录"><a href="#结构目录" class="headerlink" title="结构目录"></a>结构目录</h4><p><img src="https://img-blog.csdnimg.cn/20200331234023945.png" alt="在这里插入图片描述"></p>
<h4 id="用到的包"><a href="#用到的包" class="headerlink" title="用到的包"></a>用到的包</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> PyQt5.QtGui</span><br><span class="line"><span class="keyword">import</span> PyQt5.QtCore</span><br><span class="line"><span class="keyword">from</span> PyQt5.QtWidgets <span class="keyword">import</span> QApplication, QLabel, QPushButton, QWidget, QGridLayout, QLineEdit</span><br><span class="line"><span class="keyword">from</span> PyQt5.QtCore <span class="keyword">import</span> Qt</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> ImageGrab</span><br><span class="line"><span class="keyword">import</span> pyperclip</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br></pre></td></tr></table></figure>

<h4 id="核心代码"><a href="#核心代码" class="headerlink" title="核心代码"></a>核心代码</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">env = os.environ</span><br><span class="line"></span><br><span class="line">default_headers = &#123;</span><br><span class="line">    <span class="string">'app_id'</span>: env.get(<span class="string">'APP_ID'</span>, <span class="string">'你的APP_ID'</span>),</span><br><span class="line">    <span class="string">'app_key'</span>: env.get(<span class="string">'APP_KEY'</span>, <span class="string">'你的APP_KEY'</span>),</span><br><span class="line">    <span class="string">'Content-type'</span>: <span class="string">'application/json'</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">service = <span class="string">'https://api.mathpix.com/v3/latex'</span></span><br></pre></td></tr></table></figure>



<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">  	<span class="comment">#</span></span><br><span class="line">   <span class="comment"># Return the base64 encoding of an image with the given filename.</span></span><br><span class="line">   <span class="comment">#</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">image_uri</span><span class="params">(self,filename)</span>:</span></span><br><span class="line">       image_data = open(filename, <span class="string">"rb"</span>).read()</span><br><span class="line">       <span class="keyword">return</span> <span class="string">"data:image/jpg;base64,"</span> + base64.b64encode(image_data).decode()</span><br><span class="line"></span><br><span class="line">   <span class="comment"># Call the Mathpix service with the given arguments, headers, and timeout.</span></span><br><span class="line">   <span class="function"><span class="keyword">def</span> <span class="title">latex</span><span class="params">(self,args, headers=default_headers, timeout=<span class="number">30</span>)</span>:</span></span><br><span class="line">       r = requests.post(service,</span><br><span class="line">                         data=json.dumps(args), headers=headers, timeout=timeout)</span><br><span class="line">       <span class="keyword">return</span> json.loads(r.text)</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">def</span> <span class="title">convert</span><span class="params">(self)</span>:</span></span><br><span class="line">       </span><br><span class="line">       r = self.latex(&#123;</span><br><span class="line">            <span class="string">'src'</span>:self.image_uri(<span class="string">r".\img\equa.png"</span>),</span><br><span class="line">            <span class="string">'formats'</span>: [<span class="string">'latex_simplified'</span>]</span><br><span class="line">       &#125;)</span><br><span class="line">       </span><br><span class="line">       print(r[<span class="string">'latex_simplified'</span>])</span><br><span class="line">       </span><br><span class="line">       latex1 = r[<span class="string">'latex_simplified'</span>]</span><br><span class="line">       latex2 = <span class="string">'$'</span> + latex1 + <span class="string">'$'</span></span><br><span class="line">       latex3 = <span class="string">'$$'</span> + latex1 + <span class="string">'$$'</span></span><br><span class="line">       self.Latex1Edit.setText(latex1)</span><br><span class="line">       self.Latex2Edit.setText(latex2)</span><br><span class="line">       self.Latex3Edit.setText(latex3)</span><br><span class="line">       </span><br><span class="line">   <span class="comment">#</span></span><br><span class="line">   <span class="comment"># 识别剪贴板公式</span></span><br><span class="line">   <span class="comment">#</span></span><br><span class="line">   <span class="function"><span class="keyword">def</span> <span class="title">grapclipboard</span><span class="params">(self)</span>:</span></span><br><span class="line">       im = ImageGrab.grabclipboard()</span><br><span class="line">       im.save(<span class="string">r'.\img\equa.png'</span>, <span class="string">'PNG'</span>)</span><br><span class="line">       self.imgLable.setPixmap(PyQt5.QtGui.QPixmap(<span class="string">r'.\img\equa.png'</span>))</span><br></pre></td></tr></table></figure>

<br>

<h4 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> PyQt5.QtGui</span><br><span class="line"><span class="keyword">import</span> PyQt5.QtCore</span><br><span class="line"><span class="keyword">from</span> PyQt5.QtWidgets <span class="keyword">import</span> QApplication, QLabel, QPushButton, QWidget, QGridLayout, QLineEdit</span><br><span class="line"><span class="keyword">from</span> PyQt5.QtCore <span class="keyword">import</span> Qt</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> ImageGrab</span><br><span class="line"><span class="keyword">import</span> pyperclip</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line">env = os.environ</span><br><span class="line"></span><br><span class="line">default_headers = &#123;</span><br><span class="line">    <span class="string">'app_id'</span>: env.get(<span class="string">'APP_ID'</span>, <span class="string">'你的APP_ID'</span>),</span><br><span class="line">    <span class="string">'app_key'</span>: env.get(<span class="string">'APP_KEY'</span>, <span class="string">'你的APP_KEY'</span>),</span><br><span class="line">    <span class="string">'Content-type'</span>: <span class="string">'application/json'</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">service = <span class="string">'https://api.mathpix.com/v3/latex'</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Img2Latex</span><span class="params">(QWidget)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        super().__init__()</span><br><span class="line">        self.initUI()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">initUI</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.setGeometry(<span class="number">300</span>, <span class="number">300</span>, <span class="number">800</span>, <span class="number">700</span>)</span><br><span class="line">        self.setWindowTitle(<span class="string">'Img2Latex'</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># copy latex</span></span><br><span class="line">        self.Latex1copyBtn = QPushButton()</span><br><span class="line">        self.Latex2copyBtn = QPushButton()</span><br><span class="line">        self.Latex3copyBtn = QPushButton()</span><br><span class="line">        <span class="comment"># set copy btn icon</span></span><br><span class="line">        self.Latex1copyBtn.setIcon(PyQt5.QtGui.QIcon(<span class="string">r".\img\copy.png"</span>))</span><br><span class="line">        self.Latex2copyBtn.setIcon(PyQt5.QtGui.QIcon(<span class="string">r".\img\copy.png"</span>))</span><br><span class="line">        self.Latex3copyBtn.setIcon(PyQt5.QtGui.QIcon(<span class="string">r".\img\copy.png"</span>))</span><br><span class="line"></span><br><span class="line">        <span class="comment"># edit latex</span></span><br><span class="line">        self.Latex1EditBtn = QPushButton()</span><br><span class="line">        self.Latex2EditBtn = QPushButton()</span><br><span class="line">        self.Latex3EditBtn = QPushButton()</span><br><span class="line">        <span class="comment"># set edit btn icon</span></span><br><span class="line">        self.Latex1EditBtn.setIcon(PyQt5.QtGui.QIcon(<span class="string">r".\img\edit.png"</span>))</span><br><span class="line">        self.Latex2EditBtn.setIcon(PyQt5.QtGui.QIcon(<span class="string">r".\img\edit.png"</span>))</span><br><span class="line">        self.Latex3EditBtn.setIcon(PyQt5.QtGui.QIcon(<span class="string">r".\img\edit.png"</span>))</span><br><span class="line"></span><br><span class="line">        <span class="comment"># img to latex convert btn</span></span><br><span class="line">        self.img2latexBtn = QPushButton(<span class="string">'convert'</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># show the picture on clipboard</span></span><br><span class="line">        self.imgLable = QLabel()</span><br><span class="line"></span><br><span class="line">        <span class="comment"># show the formula in latex</span></span><br><span class="line">        self.Latex1Edit = QLineEdit()</span><br><span class="line">        self.Latex2Edit = QLineEdit()</span><br><span class="line">        self.Latex3Edit = QLineEdit()</span><br><span class="line">        self.Latex1Edit.setEnabled(<span class="literal">False</span>)</span><br><span class="line">        self.Latex2Edit.setEnabled(<span class="literal">False</span>)</span><br><span class="line">        self.Latex3Edit.setEnabled(<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># # show the convert latex result</span></span><br><span class="line">        <span class="comment"># self.reviewImgLable = QLabel()</span></span><br><span class="line">        <span class="comment"># self.reviewImgLable.setStyleSheet("border: 2px solid red")</span></span><br><span class="line"></span><br><span class="line">        grid = QGridLayout()</span><br><span class="line">        grid.setSpacing(<span class="number">20</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 排版</span></span><br><span class="line">        grid.addWidget(self.imgLable, <span class="number">1</span>, <span class="number">0</span>, <span class="number">5</span>, <span class="number">3</span>)</span><br><span class="line"></span><br><span class="line">        grid.addWidget(self.img2latexBtn,<span class="number">6</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">        grid.addWidget(self.Latex1Edit, <span class="number">7</span>, <span class="number">0</span>)</span><br><span class="line">        grid.addWidget(self.Latex1copyBtn, <span class="number">7</span>, <span class="number">1</span>)</span><br><span class="line">        <span class="comment"># grid.addWidget(self.Latex1EditBtn, 7, 2)</span></span><br><span class="line"></span><br><span class="line">        grid.addWidget(self.Latex2copyBtn, <span class="number">8</span>, <span class="number">1</span>)</span><br><span class="line">        grid.addWidget(self.Latex2Edit, <span class="number">8</span>, <span class="number">0</span>)</span><br><span class="line">        <span class="comment"># grid.addWidget(self.Latex2EditBtn, 8, 2)</span></span><br><span class="line"></span><br><span class="line">        grid.addWidget(self.Latex3copyBtn, <span class="number">9</span>, <span class="number">1</span>)</span><br><span class="line">        grid.addWidget(self.Latex3Edit, <span class="number">9</span>, <span class="number">0</span>)</span><br><span class="line">        <span class="comment"># grid.addWidget(self.Latex3EditBtn, 9, 2)</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># grid.addWidget(self.reviewImgLable, 10, 0, 4, 3)</span></span><br><span class="line"></span><br><span class="line">        self.setLayout(grid)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># sign and slot</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># img to latex convert</span></span><br><span class="line">        self.img2latexBtn.clicked.connect(self.convert)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># copy latex</span></span><br><span class="line">        self.Latex1copyBtn.clicked.connect(self.copyLatex1)</span><br><span class="line">        self.Latex2copyBtn.clicked.connect(self.copyLatex2)</span><br><span class="line">        self.Latex3copyBtn.clicked.connect(self.copyLatex3)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># edit latex</span></span><br><span class="line">        <span class="comment"># self.Latex1EditBtn.clicked.connect(self.Latex1EditImg)</span></span><br><span class="line">        <span class="comment"># self.Latex1Edit.textChanged.connect(self.Latex1EditImg)</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># self.Latex2EditBtn.clicked.connect(self.Latex2EditImg)</span></span><br><span class="line">        <span class="comment"># self.Latex2Edit.textChanged.connect(self.Latex2EditImg)</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># self.Latex3EditBtn.clicked.connect(self.Latex3EditImg)</span></span><br><span class="line">        <span class="comment"># self.Latex3Edit.textChanged.connect(self.Latex3EditImg)</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># beautify the window</span></span><br><span class="line">        self.Beautify()</span><br><span class="line">        self.show()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">Beautify</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.setWindowOpacity(<span class="number">0.9</span>)  <span class="comment"># 设置窗口透明度</span></span><br><span class="line">        <span class="comment"># self.setAttribute(qtpy.QtCore.Qt.WA_TranslucentBackground) # 设置窗口背景透明</span></span><br><span class="line">        <span class="comment"># self.setWindowFlag(qtpy.QtCore.Qt.FramelessWindowHint) # 隐藏边框</span></span><br><span class="line">        pe = PyQt5.QtGui.QPalette()</span><br><span class="line">        self.setAutoFillBackground(<span class="literal">True</span>)</span><br><span class="line">        <span class="comment"># pe.setColor(PyQt5.QtGui.QPalette.Window, Qt.Black)  #设置背景色</span></span><br><span class="line">        pe.setColor(PyQt5.QtGui.QPalette.Background, Qt.black)</span><br><span class="line">        self.setPalette(pe)</span><br><span class="line">        self.imgLable.setStyleSheet(</span><br><span class="line">            <span class="string">''' QLabel&#123;</span></span><br><span class="line"><span class="string">                border: 2px solid red;</span></span><br><span class="line"><span class="string">                border-radius:15px;</span></span><br><span class="line"><span class="string">                padding:2px 4px;</span></span><br><span class="line"><span class="string">                background-color:#aaa;</span></span><br><span class="line"><span class="string">            &#125;'''</span>)</span><br><span class="line">        </span><br><span class="line">        self.Latex1Edit.setStyleSheet(</span><br><span class="line">            <span class="string">'''QLineEdit&#123;</span></span><br><span class="line"><span class="string">                border:1px solid gray;</span></span><br><span class="line"><span class="string">                border-radius:10px;</span></span><br><span class="line"><span class="string">                padding:2px 4px;</span></span><br><span class="line"><span class="string">                background-color:#ddd;</span></span><br><span class="line"><span class="string">                height:35px;</span></span><br><span class="line"><span class="string">                font-color:black;</span></span><br><span class="line"><span class="string">                font-weight:1000;</span></span><br><span class="line"><span class="string">                font-size:24px</span></span><br><span class="line"><span class="string">            &#125;'''</span>)</span><br><span class="line">        self.Latex2Edit.setStyleSheet(</span><br><span class="line">            <span class="string">'''QLineEdit&#123;</span></span><br><span class="line"><span class="string">                border:1px solid gray;</span></span><br><span class="line"><span class="string">                border-radius:10px;</span></span><br><span class="line"><span class="string">                padding:2px 4px;</span></span><br><span class="line"><span class="string">                background-color:#ddd;</span></span><br><span class="line"><span class="string">                height:35px;</span></span><br><span class="line"><span class="string">                font-color:black;</span></span><br><span class="line"><span class="string">                font-weight:1000;</span></span><br><span class="line"><span class="string">                font-size:24px</span></span><br><span class="line"><span class="string">            &#125;'''</span>)</span><br><span class="line">        self.Latex3Edit.setStyleSheet(</span><br><span class="line">            <span class="string">'''QLineEdit&#123;</span></span><br><span class="line"><span class="string">                border:1px solid gray;</span></span><br><span class="line"><span class="string">                border-radius:10px;</span></span><br><span class="line"><span class="string">                padding:2px 4px;</span></span><br><span class="line"><span class="string">                background-color:#ddd;</span></span><br><span class="line"><span class="string">                height:35px;</span></span><br><span class="line"><span class="string">                font-color:black;</span></span><br><span class="line"><span class="string">                font-weight:1000;</span></span><br><span class="line"><span class="string">                font-size:24px</span></span><br><span class="line"><span class="string">            &#125;'''</span>)</span><br><span class="line"></span><br><span class="line">        self.Latex1copyBtn.setStyleSheet(</span><br><span class="line">            <span class="string">'''QPushButton&#123;</span></span><br><span class="line"><span class="string">                border:1px solid gray;</span></span><br><span class="line"><span class="string">                border-radius:4px;</span></span><br><span class="line"><span class="string">                padding:5px 5px;</span></span><br><span class="line"><span class="string">                height:35px</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">            &#125;'''</span>)</span><br><span class="line">        self.Latex2copyBtn.setStyleSheet(</span><br><span class="line">            <span class="string">'''QPushButton&#123;</span></span><br><span class="line"><span class="string">                border:1px solid gray;</span></span><br><span class="line"><span class="string">                border-radius:4px;</span></span><br><span class="line"><span class="string">                padding:5px 5px;</span></span><br><span class="line"><span class="string">                height:35px</span></span><br><span class="line"><span class="string">            &#125;'''</span>)</span><br><span class="line">        self.Latex3copyBtn.setStyleSheet(</span><br><span class="line">            <span class="string">'''QPushButton&#123;</span></span><br><span class="line"><span class="string">                border:1px solid gray;</span></span><br><span class="line"><span class="string">                border-radius:4px;</span></span><br><span class="line"><span class="string">                padding:5px 5px;</span></span><br><span class="line"><span class="string">                height:35px</span></span><br><span class="line"><span class="string">            &#125;'''</span>)</span><br><span class="line"></span><br><span class="line">        self.img2latexBtn.setStyleSheet(</span><br><span class="line">            <span class="string">'''QPushButton&#123;</span></span><br><span class="line"><span class="string">                border:2px solid gray;</span></span><br><span class="line"><span class="string">                border-radius:10px;</span></span><br><span class="line"><span class="string">                padding:5px 5px;</span></span><br><span class="line"><span class="string">                background-color:#555;</span></span><br><span class="line"><span class="string">                font-size:24px;</span></span><br><span class="line"><span class="string">                font-color:#fff;</span></span><br><span class="line"><span class="string">                font-weight:700;</span></span><br><span class="line"><span class="string">                font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;</span></span><br><span class="line"><span class="string">            &#125;'''</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment"># Return the base64 encoding of an image with the given filename.</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">image_uri</span><span class="params">(self,filename)</span>:</span></span><br><span class="line">        image_data = open(filename, <span class="string">"rb"</span>).read()</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"data:image/jpg;base64,"</span> + base64.b64encode(image_data).decode()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Call the Mathpix service with the given arguments, headers, and timeout.</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">latex</span><span class="params">(self,args, headers=default_headers, timeout=<span class="number">30</span>)</span>:</span></span><br><span class="line">        r = requests.post(service,</span><br><span class="line">                          data=json.dumps(args), headers=headers, timeout=timeout)</span><br><span class="line">        <span class="keyword">return</span> json.loads(r.text)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">convert</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.grapclipboard()</span><br><span class="line">        r = self.latex(&#123;</span><br><span class="line">            <span class="string">'src'</span>:self.image_uri(<span class="string">r".\img\equa.png"</span>),</span><br><span class="line">            <span class="string">'formats'</span>: [<span class="string">'latex_simplified'</span>]</span><br><span class="line">        &#125;)</span><br><span class="line">        <span class="comment"># print(r['latex_simplified'])</span></span><br><span class="line">        latex1 = r[<span class="string">'latex_simplified'</span>]</span><br><span class="line"></span><br><span class="line">        <span class="comment"># test</span></span><br><span class="line">        <span class="comment"># latex1='111'</span></span><br><span class="line">        latex2 = <span class="string">'$'</span> + latex1 + <span class="string">'$'</span></span><br><span class="line">        latex3 = <span class="string">'$$'</span> + latex1 + <span class="string">'$$'</span></span><br><span class="line">        self.Latex1Edit.setText(latex1)</span><br><span class="line">        self.Latex2Edit.setText(latex2)</span><br><span class="line">        self.Latex3Edit.setText(latex3)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">copyLatex1</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="comment"># get the latex formula</span></span><br><span class="line">        text = self.Latex1Edit.text()</span><br><span class="line">        <span class="comment"># copy it to clipboard</span></span><br><span class="line">        pyperclip.copy(text)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">copyLatex2</span><span class="params">(self)</span>:</span></span><br><span class="line">        text = self.Latex2Edit.text()</span><br><span class="line">        pyperclip.copy(text)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">copyLatex3</span><span class="params">(self)</span>:</span></span><br><span class="line">        text = self.Latex3Edit.text()</span><br><span class="line">        pyperclip.copy(text)</span><br><span class="line"></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment"># 识别剪贴板公式</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">grapclipboard</span><span class="params">(self)</span>:</span></span><br><span class="line">        im = ImageGrab.grabclipboard()</span><br><span class="line">        im.save(<span class="string">r'.\img\equa.png'</span>, <span class="string">'PNG'</span>)</span><br><span class="line">        self.imgLable.setPixmap(PyQt5.QtGui.QPixmap(<span class="string">r'.\img\equa.png'</span>))</span><br><span class="line"></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment"># 为程序添加快捷键</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">	<span class="comment"># 可以自己定义</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">keyPressEvent</span><span class="params">(self, event)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> (event.key() == Qt.Key_T)<span class="keyword">and</span>(event.modifiers() == Qt.AltModifier):</span><br><span class="line">            self.convert()</span><br><span class="line">        <span class="keyword">if</span> (event.key() == Qt.Key_C)<span class="keyword">and</span>(event.modifiers() == Qt.AltModifier):</span><br><span class="line">            self.copyLatex3()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app = QApplication(sys.argv)</span><br><span class="line">    ex = Img2Latex()</span><br><span class="line">    sys.exit(app.exec_())</span><br></pre></td></tr></table></figure>

<p>篇幅有限latex2img部分我已经去掉了</p>
<p>有兴趣的小伙伴可以在我的github上获得完整版资源</p>
<p>地址<br><a href="https://github.com/Joshua-li-yi/img2latex" target="_blank" rel="noopener">https://github.com/Joshua-li-yi/img2latex</a><br><br></p>
<p>所有的接口调用记录可以在这个地址获取</p>
<p><a href="https://dashboard.mathpix.com/user-data" target="_blank" rel="noopener">https://dashboard.mathpix.com/user-data</a></p>
<p><img src="https://img-blog.csdnimg.cn/20200401114608738.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDk4NDY2NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<br>

<h3 id="三、最后"><a href="#三、最后" class="headerlink" title="三、最后"></a>三、最后</h3><p>如果觉得此文对你有帮助，请各位大大们给个三连，让更多的童鞋可以看到</p>
<p>谢谢老铁们的支持~~</p>
]]></content>
      <categories>
        <category>可视化 计算机基础</category>
      </categories>
      <tags>
        <tag>可视化 计算机基础 python</tag>
      </tags>
  </entry>
  <entry>
    <title>分之策略及其应用</title>
    <url>/2020/03/31/%E5%88%86%E4%B9%8B%E7%AD%96%E7%95%A5%E5%8F%8A%E5%85%B6%E5%BA%94%E7%94%A8/</url>
    <content><![CDATA[<h3 id="一、分治策略简介"><a href="#一、分治策略简介" class="headerlink" title="一、分治策略简介"></a>一、分治策略简介</h3><p>在很多情况下，分治策略有可能是简单而强有力的方法，可以用来提高算法的效率</p>
<p>不要问我为什么，他就是这样的……</p>
<p>大概的步骤有三部分</p>
<p>1，将输入的数据分成若干部分</p>
<p>2、递归的求解每个部分的问题</p>
<p>3、将子问题的解组合成为一个全局的解</p>
<h3 id="二、应用领域"><a href="#二、应用领域" class="headerlink" title="二、应用领域"></a>二、应用领域</h3><p>分治算法可以被运用到许许多多的方面，可以充当其他算法的一个i组成部分，也可以稍做修改成为另一个算法，例如</p>
<p>归并排序</p>
<p>找平面上最邻近的点对问题</p>
<p>降低整数相乘的复杂度</p>
<p>消除信号的噪音</p>
<p>……<br><br></p>
<h3 id="三、算法核心部分分析"><a href="#三、算法核心部分分析" class="headerlink" title="三、算法核心部分分析"></a>三、算法核心部分分析</h3><p>马克思和恩格斯教导我们一定要抓住主要矛盾的主要方面</p>
<p>从我的角度看，我们学习分治算法的主要矛盾是将其应用的其他方面</p>
<p>而主要方面就是一定要理解算法的核心部分</p>
<p>这样就可以根据实际情况对分治算法做出适当的修改，提高解决问题的效率</p>
<p><strong>接下来我将会通过解决一下几个问题，让大家比较简单的掌握分治算法</strong></p>
<ul>
<li><p><strong>分治算法的整体步骤大概是什么样的</strong></p>
</li>
<li><p><strong>怎么预计和分析一个分治算法的好坏，即对分治算法的复杂度进行评估</strong></p>
</li>
<li><p><strong>怎么改进一个分治算法</strong></p>
</li>
</ul>
<p>上面以及提到过分治算法的大概过程</p>
<p>我再重述一下</p>
<ol>
<li><p>将输入的数据分成若干部分</p>
</li>
<li><p>递归的求解每个部分的问题</p>
</li>
<li><p>将子问题的解组合成为一个全局的解</p>
</li>
</ol>
<p>为了让大家更好的理解这个过程就拿最为熟悉的归并排序算法举例</p>
<br>

<p>嘛也不说直接上源代码</p>
<p>python实现</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 归并排序主体</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">mergeSort</span><span class="params">(arr)</span>:</span></span><br><span class="line">    <span class="comment"># 如果数组中只有两个数</span></span><br><span class="line">    <span class="keyword">if</span>(len(arr)&lt;<span class="number">2</span>):</span><br><span class="line">        <span class="keyword">return</span> arr</span><br><span class="line">    </span><br><span class="line">    middle = math.floor(len(arr)/<span class="number">2</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 将现有的整个数组分成左右两个部分，采用的切割方法是从middle处切割</span></span><br><span class="line">    left, right = arr[<span class="number">0</span>:middle], arr[middle:]</span><br><span class="line">    <span class="comment"># 最后递归合并</span></span><br><span class="line">    <span class="keyword">return</span> merge(mergeSort(left), mergeSort(right))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">merge</span><span class="params">(left,right)</span>:</span></span><br><span class="line">    <span class="comment"># 存储结果</span></span><br><span class="line">    result = []</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 比较排头的元素</span></span><br><span class="line">    <span class="keyword">while</span> left <span class="keyword">and</span> right:</span><br><span class="line">        <span class="keyword">if</span> left[<span class="number">0</span>] &lt;= right[<span class="number">0</span>]:</span><br><span class="line">            result.append(left.pop(<span class="number">0</span>))</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            result.append(right.pop(<span class="number">0</span>))</span><br><span class="line">    <span class="comment"># 合并左右部分</span></span><br><span class="line">    <span class="keyword">while</span> left:</span><br><span class="line">        result.append(left.pop(<span class="number">0</span>))</span><br><span class="line">    <span class="keyword">while</span> right:</span><br><span class="line">        result.append(right.pop(<span class="number">0</span>))</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    list = [<span class="number">1</span>, <span class="number">5</span>, <span class="number">8</span>, <span class="number">45</span>, <span class="number">98</span>, <span class="number">90</span>, <span class="number">78</span>, <span class="number">99</span>, <span class="number">123</span>, <span class="number">2</span>]</span><br><span class="line">    print(<span class="string">"List is:"</span>, list)</span><br><span class="line">    result = mergeSort(list)</span><br><span class="line">    print(<span class="string">"list sorted :"</span>, result)</span><br></pre></td></tr></table></figure>

<p>相信很多人又这样的问题，为啥这玩意要在middle处切割的，又为啥要分成两个部分，不分成三个，四个……部分呢？这些问题就是我们下面要详细讨论的了</p>
<br>

<p>“小朋友，你是否有很多问好？？？”</p>
<br>

<p>说实话，一开始学的时候我也一脸懵逼━┳━　━┳━</p>
<p>要想弄懂这个问题就我们就需要知道下面这个公式，并且需要会进行对应的推导</p>
<br>

<h3 id="四、公式推导"><a href="#四、公式推导" class="headerlink" title="四、公式推导"></a>四、公式推导</h3><p>首先定义T(n)为该算法在规模为n的输入实例的最坏的运行时间</p>
<p>然后看</p>
<p>$$ T\left( n \right) =\left{ \begin{array}{l}     aT\left( n/b \right) +g\left( n \right) \left( n&gt;1 \right)\   0\ \left( n=1 \right)\ \end{array} \right. $$ </p>
<p>这个公式</p>
<p>这个公式就是归并排序的递推公式，下面的很多问题就是围绕这个问题展开的</p>
<br>

<h4 id="公式的含义"><a href="#公式的含义" class="headerlink" title="公式的含义"></a>公式的含义</h4><ul>
<li><p>一个规模为n的问题每一次被分成了a个子问题，</p>
</li>
<li><p>每个问题的规模是n/b</p>
</li>
<li><p>各个子问题的解的复杂度为 g(n)</p>
</li>
</ul>
<br>

<p>接下来的这个图你们一定就可以看懂了</p>
<p><img src="https://img-blog.csdnimg.cn/20200330211911994.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDk4NDY2NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>这个图就是上面归并排序的分治策略图</p>
<br>

<h4 id="n为2的倍数"><a href="#n为2的倍数" class="headerlink" title="n为2的倍数"></a>n为2的倍数</h4><p>接下来我们就手动推导出归并排序的复杂度为$T\left( n \right) = n\log_{2}n$</p>
<p>首先根据</p>
<p>$$T\left( n \right) = aT\left( \frac{n}{b} \right) + g\left( n \right)$$</p>
<p>我们可以写出</p>
<p>归并排序中每一次被分为2个子问题，每一个子问题的规模是其爸爸的一半，因为归并排序进行排序操作的时候只比较头两个元素的大小，当一半为空时，直接把另一半的其他部分加到结果上就行，所以每一个子问题的复杂度为n</p>
<p>首先从简单的n为2的倍数开始</p>
<p>$$T\left( n \right) = 2T\left( \frac{n}{2} \right) + n$$</p>
<p>$$\frac{T\left( n \right)}{n} = \frac{2T\left( \frac{n}{2} \right)}{n} + 1$$</p>
<p>$$= \frac{T\left( \frac{n}{2} \right)}{\frac{n}{2}} + 1$$</p>
<p>$$= \frac{T\left( \frac{n}{4} \right)}{\frac{n}{4}} + 1 + 1$$</p>
<p>$$= \frac{T\left( \frac{n}{8} \right)}{\left( \frac{n}{8} \right)} + 1 + 1 + 1$$</p>
<p>$$\ldots\ldots$$</p>
<p>$$= \frac{T\left( \frac{n}{n} \right)}{\left( \frac{n}{n} \right)} + \log_{2}n*1$$</p>
<p>$$= \log_{2}n$$</p>
<p>$$T\left( n \right) = n\log_{2}n$$</p>
<br>

<h4 id="n为自然数"><a href="#n为自然数" class="headerlink" title="n为自然数"></a>n为自然数</h4><p>其次对于一般情况我们要证明</p>
<p>$$T\left( n \right) \leq n\ ceiling\left( \log_{2}n \right)$$</p>
<p>递推公式为<br>$$ T\left( n \right) &lt;=\ \left{ \begin{array}{l}     0\ \left( n=1 \right)\     T\left( ceiling\left( n/2 \right) \right) +T\left( floor\left( n/2 \right) \right) +n\ \left( n&gt;1 \right)\ \end{array} \right.  $$<br>我们采用归纳法</p>
<p>当n= 1时显然成立</p>
<p>令 $n_{1} = floor\left( \frac{n}{2} \right)\ n_{2} = \text{ceiling}\left( \frac{n}{2} \right)$</p>
<p>假设$n - 1$命题时命题成立</p>
<p>$$ T\left( n \right) &lt;=T\left( n_1 \right) +T\left( n_2 \right) +n $$ $$ &lt;=n_1\left( ceiling\left( \log _2n_1 \right) \right) +n_2\left( ceiling\left( \log _2\ n_2 \right) \right) +n $$ $$ &lt;=n_1\left( ceiling\left( \log _2\ n_2 \right) \right) +n_2\left( ceiling\left( \log _2\ n_2 \right) \right) +n $$ $$ =n\left( ceiling\left( \log _2\ n_2 \right) \right) +n $$ $$ &lt;=n\left( ceiling\left( \log _2\ ceiling\left( n/2 \right) \right) \right) +n $$ $$ &lt;=n\left( ceiling\left( \log _2\ n \right) -1 \right) +n $$ $$ &lt;=n\left( ceiling\left( \log _2\ n \right) \right)  $$ </p>
<p>综上，我们回答刚刚的问题为啥这玩意要在middle处切割的，又为啥要分成两个部分，不分成三个，四个……部分呢？</p>
<p>其实可以在不同地方切割，我们一般选择在middle出切割，也可选择切成多个部分，但是这样的复杂度时不同的</p>
<br>

<h4 id="g-n-c"><a href="#g-n-c" class="headerlink" title="g(n)=c"></a>g(n)=c</h4><p>对于g(n)=c</p>
<p>这个公式最后可以证明</p>
<p>$$T\left( n \right) = O\left( n^{\log_{b}a} \right)\ $$</p>
<br>

<h4 id="g-n-c-n-d"><a href="#g-n-c-n-d" class="headerlink" title="g(n) = c*n^d"></a>g(n) = c*n^d</h4><p>对于$g\left( n \right) = \text{cn}^{d}$</p>
<p>满足如下定理</p>
<p>设函数满足这个递推关系$T\left( n \right) = aT\left( \frac{n}{b} \right) + \text{cn}^{d}$的增函数，其中$n = b^{k}$,a&gt;=1，b是大于1的正整数，c，d为实数且c&gt;=0,d&gt;=0，那么<br>$$ T\left( n \right) =\left{ \begin{array}{l}     O\left( n^d \right) \ a&lt;b^d\     O\left( n^d\log\text{\ }n \right) \ a=b^d\     O\left( n^{\log _a\ b} \right) \ a&gt;b^d\ \end{array} \right.  $$<br>有兴趣的可以自己证明一下，这里就不给出证明了</p>
<p>敲公式实在太累人了ε(┬┬﹏┬┬)3<br><br></p>
<h3 id="五、分治算法的应用"><a href="#五、分治算法的应用" class="headerlink" title="五、分治算法的应用"></a>五、分治算法的应用</h3><p>经过对核心算法的理解</p>
<p>我们就可以解决之前提出的问题了<br><br></p>
<p>分治算法第一步就是就是将问题分成对应的a部分，每个问题的规模是n/b之后递归求解每一个问题，最后进行组合</p>
<p>那怎么对一个分治算法的复杂度进行评估呢？</p>
<p>我们可以用上面T(n)公式进行推导，将对应的a，b，g(n)，带入然后计算出T(n)</p>
<p>同时我们可以运用不同的计算方法改变a，b，g(n)的值，由此来达到改进算法效率的目的</p>
<br>

<p>接下来我们就通过改进整数的乘法来看一下分治算法的牛逼之处吧</p>
<p>最普通的乘法少说一点吧</p>
<p>x*y，在计算机中是通过二进制来计算的，所以是先转为二进制再相乘</p>
<p>复杂度为O(n^2)</p>
<p>接下来我们通过分治算法来进行改进</p>
<br>

<p>我们令</p>
<p>$$ x = 2^{(n/2)}*x1+x0$$</p>
<p>$$y = 2^{(n/2)}*y1+y0$$</p>
<p>$$x<em>y = (2^{(n/2)}</em>x1+x0)(2^{(n/2)}*y1+y0)$$</p>
<p>$$= 2^n <em>x1</em> y1+2^{(n/2)}<em>(x1</em>y0+x0<em>y1)+x0</em>y0$$</p>
<p>我们可以通过递推公式来看一下，现在的算法优劣情况</p>
<p>$$T(n) = 4T(n/2) +O(n) $$</p>
<p>$$=&gt; T(n)=O(n^2)$$</p>
<p>O(n) 为每次移位和相加的复杂度</p>
<p>貌似没有啥改变……<br><br></p>
<p>接下来看看我们可不可以通过改变a，b，O(n)的值来降低复杂度</p>
<p>可以看出O(n)，没有啥可以很好的改进的地方</p>
<p>但是我们可以发现</p>
<p>$$x<em>y=2^n *x1</em> y1+2^{(n/2)}<em>(x1</em>y0+x0<em>y1)+x0</em>y0$$</p>
<p>$$= 2^n <em>x1*y1+2^{(n/2)}</em>((x1+x0)<em>(y1+y0)-x1</em>y1-x0<em>y0)+x0</em>y0$$</p>
<p>这样就成将4次乘法降低为3次了<br>让我们再来看一次复杂度</p>
<p>$$T(n) = 3T(n/2) +O(n)=&gt;T(n)=O(n^{(1.585)})$$</p>
<p>d=====(￣▽￣*)b</p>
<p>让我们最后再看一下改进后的整数相乘的伪代码</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Recursive_Multiply</span><span class="params">(x,y)</span>:</span></span><br><span class="line">    x = x1 * <span class="number">2</span>**(n/<span class="number">2</span>) + x0</span><br><span class="line">    y = y1 * <span class="number">2</span>**(n/<span class="number">2</span>) + y0</span><br><span class="line">    <span class="comment"># 计算x1+x0 ,y1+y0</span></span><br><span class="line">    p = Recursive_Multiply(x1+x0,y1+y0)</span><br><span class="line">    </span><br><span class="line">    x1 * y1 = Recursive_Multiply(x1,y1)</span><br><span class="line">    x0 * y0 = Recursive_Multiply(x0,y0)</span><br><span class="line">    <span class="keyword">return</span> x1 * y1 * <span class="number">2</span>**n + (p-x1 * y1 - x0 * y0) * <span class="number">2</span>**(n/<span class="number">2</span>) + x0 * y0</span><br></pre></td></tr></table></figure>

<p>小编是个菜鸡，若有错误请大佬们不吝指正</p>
]]></content>
      <categories>
        <category>算法</category>
      </categories>
      <tags>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title>神器集合（1）</title>
    <url>/2020/03/26/%E7%A5%9E%E5%99%A8%E9%9B%86%E5%90%88%EF%BC%881%EF%BC%89/</url>
    <content><![CDATA[<h2 id="神器集合（1）"><a href="#神器集合（1）" class="headerlink" title="神器集合（1）"></a>神器集合（1）</h2><p>本章节干货满满哦~~</p>
<p>一章可以让你成为别人家的孩子o(*≧▽≦)ツ</p>
<br>

<h3 id="一、个人网上图片库"><a href="#一、个人网上图片库" class="headerlink" title="一、个人网上图片库"></a>一、个人网上图片库</h3><p>搭建一个网上的图片库，一方面自己的博客图片有个归宿</p>
<p>另一方面也可以保存一些自己喜欢的图片哦</p>
<p><a href="[https://www.qiniu.com](https://www.qiniu.com/)">七牛云</a><br><img src="https://img-blog.csdnimg.cn/20200320142255476.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDk4NDY2NA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<p>搭建教程见这里<a href="https://www.jianshu.com/p/6a118a49ab1f" target="_blank" rel="noopener">点我^ - ^</a></p>
<br>

<h3 id="二、刷题"><a href="#二、刷题" class="headerlink" title="二、刷题"></a>二、刷题</h3><p>程序员必备，话不多说往下看就好~</p>
<p><a href="[https://www.nowcoder.com](https://www.nowcoder.com/)">牛客网</a></p>
<p><a href="[https://leetcode-cn.com](https://leetcode-cn.com/)">leetcode</a><br><img src="https://img-blog.csdnimg.cn/20200320142348560.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDk4NDY2NA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<p><a href="https://www.jiuzhang.com/" target="_blank" rel="noopener">九章算法</a><br><img src="https://img-blog.csdnimg.cn/20200320142405460.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDk4NDY2NA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<p><a href="https://careercup.com/" target="_blank" rel="noopener">careercup</a><br><img src="https://img-blog.csdnimg.cn/20200320142431287.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDk4NDY2NA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<p><a href="https://www.lintcode.com/" target="_blank" rel="noopener">lintcode</a><br><img src="https://img-blog.csdnimg.cn/20200320142448402.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDk4NDY2NA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<br>

<h3 id="三、chrome插件"><a href="#三、chrome插件" class="headerlink" title="三、chrome插件"></a>三、chrome插件</h3><p>配上几款好的浏览器插件可以上自己的浏览器成为浏览器中的钢铁侠ヾ(≧▽≦*)o</p>
<ol>
<li>Speed control html5 video <ol>
<li>可以控制一些网页的视频播放速度（雨课堂，）</li>
</ol>
</li>
<li>Send to OneNote<ol>
<li>可以将网页发到OneNote当中</li>
</ol>
</li>
<li>拓展管理器</li>
<li>哔哩哔哩助手</li>
<li>购物党</li>
<li>Lastpass</li>
<li>图片助手</li>
<li>广告净化器</li>
</ol>
<p>更多优质资源请看小编搜集的素材</p>
<p><a href="https://www.bilibili.com/video/av77046175" target="_blank" rel="noopener">https://www.bilibili.com/video/av77046175</a></p>
<br>

<h3 id="四、PPT插件"><a href="#四、PPT插件" class="headerlink" title="四、PPT插件"></a>四、PPT插件</h3><p>几款PPT插件就可以让你成为PPT大神</p>
<p>让甲方爸爸、和老师再也不用担心啦</p>
<p><a href="http://meihua.docer.com/" target="_blank" rel="noopener"><strong>PPT美化大师</strong></a></p>
<ul>
<li>内容规划，生成PPT模版</li>
<li>海量优质PPT在线选择</li>
<li>在线图片、图形、幻灯片素材</li>
<li>导出各种类型格式1（拼图、全图、图片、视频）</li>
<li>批量删除（动画、切换页、备注）<br><img src="https://img-blog.csdnimg.cn/202003201425155.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDk4NDY2NA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></li>
</ul>
<p><a href="https://www.papocket.com/" target="_blank" rel="noopener"><strong>口袋动画PA</strong></a></p>
<ul>
<li>动画删除</li>
<li>动画序列</li>
<li>颜色替换</li>
<li>动画库</li>
<li>高级动画设计<br><img src="https://img-blog.csdnimg.cn/20200320142532744.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDk4NDY2NA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></li>
</ul>
<p><a href="https://www.islide.cc/" target="_blank" rel="noopener"><strong>iSlide</strong></a></p>
<ul>
<li>一键优化</li>
<li>素材资源</li>
<li>智能图表<br><img src="https://img-blog.csdnimg.cn/20200320142554394.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDk4NDY2NA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></li>
</ul>
<p><a href="http://www.1ppt.com/" target="_blank" rel="noopener">第一PPT</a>可以免费下载PPT模版哦(๑•̀ㅂ•́)و✧<br><img src="https://img-blog.csdnimg.cn/20200320142608835.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDk4NDY2NA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<br>

<h3 id="五、程序员必备平台"><a href="#五、程序员必备平台" class="headerlink" title="五、程序员必备平台"></a>五、程序员必备平台</h3><p>程序员的天堂，我们的世界</p>
<p><a href="https://www.v2ex.com" target="_blank" rel="noopener">v2ex</a><br><img src="https://img-blog.csdnimg.cn/20200320142626160.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDk4NDY2NA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<p><a href="https://stackoverflow.com/" target="_blank" rel="noopener">stackoverflow</a><br><img src="https://img-blog.csdnimg.cn/20200320142638409.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDk4NDY2NA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<p><a href="https://github.com/" target="_blank" rel="noopener">github</a></p>
<p><a href="https://www.linkedin.com/feed/" target="_blank" rel="noopener">领英</a><br><img src="https://img-blog.csdnimg.cn/20200320142655837.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDk4NDY2NA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<p><a href="https://www.hellogithub.com/" target="_blank" rel="noopener">Hellogithub</a><br><img src="https://img-blog.csdnimg.cn/20200320142708591.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDk4NDY2NA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>Hellogithub每周都会分享github上一些有用有趣的项目哦~~快来看看叭</p>
<p><a href="http://hao.199it.com/" target="_blank" rel="noopener">大数据导航</a><br><img src="https://img-blog.csdnimg.cn/20200320142723916.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDk4NDY2NA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<p>找数据可能是让人很头疼的事了，这个网站是个很不错的选择</p>
<p>大数据导航是一个极其全面的大数据导航网站，它提供的大数据工具包括：互联网趋势分析、全球互联网数据、教育数据、网站排名查询工具、移动应用监测工具、网站热点分析工具、语义分析工具、直播数据、游戏数据、数据库、旅游行业工具、地理信息数据、数据可视化工具、文本分析工具、网站性能工具。</p>
<p>它对这些大数据网站进行了详细的分类和整理，让你可以轻松找到你需要的大数据工具，它也一直在收纳更新新的大数据网站，非常良心。</p>
<br>

<h3 id="六、文档、PDF搜索、视频下载"><a href="#六、文档、PDF搜索、视频下载" class="headerlink" title="六、文档、PDF搜索、视频下载"></a>六、文档、PDF搜索、视频下载</h3><p>是不是经常觉得找不到资料或者好不容易找到资料之后发现**还要花钱</p>
<p>下面两个可能帮到你哦</p>
<p><a href="https://blog.csdn.net/qq_44697035/article/details/102957288" target="_blank" rel="noopener">冰点文库</a></p>
<p>冰点文库可以无需积分也无需登陆就能自由下载百度文库、豆丁网、丁香网、电器网、MBA智库等文库文档，支持多任务同时下载哦。</p>
<p>点击上面链接就可获取下载方法<br><img src="https://img-blog.csdnimg.cn/20200320142743217.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDk4NDY2NA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<p><a href="https://www.jiumodiary.com/" target="_blank" rel="noopener"><strong>鸠摩搜书</strong></a><br><img src="https://img-blog.csdnimg.cn/2020032014280778.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDk4NDY2NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>可以搜索pdf，而且非常全哦~~</p>
<p><a href="https://www.urlgot.cn/" target="_blank" rel="noopener">Urlgot</a><br><img src="https://img-blog.csdnimg.cn/20200320142823227.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDk4NDY2NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>Urlgot 是一个不可多得的在线视频下载网站，支持的视频平台非常全面，几乎支持所有的主流视频平台；它还支持多种分辨率视频供你选择下载，非常良心。</p>
<br>

<h3 id="七、稀奇古怪的网站"><a href="#七、稀奇古怪的网站" class="headerlink" title="七、稀奇古怪的网站"></a>七、稀奇古怪的网站</h3><p>以下是小编搜集的好玩又有趣的网站，有兴趣的可以点开，说不定你也会喜欢上的~~</p>
<p><a href="https://letsview.com/zh/" target="_blank" rel="noopener">幕享</a><br><img src="https://img-blog.csdnimg.cn/20200320142838522.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDk4NDY2NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>幕享是一个良心并且好用的无线投屏工具，它完全免费，支持全平台投屏，支持将你的安卓手机和苹果手机投屏到电脑上。可以用到、课程讲解、会议演示、设计工作、娱乐等哦</p>
<p><a href="https://neal.fun/spend" target="_blank" rel="noopener">花比尔·盖茨的钱</a><br><img src="https://img-blog.csdnimg.cn/20200320142851572.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDk4NDY2NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>专门给缺钱但想有花不完的钱的“患者”提供</p>
<p>花比尔·盖茨的钱是一个非常有趣好玩的网站，它让你模拟体验花比尔·盖茨的钱，感受花钱的快乐，而且你还要思考下如何花光比尔·盖茨的钱。</p>
<p><a href="https://chp.shadiao.app/" target="_blank" rel="noopener">彩虹屁生成器</a><br><img src="https://img-blog.csdnimg.cn/20200320142903859.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDk4NDY2NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>功能和字面意思一样，自己点进去体会一下叭(&gt;▽&lt;)</p>
<p><a href="https://igfonts.io/" target="_blank" rel="noopener">在线字体转换器</a><br><img src="https://img-blog.csdnimg.cn/20200320142921483.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDk4NDY2NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>在线字体转换器是一个实用的特殊字体转化工具，它可以将字体转化为多种不同样式的特殊字体。支持实时转换，当你输入文字的时候，自动实时转换；它对英文字体的支持更加友好，转换之后的英文字体有趣生动.</p>
<p><a href="http://www.yanwenzi.com/maimeng/" target="_blank" rel="noopener">颜文字</a><br><img src="https://img-blog.csdnimg.cn/20200320142934156.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDk4NDY2NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>超级多可爱卖萌的颜文字哦︿(￣︶￣)︿</p>
<p>可爱的小姐姐们肯定会喜欢滴~~</p>
<br>

<h3 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h3><p>如果喜欢本章请给个小心心支持一下小编叭，我会更加努力滴~~</p>
<p>如果有小伙伴有很多好玩，有趣的网站，可以和小编分享一下，嘻嘻</p>
<p>那第一期先到这里啦~~</p>
]]></content>
      <categories>
        <category>计算机基础 神器</category>
      </categories>
      <tags>
        <tag>计算机基础 神器</tag>
      </tags>
  </entry>
  <entry>
    <title>MFC SetROP2(R2_XORPEN)异或方式画动态变色小球</title>
    <url>/2020/03/26/MFC-SetROP2-R2-XORPEN-%E5%BC%82%E6%88%96%E6%96%B9%E5%BC%8F%E7%94%BB%E5%8A%A8%E6%80%81%E5%8F%98%E8%89%B2%E5%B0%8F%E7%90%83/</url>
    <content><![CDATA[<br>

<h3 id="效果动画"><a href="#效果动画" class="headerlink" title="效果动画"></a>效果动画</h3><p><img src="https://img-blog.csdnimg.cn/202003201359042.gif#pic_center" alt="在这里插入图片描述"></p>
<br>

<h3 id="去掉异或之后的图像"><a href="#去掉异或之后的图像" class="headerlink" title="去掉异或之后的图像"></a>去掉异或之后的图像</h3><p><img src="https://img-blog.csdnimg.cn/20200320140103219.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDk4NDY2NA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<br>

<h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><p>MFC中可以绘制异或动画</p>
<p><code>pDC-&gt;SetROP2(R2_XORPEN);</code></p>
<p>如果一个地方有小球表示1，没有小球表示0</p>
<p>第一次在一个地方画的时候为，小球可以展现出来</p>
<p><code>0^1=1</code></p>
<p>第二次在同一个地方画的时候，小球被消去</p>
<p><code>1^1=0</code></p>
<p>接着只需要加上颜色就阔以实现啦</p>
<ul>
<li>先随机生成一个RGB数据</li>
<li>在将这个RGB值保存在vector数组中</li>
<li>画小球的时候，画刷颜色取的是新生成的RGB数据</li>
<li>消去小球的时候，画刷颜色取得是上一次的RGB数据</li>
</ul>
<br>

<h3 id="核心代码"><a href="#核心代码" class="headerlink" title="核心代码"></a>核心代码</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">	mytime onTimer 的执行次数</span></span><br><span class="line"><span class="comment">	x y 小球现在所处的坐标值，起点为（0，0）</span></span><br><span class="line"><span class="comment">	moveX 小球每次移动的距离</span></span><br><span class="line"><span class="comment">	vector&lt;int&gt; vector_rgb 将红、绿、蓝存起来</span></span><br><span class="line"><span class="comment">	vector&lt;vector&lt;int&gt;&gt;  rgb_store 将小球每次的RGB值存起来</span></span><br><span class="line"><span class="comment">	*/</span></span><br><span class="line"><span class="keyword">int</span> mytime = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt;  rgb_store;</span><br><span class="line"><span class="keyword">void</span> CMFCApplication1View::OnTimer(UINT_PTR nIDEvent)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="comment">// <span class="doctag">TODO:</span> 在此添加消息处理程序代码和/或调用默认值</span></span><br><span class="line">	CDC *pDC = GetDC();</span><br><span class="line">	CRect rect;</span><br><span class="line">	GetClientRect(&amp;rect);</span><br><span class="line">	mytime +=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">if</span> (mytime == <span class="number">1</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; vector_rgb2;</span><br><span class="line">		vector_rgb2.push_back(<span class="number">0</span>);</span><br><span class="line">		vector_rgb2.push_back(<span class="number">0</span>);</span><br><span class="line">		vector_rgb2.push_back(<span class="number">0</span>);</span><br><span class="line">		rgb_store.push_back(vector_rgb2);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; vector_rgb;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> red = rand() % <span class="number">255</span>;</span><br><span class="line">	<span class="keyword">int</span> green = rand() % <span class="number">255</span>;</span><br><span class="line">	<span class="keyword">int</span> blue = rand() % <span class="number">255</span>;</span><br><span class="line"></span><br><span class="line">	vector_rgb.push_back(red);</span><br><span class="line">	vector_rgb.push_back(green);</span><br><span class="line">	vector_rgb.push_back(blue);</span><br><span class="line"></span><br><span class="line">	rgb_store.push_back(vector_rgb);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> (nIDEvent == <span class="number">1</span>) &#123;</span><br><span class="line"></span><br><span class="line">		<span class="comment">// 擦除上一次画的小球</span></span><br><span class="line">		<span class="keyword">int</span> red2 = rgb_store[mytime<span class="number">-1</span>][<span class="number">0</span>];</span><br><span class="line">		<span class="keyword">int</span> green2 = rgb_store[mytime<span class="number">-1</span>][<span class="number">1</span>];</span><br><span class="line">		<span class="keyword">int</span> blue2 = rgb_store[mytime<span class="number">-1</span>][<span class="number">2</span>];</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 选择和上次一样的画刷</span></span><br><span class="line">		CBrush brush2;</span><br><span class="line">		brush2.CreateSolidBrush(RGB(red2, green2, blue2));</span><br><span class="line">		pDC-&gt;SelectObject(&amp;brush2);</span><br><span class="line">        </span><br><span class="line">		pDC-&gt;SetROP2(R2_XORPEN);</span><br><span class="line">		pDC-&gt;Ellipse(x,y, x+ <span class="number">15</span>, y+ <span class="number">15</span>);</span><br><span class="line">		<span class="comment">/*if (y&lt;0 || y&gt;rect.bottom - 15)</span></span><br><span class="line"><span class="comment">			moveY = 0 - moveY;*/</span></span><br><span class="line">		<span class="keyword">if</span> (x&lt;<span class="number">0</span> || x&gt;rect.right - <span class="number">15</span>)</span><br><span class="line">			moveX = <span class="number">0</span> - moveX;</span><br><span class="line">		x += moveX;</span><br><span class="line">		y =<span class="built_in">sin</span>(x)*<span class="number">250</span>+<span class="number">250</span>;</span><br><span class="line">		<span class="comment">// 画新的小球</span></span><br><span class="line">		CBrush brush;</span><br><span class="line">		brush.CreateSolidBrush(RGB(red, green, blue));</span><br><span class="line">		pDC-&gt;SelectObject(&amp;brush);</span><br><span class="line">		pDC-&gt;Ellipse(x, y, x + <span class="number">15</span>, y + <span class="number">15</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	CView::OnTimer(nIDEvent);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> CMFCApplication1View::OnCreate(LPCREATESTRUCT lpCreateStruct)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">if</span> (CView::OnCreate(lpCreateStruct) == <span class="number">-1</span>)</span><br><span class="line">		<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// <span class="doctag">TODO:</span>  在此添加您专用的创建代码</span></span><br><span class="line">    <span class="comment">// 开始计时器 </span></span><br><span class="line">	SetTimer(<span class="number">1</span>, <span class="number">100</span>, <span class="literal">nullptr</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> CMFCApplication1View::OnDestroy()</span><br><span class="line">&#123;</span><br><span class="line">	CView::OnDestroy();</span><br><span class="line">    <span class="comment">// 结束计时器</span></span><br><span class="line">	KillTimer(<span class="number">1</span>);</span><br><span class="line">	<span class="comment">// <span class="doctag">TODO:</span> 在此处添加消息处理程序代码</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>考虑到空间复杂度</p>
<p>做出如下改进</p>
<br>

<h3 id="改进"><a href="#改进" class="headerlink" title="改进"></a>改进</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">	x y 小球现在所处的坐标值，起点为（0，0）</span></span><br><span class="line"><span class="comment">	moveX 小球每次移动的距离</span></span><br><span class="line"><span class="comment">	vector&lt;int&gt; vector_rgb 将红、绿、蓝存起来</span></span><br><span class="line"><span class="comment">	vector&lt;vector&lt;int&gt;&gt;  rgb_store 将小球每次的RGB值存起来 只有两组数据，只需不断更新即可</span></span><br><span class="line"><span class="comment">	*/</span></span><br><span class="line"><span class="keyword">bool</span> flage = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt;  rgb_store;</span><br><span class="line"><span class="keyword">void</span> CMFCApplication1View::OnTimer(UINT_PTR nIDEvent)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="comment">// <span class="doctag">TODO:</span> 在此添加消息处理程序代码和/或调用默认值</span></span><br><span class="line">	CDC *pDC = GetDC();</span><br><span class="line">	CRect rect;</span><br><span class="line">	GetClientRect(&amp;rect);</span><br><span class="line">	<span class="keyword">if</span> (flage == <span class="number">0</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; vector_rgb2;</span><br><span class="line">		vector_rgb2.push_back(<span class="number">0</span>);</span><br><span class="line">		vector_rgb2.push_back(<span class="number">0</span>);</span><br><span class="line">		vector_rgb2.push_back(<span class="number">0</span>);</span><br><span class="line">		rgb_store.push_back(vector_rgb2);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; vector_rgb;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> red = rand() % <span class="number">255</span>;</span><br><span class="line">	<span class="keyword">int</span> green = rand() % <span class="number">255</span>;</span><br><span class="line">	<span class="keyword">int</span> blue = rand() % <span class="number">255</span>;</span><br><span class="line"></span><br><span class="line">	vector_rgb.push_back(red);</span><br><span class="line">	vector_rgb.push_back(green);</span><br><span class="line">	vector_rgb.push_back(blue);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 更新rgb_store ，使该vector里只有两组rgb数据</span></span><br><span class="line">	<span class="keyword">if</span> (flage == <span class="number">0</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		rgb_store.push_back(vector_rgb);</span><br><span class="line">		flage = <span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span> &#123;</span><br><span class="line">		rgb_store[<span class="number">0</span>] = rgb_store[<span class="number">1</span>];</span><br><span class="line">		rgb_store[<span class="number">1</span>] = vector_rgb;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> (nIDEvent == <span class="number">1</span>) &#123;</span><br><span class="line"></span><br><span class="line">		<span class="comment">// 擦除上一次画的小球</span></span><br><span class="line">		<span class="keyword">int</span> red2 = rgb_store[<span class="number">0</span>][<span class="number">0</span>];</span><br><span class="line">		<span class="keyword">int</span> green2 = rgb_store[<span class="number">0</span>][<span class="number">1</span>];</span><br><span class="line">		<span class="keyword">int</span> blue2 = rgb_store[<span class="number">0</span>][<span class="number">2</span>];</span><br><span class="line">		CBrush brush2;</span><br><span class="line">		brush2.CreateSolidBrush(RGB(red2, green2, blue2));</span><br><span class="line">		pDC-&gt;SelectObject(&amp;brush2);</span><br><span class="line">		pDC-&gt;SetROP2(R2_XORPEN);</span><br><span class="line">		pDC-&gt;Ellipse(x,y, x+ <span class="number">15</span>, y+ <span class="number">15</span>);</span><br><span class="line">		<span class="comment">/*if (y&lt;0 || y&gt;rect.bottom - 15)</span></span><br><span class="line"><span class="comment">			moveY = 0 - moveY;*/</span></span><br><span class="line">		<span class="keyword">if</span> (x&lt;<span class="number">0</span> || x&gt;rect.right - <span class="number">15</span>)</span><br><span class="line">			moveX = <span class="number">0</span> - moveX;</span><br><span class="line">		x += moveX;</span><br><span class="line">		y =<span class="built_in">sin</span>(x)*<span class="number">250</span>+<span class="number">250</span>;</span><br><span class="line">		<span class="comment">// 画小球</span></span><br><span class="line">		CBrush brush;</span><br><span class="line">		brush.CreateSolidBrush(RGB(red, green, blue));</span><br><span class="line">		pDC-&gt;SelectObject(&amp;brush);</span><br><span class="line">		pDC-&gt;Ellipse(x, y, x + <span class="number">15</span>, y + <span class="number">15</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	CView::OnTimer(nIDEvent);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> CMFCApplication1View::OnCreate(LPCREATESTRUCT lpCreateStruct)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">if</span> (CView::OnCreate(lpCreateStruct) == <span class="number">-1</span>)</span><br><span class="line">		<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// <span class="doctag">TODO:</span>  在此添加您专用的创建代码</span></span><br><span class="line">	SetTimer(<span class="number">1</span>, <span class="number">100</span>, <span class="literal">nullptr</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> CMFCApplication1View::OnDestroy()</span><br><span class="line">&#123;</span><br><span class="line">	CView::OnDestroy();</span><br><span class="line">	KillTimer(<span class="number">1</span>);</span><br><span class="line">	<span class="comment">// <span class="doctag">TODO:</span> 在此处添加消息处理程序代码</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>MFC</category>
      </categories>
      <tags>
        <tag>MFC</tag>
      </tags>
  </entry>
  <entry>
    <title>计算机开机启动过程详解</title>
    <url>/2020/03/26/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%BC%80%E6%9C%BA%E5%90%AF%E5%8A%A8%E8%BF%87%E7%A8%8B%E8%AF%A6%E8%A7%A3/</url>
    <content><![CDATA[<p><strong>计算机的开机启动过程</strong></p>
<p>(1) <strong>启动过程总览</strong><br><img src="https://img-blog.csdnimg.cn/20200320141458930.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDk4NDY2NA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<p><strong>(二)详细说明</strong></p>
<p><strong>1、CPU 供电</strong></p>
<p>按下主机的电源键后，计算机开始启动，为主板部分芯片和CPU进行供电。主板上电后开始初始化其固件。固件是一些固化在芯片组上的程序，它会试图去启动 CPU。如果启动失败（例如 CPU 坏了或没插好），计算机就会死机并给出错误提示（如某些版本的主板固件会发出蜂鸣警告）。这种状态称为 “zoombie-with-fans”。</p>
<p>如果前一个阶段未出错，就开始加电工作，在多 CPU 或多核 CPU 情况下，某一个 CPU 会被随机选取作为启动 CPU（bootstrap processor，BSP）运行 BIOS 内部的程序。其余的 CPU（application processor，AP）保持停机直到操作系统内核显式地使用它们。</p>
<p>2000 年以前的计算机主板上均使用 BIOS，如今绝大多数计算机采用的是 EFI（Mac 用的就是 EFI）或 UEFI。BIOS 正在逐步被淘汰。基于 EFI、UEFI 的开机过程与传统的BIOS不尽相同，本文将以传统的 BIOS，Intel CPU 为例介绍开机过程。</p>
<p>此时 CPU 工作模式为实模式，该模式下地址总线是 20 位，寻址范围是 0x00000~0xFFFFF 的 1M 范围。这也就解释了为什么 BIOS 的容量只有 1MB。</p>
<p>Intel CPU 用三种运行模式: 实模式、32 位保护模式、64 位保护模式。实模式: Intel 8086 的寻址方案，为了商业连续性，兼容了这古老的方案；保护模式: 采用了虚实地址转换方案。</p>
<p>BIOS 启动之初，内存是空的。此时 CPU 处于实模式，内存的地址映射均为硬连接的设备。内存映射图如下图所示:<br><img src="https://img-blog.csdnimg.cn/20200320141516895.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDk4NDY2NA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<p><strong>2、重置向量</strong></p>
<p>CPU 启动后其大多数寄存器会被初始化为预定的值，包括指令寄存器（Instruction register，IR），它保存着 CPU 将要执行指令的内存地址。此时 CPU 会有一个特殊行为，其会对 IR 的初始值加上一个基址寄存器的值，生成一个 32 位的地址 0xFFFFFFF0。之所以称为特殊行为，是因为实模式下 CPU 只能寻址 1MB 地址空间，而这个 32 位地址已经大于 1MB 的内存限制。因此，0xFFFFFFF0 也被称为重置向量（reset vector），参考上图 0xFFFFFFF0 处的标识。</p>
<p>于是，CPU 开始执行 0xFFFFFFF0 地址处的指令，该地址处是一条 JUMP 指令，这条指令清空了基址寄存器的值，并让指令跳回到 BIOS 开始处（物理地址为 0xF0000，参考上图 0xF0000 处的标识）以执行 BIOS。</p>
<p>BIOS 内部可以分成两个区块: code block（普通程序）、boot block（引导程序）。上电后，boot block 会先被执行，它会检查 code block 的代码是否正确，如果正确，就会转到 code block 继续执行下去。</p>
<p><strong>3、BIOS 初始化</strong></p>
<p>0xF0000 地址实际上是 BIOS 中的 boot block 的开始处。在这个阶段，会初始化部分硬件。系统的 CPU、USB 只有部分被初始化。</p>
<p><strong>4、BIOS POST（加电自检）</strong></p>
<p>初始化完成后，CPU 跳转到 0xA0000 地址处（参考上图 640KB 处）进行 BIOS 加电自检（power on self test, POST）。这个过程会检查计算机的各项组件，如 CPU、显卡、内存、鼠标、键盘等。如果找不到内存或者键盘都有可能让BIOS停止工作并且打印一些相关的错误信息，如果找不到显卡 BIOS 会发出蜂鸣警告</p>
<p>当 CPU 执行到 0xC0000 地址处（参考上图 768KB 处），开始寻找其他设备的 ROM，如果找到任何其他设备的 BIOS，它们也会被执行。</p>
<p>下一步，显卡就会显示 BIOS 界面，并进行更深入的检查。</p>
<p><strong>5、BIOS 记录系统设定值</strong></p>
<p>检查完成后，BIOS 会根据自己的”系统资源表”，对系统进行进一步确认，从而确定计算机配有哪些资源或设备。例如 BIOS 支持随插即用，它会检测并配置随插即用设备。</p>
<p>然后 BIOS 会遵循高级配置电源接口（Advanced Configuration Power Interface，ACPI）在内存中设置好一系列的数据来描述硬件信息，以便被操作系统内核利用。</p>
<p><strong>7、MBR</strong></p>
<p>到这一步，BIOS 开始尝试加载操作系统。它会从硬盘，光驱，软驱，网络等几个地方依次寻找操作系统（用户可以在 BIOS 设定中修改查找的优先级）。如果找不到操作系统，BIOS 会停机并给出错误信息。</p>
<p>假设在硬盘上找到了操作系统，它会首先读取硬盘上的大小为 512 Bytes 的 0号扇区，这个扇区被称为 主引导记录（master boot record，MBR），其包含三部分：</p>
<p>a)  引导程序（Boot Loader）</p>
<p>b)  硬盘分区表（Partition Table）</p>
<p>c)  结束标志字</p>
<p>BIOS 读完磁盘上的 MBR 之后会把它拷贝到内存 0x7C00 地址处，然后 CPU 跳转到该内存地址执行 MBR 里的指令。事实上，被复制到物理内存的内容就是 Boot Loader。常见的 Boot Loader 有 grub、lilo、spfdisk。</p>
<p><strong>8、硬盘启动</strong></p>
<p>这时，计算机的控制权就要转交给硬盘的某个分区了，这里又分成三种情况。</p>
<p>情况A：卷引导记录</p>
<p>卷引导记录（Volume boot record，缩写为VBR）。</p>
<p>&quot;卷引导记录&quot;的主要作用是，告诉计算机，操作系统在这个分区里的位置。然后，计算机就会加载操作系统了。</p>
<p>情况B：扩展分区和逻辑分区</p>
<p>随着硬盘越来越大，四个主分区已经不够了，需要更多的分区。但是，分区表只有四项，因此规定有且仅有一个区可以被定义成&quot;扩展分区&quot;（Extended partition）。</p>
<p>所谓&quot;扩展分区&quot;，就是指这个区里面又分成多个区。这种分区里面的分区，就叫做&quot;逻辑分区&quot;（logical partition）。</p>
<p>计算机先读取扩展分区的第一个扇区，叫做&quot;扩展引导记录&quot;（Extended boot record，缩写为EBR）。它里面也包含一张64字节的分区表，但是最多只有两项（也就是两个逻辑分区）。</p>
<p>计算机接着读取第二个逻辑分区的第一个扇区，再从里面的分区表中找到第三个逻辑分区的位置，以此类推，直到某个逻辑分区的分区表只包含它自身为止（即只有一个分区项）。因此，扩展分区可以包含无数个逻辑分区。</p>
<p>但是，似乎很少通过这种方式启动操作系统。如果操作系统确实安装在扩展分区，一般采用下一种方式启动。</p>
<p>情况C：启动管理器</p>
<p>在这种情况下，计算机读取&quot;主引导记录&quot;前面446字节的机器码之后，不再把控制权转交给某一个分区，而是运行事先安装的&quot;启动管理器&quot;（boot loader），由用户选择启动哪一个操作系统。</p>
<p><strong>8、操作系统</strong></p>
<p>控制权转交给操作系统后，操作系统的内核首先被载入内存。</p>
<p><strong>linux</strong></p>
<p>以Linux系统为例，先载入/boot目录下面的kernel。内核加载成功后，第一个运行的程序是/sbin/init。它根据配置文件（Debian系统是/etc/initab）产生init进程。这是Linux启动后的第一个进程，pid进程编号为1，其他进程都是它的后代。</p>
<p>然后，init线程加载系统的各个模块，比如窗口程序和网络程序，直至执行/bin/login程序，跳出登录界面，等待用户输入用户名和密码。</p>
<p>至此，全部启动过程完成。</p>
<p><strong>Windows</strong></p>
<p>以Windows7 为例，当控制权转交到操作系统后，计算机会执行如下操作：</p>
<p>1)  加载内核程序（Ntoskrnl.exe）、硬件抽象层（hal.dl）、注册表 SYSTEM 项(system32\configlsystem）、设备驱动，然后控制权交给 Ntoskrnl.exe</p>
<p>2)  Ntoskmnl 初始化执行体子系统，并初抽化引导的和系统的设备驱动启动程序，为原生应用程序《如SMSS 等）初始化运行环境，控制权交给 SMSS.exe</p>
<p>3)  SMSS 初始化注册表，创建系统环境变量，加载 Win32 子系统（Win32k.sys），启动子系统进程（CSRSS、Wininlt、Winlogon），控制权交给 Wininit.exe 和Winlogon.exe</p>
<p>4)  Wininit 启动服务控制管理器（SCM），本地安全子系统（LSASS》，本地会话管理（LSM）</p>
<p>5)  Winlogon 加乾登录界面程序（Logonur），显示交互式登录对话框。等待用户登录后，根据注册表配置启动 Userinit.exe 和 Explorer.exe</p>
<p>6)  Userinit 启动用户所有自启动进程，津立网络连接，启动生效的组策略</p>
<p>7)  Explorer 提供交互式图形界面，包括桌面和文件管理。</p>
<p>至此计算机启动就完成啦</p>
]]></content>
      <categories>
        <category>计算机基础</category>
      </categories>
      <tags>
        <tag>计算机基础</tag>
      </tags>
  </entry>
  <entry>
    <title>JS Math对象的使用</title>
    <url>/2020/03/26/JS-Math%E5%AF%B9%E8%B1%A1%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<br>

<p>JS Math对象常用于数学运算</p>
<h4 id="关键用法"><a href="#关键用法" class="headerlink" title="关键用法"></a>关键用法</h4><ul>
<li><code>Math.PI</code>等常数</li>
<li><code>Math.round()</code>等函数</li>
</ul>
<br>

<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>JS Math对象<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">'text/css'</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">//   =====================================================================</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// Math 对象用于执行数学任务</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">Math</span>.PI <span class="comment">//约为3.14159</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">Math</span>.E	<span class="comment">//返回算术常量 e，即自然对数的底数（约等于2.718）。</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">Math</span>.LN2	<span class="comment">//返回 2 的自然对数（约等于0.693）。</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">Math</span>.LN10	<span class="comment">//返回 10 的自然对数（约等于2.302）。</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">Math</span>.LOG2E	<span class="comment">//返回以 2 为底的 e 的对数（约等于 1.414）。</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">Math</span>.LOG10E	<span class="comment">//返回以 10 为底的 e 的对数（约等于0.434）。</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">Math</span>.SQRT1_2	<span class="comment">//返回返回 2 的平方根的倒数（约等于 0.707）。</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">Math</span>.SQRT2     <span class="comment">//返回 2 的平方根（约等于 1.414）</span></span></span><br><span class="line">    </span><br><span class="line"><span class="javascript">    alert(<span class="built_in">Math</span>.round(<span class="number">3.5</span>));<span class="comment">//四舍五入</span></span></span><br><span class="line"><span class="javascript">    alert(<span class="built_in">Math</span>.random());<span class="comment">// 0-1间的随机数</span></span></span><br><span class="line"><span class="javascript">    alert(<span class="built_in">Math</span>.max(<span class="number">10</span>,<span class="number">20</span>,<span class="number">30</span>));<span class="comment">//返回较大的数</span></span></span><br><span class="line"><span class="javascript">    alert(<span class="built_in">Math</span>.min(<span class="number">10</span>,<span class="number">20</span>,<span class="number">30</span>));<span class="comment">// 返回较小的数</span></span></span><br><span class="line"><span class="javascript">    alert(<span class="built_in">Math</span>.abs(<span class="number">-10</span>));<span class="comment">// 返回绝对值</span></span></span><br><span class="line"><span class="javascript">    alert(<span class="built_in">Math</span>.ceil(<span class="number">3.1</span>))<span class="comment">//向上取整</span></span></span><br><span class="line"><span class="javascript">    alert(<span class="built_in">Math</span>.floor(<span class="number">3.1</span>))<span class="comment">//向下取整</span></span></span><br><span class="line"><span class="javascript">    alert(<span class="built_in">Math</span>.pow(<span class="number">2</span>,<span class="number">3</span>));<span class="comment">//2的3次方 = 8</span></span></span><br><span class="line"><span class="javascript">    alert(<span class="built_in">Math</span>.sqrt(<span class="number">4</span>));<span class="comment">//开平方</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// Math.PI = 180弧度</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 1弧度 = Math.PI/180</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 参数为弧度</span></span></span><br><span class="line"><span class="javascript">    alert(<span class="built_in">Math</span>.sin(<span class="built_in">Math</span>.PI/<span class="number">4</span>));</span></span><br><span class="line"><span class="javascript">    alert(<span class="built_in">Math</span>.cos(<span class="built_in">Math</span>.PI/<span class="number">4</span>));</span></span><br><span class="line"><span class="javascript">    alert(<span class="built_in">Math</span>.tan(<span class="built_in">Math</span>.PI/<span class="number">4</span>));</span></span><br><span class="line"><span class="actionscript">    <span class="comment">//   acos(x)	返回数的反余弦值。</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// asin(x)	返回数的反正弦值。</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// atan(x)	以介于 -PI/2 与 PI/2 弧度之间的数值来返回 x 的反正切值。</span></span></span><br><span class="line"><span class="javascript">    alert(<span class="built_in">Math</span>.asin(<span class="number">1</span>));</span></span><br><span class="line"><span class="javascript">    alert(<span class="built_in">Math</span>.acos(<span class="number">1</span>));</span></span><br><span class="line"><span class="javascript">    alert(<span class="built_in">Math</span>.atan(<span class="number">1</span>));</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>JS字符串相关操作</title>
    <url>/2020/03/26/JS%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9B%B8%E5%85%B3%E6%93%8D%E4%BD%9C/</url>
    <content><![CDATA[<br>

<h4 id="主要内容"><a href="#主要内容" class="headerlink" title="主要内容"></a>主要内容</h4><ul>
<li><p>字符串基本操作</p>
<ul>
<li>document.write(str.fontcolor(‘red’));</li>
<li>document.write(str.fontsize(45));</li>
<li>document.write(str.sub());</li>
<li>document.write(str.sup());</li>
<li>……</li>
</ul>
</li>
<li><p>字符串拼接</p>
<ul>
<li>str3.concat(“world”);</li>
<li>alert(str3+’world’);</li>
<li>str2.join(“+”)</li>
</ul>
</li>
<li><p>字符串查找</p>
<ul>
<li>str.indexOf(‘h’,3)</li>
<li>str.lastIndexOf(‘h’,3)</li>
<li>str.search(/abc/i)</li>
</ul>
</li>
<li><p>字符串替换</p>
<ul>
<li>str3.replace(/a/ig,’hhhhhh’)</li>
</ul>
</li>
<li><p>字符串分割</p>
<ul>
<li>str.substring(2,4)</li>
<li>str.split(“ “,3)</li>
</ul>
</li>
<li><p>字符串大小写</p>
<ul>
<li>str.toLowerCase()</li>
<li>str.toUpperCase()</li>
</ul>
</li>
</ul>
<br>

<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>字符串的使用<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">'text/css'</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span> </span><br><span class="line"><span class="actionscript">    <span class="comment">// =====================================================================</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 字符串基本操作</span></span></span><br><span class="line"><span class="actionscript"><span class="comment">//    var str = "hello world!";</span></span></span><br><span class="line"><span class="actionscript"><span class="comment">//    // 用大号字体显示字符串</span></span></span><br><span class="line"><span class="actionscript"><span class="comment">//    document.write(str.big()+'&lt;br&gt;');</span></span></span><br><span class="line"><span class="actionscript"><span class="comment">//    // 显示闪动字符串IE下无效</span></span></span><br><span class="line"><span class="actionscript"><span class="comment">//    document.write(str.blink()+'&lt;br&gt;');</span></span></span><br><span class="line"><span class="actionscript"><span class="comment">//    // 使用粗体显示字符串</span></span></span><br><span class="line"><span class="actionscript"><span class="comment">//    document.write(str.bold()+'&lt;br&gt;');</span></span></span><br><span class="line"><span class="actionscript"><span class="comment">//    // 以打字机文本显示字符串</span></span></span><br><span class="line"><span class="actionscript"><span class="comment">//    document.write(str.fixed()+'&lt;br&gt;');</span></span></span><br><span class="line"><span class="actionscript"><span class="comment">//    // 以删除线来显示字符串</span></span></span><br><span class="line"><span class="actionscript"><span class="comment">//    document.write(str.strike()+'&lt;br&gt;');</span></span></span><br><span class="line"><span class="actionscript"><span class="comment">//    // 使用指定颜色来显示字符串</span></span></span><br><span class="line"><span class="actionscript"><span class="comment">//    document.write(str.fontcolor('red')+'&lt;br&gt;');</span></span></span><br><span class="line"><span class="actionscript"><span class="comment">//    // 使用指定字体大小来显示字符串</span></span></span><br><span class="line"><span class="actionscript"><span class="comment">//    document.write(str.fontsize(45)+'&lt;br&gt;');</span></span></span><br><span class="line"><span class="actionscript"><span class="comment">//    // 将字符串显示为链接</span></span></span><br><span class="line"><span class="actionscript"><span class="comment">//    document.write(str.link()+'&lt;br&gt;');</span></span></span><br><span class="line"><span class="actionscript"><span class="comment">//    // 把字符串显示为下标</span></span></span><br><span class="line"><span class="actionscript"><span class="comment">//    document.write(str.sub()+'&lt;br&gt;');</span></span></span><br><span class="line"><span class="actionscript"><span class="comment">//    // 把字符串显示为上标</span></span></span><br><span class="line"><span class="actionscript"><span class="comment">//    document.write(str.sup()+'&lt;br&gt;');</span></span></span><br><span class="line"><span class="actionscript"><span class="comment">//     //    str.charAt(3)显示下标为3得字母</span></span></span><br><span class="line"><span class="actionscript"><span class="comment">//     console.log(str.charAt(3));//108</span></span></span><br><span class="line"><span class="actionscript"><span class="comment">//     // str.charCodeAt(3)显示下标为3得字母得ASCII值</span></span></span><br><span class="line"><span class="actionscript"><span class="comment">//     console.log(str.charCodeAt(3));</span></span></span><br><span class="line"></span><br><span class="line"><span class="actionscript"><span class="comment">//     // String.fromCharCode(ASCII值)</span></span></span><br><span class="line"><span class="actionscript"><span class="comment">//     // 返回ASCII对应得字母</span></span></span><br><span class="line"><span class="actionscript"><span class="comment">//     document.write(String.fromCharCode(99));</span></span></span><br><span class="line"><span class="actionscript"><span class="comment">//     var str2 = String.fromCharCode(97,98,99);</span></span></span><br><span class="line"><span class="actionscript"><span class="comment">//     document.write(str2);</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// =====================================================================</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// str3.concat("world") 字符串得拼接，返回拼接后得字符串，生成新得字符串</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">//    var str3= "hello ";</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">//    var str2=str3.concat("world");</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">//    alert(str2)//hello world</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">//    alert(str3)//hello </span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// // 一般使用字符串拼接符 + </span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// alert(str3+'world');//hello world</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// =====================================================================</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 字符串的查找</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// indexOf()</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// indexOf(字符串，开始查找的位置) 两个参数</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 返回子串第一次的字符串中出现的位置，否则返回-1</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// var str ="abcdefg";</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// alert(str.indexOf('bcd'));//1</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// alert(str.indexOf('h',3));//-1</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// -------------------------------------------------------------</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// lastindexOf()</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// lastindexOf(字符串，开始查找的位置) 两个参数</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 返回子串最后一次的字符串中出现的位置，否则返回-1</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// var str ="abcabcabcabc";</span></span></span><br><span class="line">    </span><br><span class="line"><span class="actionscript">    <span class="comment">// alert(str.lastIndexOf('abc'));//9</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// alert(str.lastIndexOf('h',3));//-1</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// -------------------------------------------------------------</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// search(子串) 可以是正则表达式</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 子串写法  "abc"  /abc/ </span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// /abc/ig i 忽略大小写 g全局搜索</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// var str ="Abcabcabcabc";</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// alert(str.search("abc"));//3</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// alert(str.search(/abc/));//3</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// alert(str.search(/abc/i));//0</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// =====================================================================</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// replace()字符串替换</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// replace(匹配的字符串|正则表达式,替换为的新表达式)</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 返回值是替换完成后新生成的字符串</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// var str ="a b c d";</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// var str2 = str.replace('b',"hhhhh");//a hhhhh c d</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// // alert(str2);</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// var str3 ="a b c d a a a";</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// var str4 = str3.replace('a',"hhhhh");</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// alert(str4);//hhhhh b c d a a a 无法进行全局替换</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// str3 ="A b c d a a a";</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// var str5 = str3.replace(/a/ig,'hhhhhh');</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// alert(str5);//hhhhhh b c d hhhhhh hhhhhh hhhhhh</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// =====================================================================</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 字符串分割</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// substring()</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// substring(开始的下标，结束的下标)</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 返回分割后的新字符串</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// var str = "hello word";</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// var str2 = str.substring(2,4);</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// alert(str2);//ll</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// -------------------------------------------------------------</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// split()</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// split(分隔符，生成的字符长度)</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 如果为""会分割为单个字符</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 返回的是一个字符串数组 字符串=&gt;数组</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// var str = "hello word hhhh hh hhhh";</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// var str2 = str.split(" ");//hello,word,hhhh,hh,hhhh</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// var str3 = str.split(" ",3);//hello,word,hhhh</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// var str4 = str.split("");//h,e,l,l,o, ,w,o,r,d, ,h,h,h,h, ,h,h, ,h,h,h,h</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// alert(str2);</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// alert(str3);</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// alert(str4);</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// -------------------------------------------------------------</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 数组=&gt;字符串</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// join()</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// var str = "hello word hhhh hh hhhh";</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// var str2 = str.split(" ");//hello,word,hhhh,hh,hhhh</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// alert(str2.join("+"));//hello+word+hhhh+hh+hhhh</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// -------------------------------------------------------------</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 字符串大小写问题</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// var str = "HELLO world";</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// alert(str.toLowerCase());//hello world</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// alert(str.toUpperCase());//HELLO WORLD</span></span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- &lt;input type="button" value="按钮" id="btn"&gt; --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>python 连接mysql</title>
    <url>/2020/03/26/python-%E8%BF%9E%E6%8E%A5mysql/</url>
    <content><![CDATA[<br>

<h3 id="1-使用pymysql库"><a href="#1-使用pymysql库" class="headerlink" title="1.使用pymysql库"></a>1.使用<code>pymysql</code>库</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pymysql</span><br></pre></td></tr></table></figure>

<br>

<h3 id="2-连接数据库"><a href="#2-连接数据库" class="headerlink" title="2.连接数据库"></a>2.连接数据库</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">db = pymysql.connect(host=<span class="string">'localhost'</span>, port=<span class="number">3316</span>, user=<span class="string">'root'</span>, passwd=<span class="string">''</span>, db=<span class="string">'test'</span>, charset=<span class="string">'utf8mb4'</span>)</span><br></pre></td></tr></table></figure>

<p>参数</p>
<blockquote>
<p>host：字符串， MySQL服务器地址</p>
<p>port：整数 MySQL服务器端口号3306</p>
<p>user：字符串， 用户名</p>
<p>password或者passwd：字符串 密码</p>
<p>db：字符串， 数据库名称</p>
<p>charset：字符串，连接编码</p>
</blockquote>
<br>

<h3 id="3-创建游标对象"><a href="#3-创建游标对象" class="headerlink" title="3.创建游标对象"></a>3.创建游标对象</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">cursor = db.cursor()</span><br></pre></td></tr></table></figure>

<br>

<h3 id="4-正常写SQL语句"><a href="#4-正常写SQL语句" class="headerlink" title="4.正常写SQL语句"></a>4.正常写SQL语句</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">sql = <span class="string">"SELECT * FROM test1"</span></span><br></pre></td></tr></table></figure>

<br>

<h3 id="5-游标执行SQL"><a href="#5-游标执行SQL" class="headerlink" title="5.游标执行SQL"></a>5.游标执行SQL</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">cursor.execute(sql)</span><br></pre></td></tr></table></figure>

<br>

<h3 id="6-获取结果并打印"><a href="#6-获取结果并打印" class="headerlink" title="6.获取结果并打印"></a>6.获取结果并打印</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">result = cursor.fetchall()</span><br><span class="line"><span class="keyword">for</span> row <span class="keyword">in</span> result:</span><br><span class="line">    print(row)</span><br></pre></td></tr></table></figure>

<br>

<h3 id="7-关闭光标并关闭数据库"><a href="#7-关闭光标并关闭数据库" class="headerlink" title="7.关闭光标并关闭数据库"></a>7.关闭光标并关闭数据库</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">cursor.close()</span><br><span class="line"><span class="comment"># 关闭数据库连接</span></span><br><span class="line">db.close()</span><br></pre></td></tr></table></figure>

<br>

<h3 id="SQL常用操作"><a href="#SQL常用操作" class="headerlink" title="SQL常用操作"></a>SQL常用操作</h3><ul>
<li>创建表</li>
<li>插入</li>
<li>查询</li>
<li>数据库更新</li>
<li>删除操作</li>
</ul>
<br>

<h4 id="创建表"><a href="#创建表" class="headerlink" title="创建表"></a>创建表</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pymysql</span><br><span class="line"></span><br><span class="line"><span class="comment"># 打开数据库连接</span></span><br><span class="line">db = pymysql.connect(host=<span class="string">'localhost'</span>, port=<span class="number">3316</span>, user=<span class="string">'root'</span>, passwd=<span class="string">''</span>, db=<span class="string">'test'</span>, charset=<span class="string">'utf8mb4'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用cursor()方法获取操作游标 </span></span><br><span class="line">cursor = db.cursor()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果数据表已经存在使用 execute() 方法删除表。</span></span><br><span class="line">cursor.execute(<span class="string">"DROP TABLE IF EXISTS EMPLOYEE"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建数据表SQL语句</span></span><br><span class="line">sql = <span class="string">"""CREATE TABLE EMPLOYEE (</span></span><br><span class="line"><span class="string">         FIRST_NAME  CHAR(20) NOT NULL,</span></span><br><span class="line"><span class="string">         LAST_NAME  CHAR(20),</span></span><br><span class="line"><span class="string">         AGE INT,  </span></span><br><span class="line"><span class="string">         SEX CHAR(1),</span></span><br><span class="line"><span class="string">         INCOME FLOAT )"""</span></span><br><span class="line"></span><br><span class="line">cursor.execute(sql)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭数据库连接</span></span><br><span class="line">db.close()</span><br></pre></td></tr></table></figure>

 <br>

<h4 id="插入操作"><a href="#插入操作" class="headerlink" title="插入操作"></a>插入操作</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pymysql</span><br><span class="line"></span><br><span class="line"><span class="comment"># 打开数据库连接</span></span><br><span class="line">db = pymysql.connect(host=<span class="string">'localhost'</span>, port=<span class="number">3316</span>, user=<span class="string">'root'</span>, passwd=<span class="string">''</span>, db=<span class="string">'test'</span>, charset=<span class="string">'utf8mb4'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用cursor()方法获取操作游标 </span></span><br><span class="line">cursor = db.cursor()</span><br><span class="line"></span><br><span class="line"><span class="comment"># SQL 插入语句</span></span><br><span class="line">sql = <span class="string">"""INSERT INTO EMPLOYEE(FIRST_NAME,</span></span><br><span class="line"><span class="string">         LAST_NAME, AGE, SEX, INCOME)</span></span><br><span class="line"><span class="string">         VALUES ('Mac', 'Mohan', 20, 'M', 2000)"""</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">   <span class="comment"># 执行sql语句</span></span><br><span class="line">   cursor.execute(sql)</span><br><span class="line">   <span class="comment"># 提交到数据库执行</span></span><br><span class="line">   db.commit()</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">   <span class="comment"># Rollback in case there is any error</span></span><br><span class="line">   db.rollback()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭数据库连接</span></span><br><span class="line">db.close()</span><br></pre></td></tr></table></figure>

<br>

<h4 id="查询操作"><a href="#查询操作" class="headerlink" title="查询操作"></a>查询操作</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pymysql</span><br><span class="line"></span><br><span class="line"><span class="comment"># 打开数据库连接</span></span><br><span class="line">db = pymysql.connect(host=<span class="string">'localhost'</span>, port=<span class="number">3316</span>, user=<span class="string">'root'</span>, passwd=<span class="string">''</span>, db=<span class="string">'test'</span>, charset=<span class="string">'utf8mb4'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用cursor()方法获取操作游标 </span></span><br><span class="line">cursor = db.cursor()</span><br><span class="line"></span><br><span class="line"><span class="comment"># SQL 查询语句</span></span><br><span class="line">sql = <span class="string">"SELECT * FROM EMPLOYEE \</span></span><br><span class="line"><span class="string">       WHERE INCOME &gt; %s"</span> % (<span class="number">1000</span>)</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">   <span class="comment"># 执行SQL语句</span></span><br><span class="line">   cursor.execute(sql)</span><br><span class="line">   <span class="comment"># 获取所有记录列表</span></span><br><span class="line">   results = cursor.fetchall()</span><br><span class="line">   <span class="keyword">for</span> row <span class="keyword">in</span> results:</span><br><span class="line">      fname = row[<span class="number">0</span>]</span><br><span class="line">      lname = row[<span class="number">1</span>]</span><br><span class="line">      age = row[<span class="number">2</span>]</span><br><span class="line">      sex = row[<span class="number">3</span>]</span><br><span class="line">      income = row[<span class="number">4</span>]</span><br><span class="line">      <span class="comment"># 打印结果</span></span><br><span class="line">      <span class="keyword">print</span> <span class="string">"fname=%s,lname=%s,age=%s,sex=%s,income=%s"</span> % \</span><br><span class="line">             (fname, lname, age, sex, income )</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">   <span class="keyword">print</span> <span class="string">"Error: unable to fecth data"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭数据库连接</span></span><br><span class="line">db.close()</span><br></pre></td></tr></table></figure>

<br>

<h4 id="数据库更新"><a href="#数据库更新" class="headerlink" title="数据库更新"></a>数据库更新</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pymysql</span><br><span class="line"></span><br><span class="line"><span class="comment"># 打开数据库连接</span></span><br><span class="line">db = pymysql.connect(host=<span class="string">'localhost'</span>, port=<span class="number">3316</span>, user=<span class="string">'root'</span>, passwd=<span class="string">''</span>, db=<span class="string">'test'</span>, charset=<span class="string">'utf8mb4'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用cursor()方法获取操作游标 </span></span><br><span class="line">cursor = db.cursor()</span><br><span class="line"></span><br><span class="line"><span class="comment"># SQL 更新语句</span></span><br><span class="line">sql = <span class="string">"UPDATE EMPLOYEE SET AGE = AGE + 1 WHERE SEX = '%c'"</span> % (<span class="string">'M'</span>)</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">   <span class="comment"># 执行SQL语句</span></span><br><span class="line">   cursor.execute(sql)</span><br><span class="line">   <span class="comment"># 提交到数据库执行</span></span><br><span class="line">   db.commit()</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">   <span class="comment"># 发生错误时回滚</span></span><br><span class="line">   db.rollback()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭数据库连接</span></span><br><span class="line">db.close()</span><br></pre></td></tr></table></figure>

<br>

<h4 id="删除操作"><a href="#删除操作" class="headerlink" title="删除操作"></a>删除操作</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pymysql</span><br><span class="line"></span><br><span class="line"><span class="comment"># 打开数据库连接</span></span><br><span class="line">db = pymysql.connect(host=<span class="string">'localhost'</span>, port=<span class="number">3316</span>, user=<span class="string">'root'</span>, passwd=<span class="string">''</span>, db=<span class="string">'test'</span>, charset=<span class="string">'utf8mb4'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用cursor()方法获取操作游标 </span></span><br><span class="line">cursor = db.cursor()</span><br><span class="line"></span><br><span class="line"><span class="comment"># SQL 删除语句</span></span><br><span class="line">sql = <span class="string">"DELETE FROM EMPLOYEE WHERE AGE &gt; %s"</span> % (<span class="number">20</span>)</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">   <span class="comment"># 执行SQL语句</span></span><br><span class="line">   cursor.execute(sql)</span><br><span class="line">   <span class="comment"># 提交修改</span></span><br><span class="line">   db.commit()</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">   <span class="comment"># 发生错误时回滚</span></span><br><span class="line">   db.rollback()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭连接</span></span><br><span class="line">db.close()</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>Leetcode（2）</title>
    <url>/2020/03/26/Leetcode%EF%BC%882%EF%BC%89/</url>
    <content><![CDATA[<h4 id="面试题03-数组中重复的数字"><a href="#面试题03-数组中重复的数字" class="headerlink" title="面试题03. 数组中重复的数字"></a><a href="https://leetcode-cn.com/problems/shu-zu-zhong-zhong-fu-de-shu-zi-lcof/" target="_blank" rel="noopener">面试题03. 数组中重复的数字</a></h4><p>找出数组中重复的数字。</p>
<p>在一个长度为 n 的数组 nums 里的所有数字都在 0～n-1 的范围内。数组中某些数字是重复的，但不知道有几个数字重复了，也不知道每个数字重复了几次。请找出数组中任意一个重复的数字。</p>
<p><strong>示例 1：</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入：</span><br><span class="line">[2, 3, 1, 0, 2, 5, 3]</span><br><span class="line">输出：2 或 3</span><br></pre></td></tr></table></figure>



<p><strong>限制：</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">2 &lt;= n &lt;= 100000</span><br></pre></td></tr></table></figure>

<br>

<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">findRepeatNumber</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; nums)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> repeat;</span><br><span class="line">        <span class="keyword">bool</span> flag[nums.size()]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;nums.size();i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(flag[nums[i]]==<span class="number">0</span>)</span><br><span class="line">                flag[nums[i]]=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">              &#123;</span><br><span class="line">                  repeat=nums[i];</span><br><span class="line">                  <span class="keyword">break</span>;</span><br><span class="line">              &#125;  </span><br><span class="line">       &#125;</span><br><span class="line">        <span class="keyword">return</span> repeat;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<br>

<h4 id="面试题05-替换空格"><a href="#面试题05-替换空格" class="headerlink" title="面试题05. 替换空格"></a><a href="https://leetcode-cn.com/problems/ti-huan-kong-ge-lcof/" target="_blank" rel="noopener">面试题05. 替换空格</a></h4><p>请实现一个函数，把字符串 <code>s</code> 中的每个空格替换成”%20”。</p>
<p><strong>示例 1：</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入：s = &quot;We are happy.&quot;</span><br><span class="line">输出：&quot;We%20are%20happy.&quot;</span><br></pre></td></tr></table></figure>



<p><strong>限制：</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">0 &lt;= s 的长度 &lt;= 10000</span><br></pre></td></tr></table></figure>

<br>

<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="built_in">string</span> <span class="title">replaceSpace</span><span class="params">(<span class="built_in">string</span> s)</span> </span>&#123;</span><br><span class="line">        <span class="built_in">string</span> s_end=<span class="string">""</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i =<span class="number">0</span>;i&lt;s.length();i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(s[i]!=<span class="string">' '</span>)</span><br><span class="line">                s_end+=s[i];</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                s_end+=<span class="string">"%20"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> s_end;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<br>

<h4 id="面试题06-从尾到头打印链表"><a href="#面试题06-从尾到头打印链表" class="headerlink" title="面试题06. 从尾到头打印链表"></a><a href="https://leetcode-cn.com/problems/cong-wei-dao-tou-da-yin-lian-biao-lcof/" target="_blank" rel="noopener">面试题06. 从尾到头打印链表</a></h4><p>难度简单10收藏分享切换为英文关注反馈</p>
<p>输入一个链表的头节点，从尾到头反过来返回每个节点的值（用数组返回）。</p>
<p><strong>示例 1：</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入：head = [1,3,2]</span><br><span class="line">输出：[2,3,1]</span><br></pre></td></tr></table></figure>



<p><strong>限制：</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">0 &lt;= 链表长度 &lt;= 10000</span><br></pre></td></tr></table></figure>

<br>

<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"> * struct ListNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     ListNode *next;</span></span><br><span class="line"><span class="comment"> *     ListNode(int x) : val(x), next(NULL) &#123;&#125;</span></span><br><span class="line"><span class="comment"> * &#125;;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; reversePrint(ListNode* head) &#123;</span><br><span class="line">        <span class="keyword">if</span>(head!=<span class="literal">NULL</span>)&#123;</span><br><span class="line">            <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; a;</span><br><span class="line">            <span class="comment">// 反转链表</span></span><br><span class="line">            ListNode *new_list =<span class="keyword">new</span> ListNode(head-&gt;val);</span><br><span class="line">		    <span class="keyword">while</span> (head-&gt;next!= <span class="literal">NULL</span>)</span><br><span class="line">		    &#123;</span><br><span class="line">			    head = head-&gt;next;</span><br><span class="line">			    ListNode *before = <span class="keyword">new</span> ListNode(head-&gt;val) ;</span><br><span class="line">			    before-&gt;next = new_list;</span><br><span class="line">			    new_list = before;</span><br><span class="line">		    &#125;</span><br><span class="line">            <span class="keyword">while</span>(new_list!=<span class="literal">NULL</span>)&#123;</span><br><span class="line">                a.push_back(new_list-&gt;val);</span><br><span class="line">                new_list=new_list-&gt;next;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> a;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//返回空值</span></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">return</span> &#123;&#125;;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>算法</category>
      </categories>
      <tags>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title>Leetcode（1）</title>
    <url>/2020/03/26/Leetcode%EF%BC%881%EF%BC%89/</url>
    <content><![CDATA[<h4 id="2-Add-Two-Numbers"><a href="#2-Add-Two-Numbers" class="headerlink" title="2. Add Two Numbers"></a><a href="https://leetcode-cn.com/problems/add-two-numbers/" target="_blank" rel="noopener">2. Add Two Numbers</a></h4><p>You are given two <strong>non-empty</strong> linked lists representing two non-negative integers. The digits are stored in <strong>reverse order</strong> and each of their nodes contain a single digit. Add the two numbers and return it as a linked list.</p>
<p>You may assume the two numbers do not contain any leading zero, except the number 0 itself.</p>
<br>

<p><strong>Example:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input: (2 -&gt; 4 -&gt; 3) + (5 -&gt; 6 -&gt; 4)</span><br><span class="line">Output: 7 -&gt; 0 -&gt; 8</span><br><span class="line">Explanation: 342 + 465 = 807.</span><br></pre></td></tr></table></figure>

<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"> <span class="comment">// 进位</span></span><br><span class="line"> <span class="keyword">int</span> a = <span class="number">0</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">ListNode* <span class="title">addTwoNumbers</span><span class="params">(ListNode* l1, ListNode* l2)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(l1==<span class="literal">NULL</span>&amp;&amp;l2==<span class="literal">NULL</span>&amp;&amp;a==<span class="number">0</span>)<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        l1!=<span class="literal">NULL</span>?(a+=l1-&gt;val,l1=l1-&gt;next):l1;</span><br><span class="line">        l2!=<span class="literal">NULL</span>?(a+=l2-&gt;val,l2=l2-&gt;next):l2;</span><br><span class="line">        ListNode *cur= <span class="keyword">new</span> ListNode(a%<span class="number">10</span>);</span><br><span class="line">        a /=<span class="number">10</span>;</span><br><span class="line">        cur-&gt;next= addTwoNumbers(l1,l2);</span><br><span class="line">        <span class="keyword">return</span> cur;    </span><br><span class="line">        &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<br>

<h4 id="3-Longest-Substring-Without-Repeating-Characters"><a href="#3-Longest-Substring-Without-Repeating-Characters" class="headerlink" title="3. Longest Substring Without Repeating Characters"></a><a href="https://leetcode-cn.com/problems/longest-substring-without-repeating-characters/" target="_blank" rel="noopener">3. Longest Substring Without Repeating Characters</a></h4><p>Given a string, find the length of the <strong>longest substring</strong> without repeating characters.</p>
<p><strong>Example 1:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input: &quot;abcabcbb&quot;</span><br><span class="line">Output: 3 </span><br><span class="line">Explanation: The answer is &quot;abc&quot;, with the length of 3.</span><br></pre></td></tr></table></figure>

<p><strong>Example 2:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input: &quot;bbbbb&quot;</span><br><span class="line">Output: 1</span><br><span class="line">Explanation: The answer is &quot;b&quot;, with the length of 1.</span><br></pre></td></tr></table></figure>

<p><strong>Example 3:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Input: &quot;pwwkew&quot;</span><br><span class="line">Output: 3</span><br><span class="line">Explanation: The answer is &quot;wke&quot;, with the length of 3. </span><br><span class="line">             Note that the answer must be a substring, &quot;pwke&quot; is a subsequence and not a substring.</span><br></pre></td></tr></table></figure>

<br>

<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="function"><span class="keyword">int</span> <span class="title">lengthOfLongestSubstring</span><span class="params">(<span class="built_in">string</span> s)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> m = <span class="number">200</span>;</span><br><span class="line">        <span class="keyword">bool</span> a[m] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">        <span class="keyword">int</span> max_tmp = <span class="number">0</span>, max_true = <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; s.length(); i++) &#123;</span><br><span class="line">			a[s[i]] = <span class="number">1</span>;</span><br><span class="line">			max_tmp = <span class="number">1</span>;</span><br><span class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> j = i+<span class="number">1</span>; j &lt; s.length(); j++) &#123;</span><br><span class="line">				<span class="keyword">if</span> (a[s[j]] == <span class="number">1</span>)<span class="keyword">break</span>;</span><br><span class="line">				a[s[j]] = <span class="number">1</span>;</span><br><span class="line">				max_tmp++;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">if</span> (max_true &lt; max_tmp)</span><br><span class="line">				max_true = max_tmp;</span><br><span class="line">            <span class="comment">//Initializate</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; m; k++)</span><br><span class="line">				a[k] = <span class="number">0</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> max_true;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>算法</category>
      </categories>
      <tags>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title>G-S稳定匹配算法详解</title>
    <url>/2020/03/26/G-S%E7%A8%B3%E5%AE%9A%E5%8C%B9%E9%85%8D%E7%AE%97%E6%B3%95%E8%AF%A6%E8%A7%A3/</url>
    <content><![CDATA[<h2 id="G-S稳定匹配算法详解"><a href="#G-S稳定匹配算法详解" class="headerlink" title="G-S稳定匹配算法详解"></a>G-S稳定匹配算法详解</h2><p>GS算法是解决稳定匹配问题(stable matching)的一个优秀的算法。</p>
<p>下面以男女配对的例子来介绍稳定匹配问题并阐述GS算法的具体步骤。</p>
<p>GS算法，全称Gale-Shapley算法。</p>
<br>

<h3 id="一、问题描述及假设"><a href="#一、问题描述及假设" class="headerlink" title="一、问题描述及假设"></a>一、问题描述及假设</h3><ul>
<li><p>有n个单身男性集合M = {m1, m2, …, mn}和n个单身女性集合W = {w1, w2, …, wn}</p>
</li>
<li><p>假设每个男性对不同女性的喜好程度都不同，单身女性亦如是。</p>
</li>
<li><p>男性mi(1 &lt;= i &lt;= n)有一张属于自己的对n个女性的排序表，mi把他最爱慕的女性放在第一位，第二爱慕的女性放在第二位，以此类推，排名越靠前女性表示mi越爱慕的该女性。同样地，女性wi(1 &lt;= i &lt;= n)也有一张属于自己的对n个男性的排序表，排名越靠前的男性越受该女性的喜爱。</p>
</li>
<li><p>每个人最终都要有伴侣</p>
</li>
</ul>
<br>

<h3 id="二、伪代码"><a href="#二、伪代码" class="headerlink" title="二、伪代码"></a>二、伪代码</h3><img src="http://q6b782rdi.bkt.clouddn.com/images15.png" alt="image-20200302163507613" style="zoom:50%;">

<p>引自《算法设计》（Jon Kleinberg  ，Eva Tardos 著 ，张立昂，屈婉玲 译）</p>
<br>

<h3 id="三、具体代码"><a href="#三、具体代码" class="headerlink" title="三、具体代码"></a>三、具体代码</h3><p>C++实现</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// describe where there is a woman is single in a man[a]'s list or not</span></span><br><span class="line"><span class="comment">// if have single woman return 1,else return 0</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">mans_date</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">bool</span>**b, <span class="keyword">int</span> number)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; number; i++)</span><br><span class="line">		<span class="keyword">if</span> (b[a][i] == <span class="number">0</span>)</span><br><span class="line">			<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// if all the mans have the lovers return 0,else 1</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">have_man</span><span class="params">(<span class="keyword">bool</span>*mans_state, <span class="keyword">int</span> number, <span class="keyword">int</span> &amp;index)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; number; i++)</span><br><span class="line">		<span class="keyword">if</span> (mans_state[i] == <span class="number">0</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			index = i;</span><br><span class="line">			<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// G-S algorithm</span></span><br><span class="line"><span class="comment">// number----the mans and women number</span></span><br><span class="line"><span class="comment">// man ------mans'priority matrix</span></span><br><span class="line"><span class="comment">// women ----women's priority matrix</span></span><br><span class="line"><span class="function"><span class="keyword">int</span>* <span class="title">gs</span><span class="params">(<span class="keyword">int</span> number, <span class="keyword">int</span> **man, <span class="keyword">int</span> **women)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="comment">//mans and women state describe they are single or not </span></span><br><span class="line">	<span class="keyword">bool</span> *mans_state = <span class="keyword">new</span> <span class="keyword">bool</span>[number];</span><br><span class="line">	<span class="keyword">bool</span> *women_state = <span class="keyword">new</span> <span class="keyword">bool</span>[number];</span><br><span class="line"></span><br><span class="line">	<span class="comment">// describe a lovers </span></span><br><span class="line">	<span class="keyword">int</span> *woman_man_pair = <span class="keyword">new</span> <span class="keyword">int</span>[number];</span><br><span class="line"></span><br><span class="line">	<span class="comment">// mans_women describe a man and a women where had date or not</span></span><br><span class="line">	<span class="keyword">bool</span> **mans_women;</span><br><span class="line">	mans_women = <span class="keyword">new</span> <span class="keyword">bool</span>*[number];</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; number; i++)</span><br><span class="line">		mans_women[i] = <span class="keyword">new</span> <span class="keyword">bool</span>[number];</span><br><span class="line">	</span><br><span class="line">	<span class="comment">//initialize</span></span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; number; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		mans_state[i] = <span class="number">0</span>;</span><br><span class="line">		women_state[i] = <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; number; i++)</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; number; j++)</span><br><span class="line">			mans_women[i][j] = <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">	<span class="comment">//use inverse to reduce complexity</span></span><br><span class="line">	<span class="keyword">int</span> **inverse;</span><br><span class="line">	inverse = <span class="keyword">new</span> <span class="keyword">int</span>*[number];</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; number; i++)</span><br><span class="line">		inverse[i] = <span class="keyword">new</span> <span class="keyword">int</span>[number];</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; number; i++)</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; number; j++)</span><br><span class="line">			inverse[i][women[i][j]] = j;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> index = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">while</span> (have_man(mans_state, number, index) &amp;&amp; mans_date(index, mans_women, number))</span><br><span class="line">	&#123;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">int</span> tmp_man = index;</span><br><span class="line">		<span class="keyword">int</span> tmp_woman;</span><br><span class="line">		<span class="comment">//select the women tmp_man like most and this woman is single</span></span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; number; i++)</span><br><span class="line">			<span class="keyword">if</span> (mans_women[tmp_man][man[tmp_man][i]] == <span class="number">0</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				tmp_woman = man[tmp_man][i];</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> (women_state[tmp_woman] == <span class="number">0</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="comment">// tmp_man and tmp_woman is not single</span></span><br><span class="line">			women_state[tmp_woman] = <span class="number">1</span>;</span><br><span class="line">			mans_state[tmp_man] = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">			<span class="comment">//tmp_woman's lover is tmp_man</span></span><br><span class="line">			woman_man_pair[tmp_woman]=tmp_man;</span><br><span class="line">			<span class="comment">//tmp_man and tmp_woman had a date</span></span><br><span class="line">			mans_women[tmp_man][tmp_woman] = <span class="number">1</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span> &#123;</span><br><span class="line">			<span class="comment">//m2-----tmp_woman's lover now</span></span><br><span class="line">			<span class="keyword">int</span> m2 = woman_man_pair[tmp_woman];</span><br><span class="line">			<span class="comment">//compair m2 with tmp_man,if tmp_man is more excellent ,tmp_woman will date with tmp_man and break up with m2</span></span><br><span class="line">			<span class="keyword">if</span> (inverse[tmp_woman][m2] &gt; inverse[tmp_woman][tmp_man])</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="comment">//tmp_woman's lover is tmp_man</span></span><br><span class="line">				woman_man_pair[tmp_woman] = tmp_man;</span><br><span class="line">				<span class="comment">//m2 back to single</span></span><br><span class="line">				mans_state[m2] = <span class="number">0</span>;</span><br><span class="line">				<span class="comment">//tmp_man is not single</span></span><br><span class="line">				mans_state[tmp_man] = <span class="number">1</span>;</span><br><span class="line">				<span class="comment">//tmp_woman's lover is tmp_man</span></span><br><span class="line">				mans_women[tmp_man][tmp_woman] = <span class="number">1</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">else</span> &#123;</span><br><span class="line">				<span class="comment">//tmp_man and tmp_woman had a date</span></span><br><span class="line">				mans_women[tmp_man][tmp_woman] = <span class="number">1</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//return the woman mans'like in man'order</span></span><br><span class="line">	<span class="keyword">int</span> *end_pair = <span class="keyword">new</span> <span class="keyword">int</span>[number];</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; number; i++)</span><br><span class="line">		end_pair[woman_man_pair[i]] = i;</span><br><span class="line">	<span class="keyword">return</span> end_pair;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">int</span> number, **mans, **women;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">"input the number of man or woman:"</span>;</span><br><span class="line">	<span class="built_in">cin</span> &gt;&gt; number;</span><br><span class="line"></span><br><span class="line">	mans = <span class="keyword">new</span> <span class="keyword">int</span>*[number];</span><br><span class="line">	women = <span class="keyword">new</span> <span class="keyword">int</span>*[number];</span><br><span class="line"></span><br><span class="line">	<span class="comment">//initialize</span></span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; number; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		mans[i] = <span class="keyword">new</span> <span class="keyword">int</span>[number];</span><br><span class="line">		women[i] = <span class="keyword">new</span> <span class="keyword">int</span>[number];</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">"input mans' priority matrix"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; number; i++) &#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; number; j++)</span><br><span class="line">			<span class="built_in">cin</span> &gt;&gt; mans[i][j];</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">"input women's priority matrix"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; number; i++) &#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; number; j++)</span><br><span class="line">			<span class="built_in">cin</span> &gt;&gt; women[i][j];</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; number; i++) &#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; number; j++)</span><br><span class="line">		&#123;</span><br><span class="line">			mans[i][j] -= <span class="number">1</span>;</span><br><span class="line">			women[i][j] -= <span class="number">1</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="keyword">int</span>*end_pair2 = <span class="keyword">new</span> <span class="keyword">int</span>[number];</span><br><span class="line">	end_pair2 = gs(number, mans, women);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;number;i++)</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt;end_pair2[i]+<span class="number">1</span>&lt;&lt;<span class="string">"  "</span>;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>其中使用了反转的思想实现降低时间复杂度的需要</p>
<br>

<h3 id="四、输入输出"><a href="#四、输入输出" class="headerlink" title="四、输入输出"></a>四、输入输出</h3><p>输入：<br><img src="https://img-blog.csdnimg.cn/20200320142150913.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDk4NDY2NA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<br>

<p>输出：</p>
<p><code>3 1 2 5 4</code></p>
<p>经验证，是稳定匹配</p>
<br>

<h3 id="五、总结"><a href="#五、总结" class="headerlink" title="五、总结"></a>五、总结</h3><p>对于男性而言，G-S算法是最理想的，因为男性匹配到的都是最佳有效伴侣(best(m))</p>
<p>而对于女性来说匹配到的最差有效伴侣(worst(w))</p>
<p>虽然男性可能常常会被拒绝的一方，是但是只要不断尝试，最终得到的结果就是最美好的</p>
<p>这启示我们不管追寻爱情还是做其他事前，应该积极主动一点才会有最好的结局。</p>
]]></content>
      <categories>
        <category>算法</category>
      </categories>
      <tags>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title>MIPS寄存器和指令总结</title>
    <url>/2020/03/26/MIPS%E5%AF%84%E5%AD%98%E5%99%A8%E5%92%8C%E6%8C%87%E4%BB%A4%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<br>

<p>每次学计组的时候总要去查MIPS的寄存器和指令，索性自己总结了如下的知识点，方便之后查看</p>
<br>

<h3 id="32个通用寄存器"><a href="#32个通用寄存器" class="headerlink" title="32个通用寄存器"></a>32个通用寄存器</h3><table>
<thead>
<tr>
<th align="center">Register</th>
<th align="center">Name</th>
<th align="center">Usage</th>
</tr>
</thead>
<tbody><tr>
<td align="center">$0</td>
<td align="center">$zero</td>
<td align="center">常量0(constant value 0)</td>
</tr>
<tr>
<td align="center">$1</td>
<td align="center">$at</td>
<td align="center">保留给汇编器(Reserved for assembler)</td>
</tr>
<tr>
<td align="center">$2-$3</td>
<td align="center">$v0-$v1</td>
<td align="center">函数调用返回值(values for results and expression evaluation)</td>
</tr>
<tr>
<td align="center">$4-$7</td>
<td align="center">$a0-$a3</td>
<td align="center">函数调用参数(arguments)</td>
</tr>
<tr>
<td align="center">$8-$15</td>
<td align="center">$t0-$t7</td>
<td align="center">暂时的(或随便用的)</td>
</tr>
<tr>
<td align="center">$16-$23</td>
<td align="center">$s0-$s7</td>
<td align="center">保存的(或如果用，需要SAVE/RESTORE的)(saved)</td>
</tr>
<tr>
<td align="center">$24-$25</td>
<td align="center">$t8-$t9</td>
<td align="center">暂时的(或随便用的)</td>
</tr>
<tr>
<td align="center">$28</td>
<td align="center">$gp</td>
<td align="center">全局指针(Global Pointer)</td>
</tr>
<tr>
<td align="center">$29</td>
<td align="center">$sp</td>
<td align="center">堆栈指针(Stack Pointer)</td>
</tr>
<tr>
<td align="center">$30</td>
<td align="center">$fp</td>
<td align="center">帧指针(Frame Pointer)</td>
</tr>
<tr>
<td align="center">$31</td>
<td align="center">$ra</td>
<td align="center">返回地址(return address)</td>
</tr>
</tbody></table>
<br>

<h3 id="32个寄存器（详细）"><a href="#32个寄存器（详细）" class="headerlink" title="32个寄存器（详细）"></a>32个寄存器（详细）</h3><table>
<thead>
<tr>
<th align="center">Register Name</th>
<th align="center">Number</th>
<th align="center">Usage</th>
</tr>
</thead>
<tbody><tr>
<td align="center">$zero</td>
<td align="center">0</td>
<td align="center">Constant 0</td>
</tr>
<tr>
<td align="center">$at</td>
<td align="center">1</td>
<td align="center">Reserved for assembler</td>
</tr>
<tr>
<td align="center">$v0</td>
<td align="center">2</td>
<td align="center">Expression evaluation and results of a function</td>
</tr>
<tr>
<td align="center">$v1</td>
<td align="center">3</td>
<td align="center">Expression evaluation and results of a function</td>
</tr>
<tr>
<td align="center">$a0</td>
<td align="center">4</td>
<td align="center">Argument 1</td>
</tr>
<tr>
<td align="center">$a1</td>
<td align="center">5</td>
<td align="center">Argument 2</td>
</tr>
<tr>
<td align="center">$a2</td>
<td align="center">6</td>
<td align="center">Argument 3</td>
</tr>
<tr>
<td align="center">$a3</td>
<td align="center">7</td>
<td align="center">Argument 4</td>
</tr>
<tr>
<td align="center">$t0</td>
<td align="center">8</td>
<td align="center">Temporary (not preserved across call)</td>
</tr>
<tr>
<td align="center">$t1</td>
<td align="center">9</td>
<td align="center">Temporary (not preserved across call)</td>
</tr>
<tr>
<td align="center">$t2</td>
<td align="center">10</td>
<td align="center">Temporary (not preserved across call)</td>
</tr>
<tr>
<td align="center">$t3</td>
<td align="center">11</td>
<td align="center">Temporary (not preserved across call)</td>
</tr>
<tr>
<td align="center">$t4</td>
<td align="center">12</td>
<td align="center">Temporary (not preserved across call)</td>
</tr>
<tr>
<td align="center">$t5</td>
<td align="center">13</td>
<td align="center">Temporary (not preserved across call)</td>
</tr>
<tr>
<td align="center">$t6</td>
<td align="center">14</td>
<td align="center">Temporary (not preserved across call)</td>
</tr>
<tr>
<td align="center">$t7</td>
<td align="center">15</td>
<td align="center">Temporary (not preserved across call)</td>
</tr>
<tr>
<td align="center">$s0</td>
<td align="center">16</td>
<td align="center">Saved temporary (preserved across call)</td>
</tr>
<tr>
<td align="center">$s1</td>
<td align="center">17</td>
<td align="center">Saved temporary (preserved across call)</td>
</tr>
<tr>
<td align="center">$s2</td>
<td align="center">18</td>
<td align="center">Saved temporary (preserved across call)</td>
</tr>
<tr>
<td align="center">$s3</td>
<td align="center">19</td>
<td align="center">Saved temporary (preserved across call)</td>
</tr>
<tr>
<td align="center">$s4</td>
<td align="center">20</td>
<td align="center">Saved temporary (preserved across call)</td>
</tr>
<tr>
<td align="center">$s5</td>
<td align="center">21</td>
<td align="center">Saved temporary (preserved across call)</td>
</tr>
<tr>
<td align="center">$s6</td>
<td align="center">22</td>
<td align="center">Saved temporary (preserved across call)</td>
</tr>
<tr>
<td align="center">$s7</td>
<td align="center">23</td>
<td align="center">Saved temporary (preserved across call)</td>
</tr>
<tr>
<td align="center">$t8</td>
<td align="center">24</td>
<td align="center">Temporary (not preserved across call)</td>
</tr>
<tr>
<td align="center">$t9</td>
<td align="center">25</td>
<td align="center">Temporary (not preserved across call)</td>
</tr>
<tr>
<td align="center">$k0</td>
<td align="center">26</td>
<td align="center">Reserved for OS kernel</td>
</tr>
<tr>
<td align="center">$k1</td>
<td align="center">27</td>
<td align="center">Reserved for OS kernel</td>
</tr>
<tr>
<td align="center">$gp</td>
<td align="center">28</td>
<td align="center">Pointer to global area</td>
</tr>
<tr>
<td align="center">$sp</td>
<td align="center">29</td>
<td align="center">Stack pointer</td>
</tr>
<tr>
<td align="center">$fp or s8</td>
<td align="center">30</td>
<td align="center">Frame pointer</td>
</tr>
<tr>
<td align="center">$ra</td>
<td align="center">31</td>
<td align="center">Return address (used by function call)</td>
</tr>
</tbody></table>
<br>

<h3 id="MIPS指令集（31条）"><a href="#MIPS指令集（31条）" class="headerlink" title="MIPS指令集（31条）"></a>MIPS指令集（31条）</h3><table>
<thead>
<tr>
<th align="center"><strong>助记符</strong></th>
<th align="center">用法</th>
<th align="center">解释</th>
<th align="center">注释</th>
</tr>
</thead>
<tbody><tr>
<td align="center">R-type</td>
<td align="center"></td>
<td align="center"></td>
<td align="center"></td>
</tr>
<tr>
<td align="center">add</td>
<td align="center">add $1,$2,$3</td>
<td align="center">$1=$2+$3</td>
<td align="center">其中rs＝$2，rt=$3, rd=$1</td>
</tr>
<tr>
<td align="center">addu</td>
<td align="center">addu $1,$2,$3</td>
<td align="center">$1=$2+$3</td>
<td align="center">其中rs＝$2，rt=$3, rd=$1,无符号数</td>
</tr>
<tr>
<td align="center">sub</td>
<td align="center">sub $1,$2,$3</td>
<td align="center">$1=$2-$3</td>
<td align="center">其中rs＝$2，rt=$3, rd=$1</td>
</tr>
<tr>
<td align="center">subu</td>
<td align="center">subu $1,$2,$3</td>
<td align="center">$1=$2-$3</td>
<td align="center">其中rs＝$2，rt=$3, rd=$1,无符号数</td>
</tr>
<tr>
<td align="center">and</td>
<td align="center">and $1,$2,$3</td>
<td align="center">$1=$2 &amp; $3</td>
<td align="center">其中rs＝$2，rt=$3, rd=$1</td>
</tr>
<tr>
<td align="center">or</td>
<td align="center">or $1,$2,$3</td>
<td align="center">$1=$2 | $3</td>
<td align="center">其中rs＝$2，rt=$3, rd=$1</td>
</tr>
<tr>
<td align="center">xor</td>
<td align="center">xor $1,$2,$3</td>
<td align="center">$1=$2 ^ $3</td>
<td align="center">其中rs＝$2，rt=$3, rd=$1(异或）</td>
</tr>
<tr>
<td align="center">nor</td>
<td align="center">nor $1,$2,$3</td>
<td align="center">$1=~($2|$3)</td>
<td align="center">；其中rs＝$2，rt=$3, rd=$1(或非）</td>
</tr>
<tr>
<td align="center">slt</td>
<td align="center">slt $1,$2,$3</td>
<td align="center">if($2&lt;$3)   $1=1 else   $1=0</td>
<td align="center">if (rs &lt; rt) rd=1 else rd=0 ；其中rs＝$2，rt=$3, rd=$1</td>
</tr>
<tr>
<td align="center">sltu</td>
<td align="center">sltu $1,$2,$3</td>
<td align="center">if($2&lt;$3)   $1=1 else   $1=0</td>
<td align="center">if (rs &lt; rt) rd=1 else rd=0 ；其中rs＝$2，rt=$3, rd=$1  (无符号数）</td>
</tr>
<tr>
<td align="center">sll</td>
<td align="center">sll $1,$2,10</td>
<td align="center">$1=$2&lt;&lt;10</td>
<td align="center">rd &lt;- rt &lt;&lt; shamt ；shamt存放移位的位数，  也就是指令中的立即数，其中rt=$2, rd=$1</td>
</tr>
<tr>
<td align="center">srl</td>
<td align="center">srl $1,$2,10</td>
<td align="center">$1=$2&gt;&gt;10</td>
<td align="center">rd &lt;- rt &gt;&gt; shamt ；(logical) ，其中rt=$2, rd=$1</td>
</tr>
<tr>
<td align="center">sra</td>
<td align="center">sra $1,$2,10</td>
<td align="center">$1=$2&gt;&gt;10</td>
<td align="center">rd &lt;- rt &gt;&gt; shamt  ；(arithmetic) 注意符号位保留  其中rt=$2, rd=$1</td>
</tr>
<tr>
<td align="center">sllv</td>
<td align="center">sllv $1,$2,$3</td>
<td align="center">$1=$2&lt;&lt;$3</td>
<td align="center">rd &lt;- rt &lt;&lt; rs ；其中rs＝$3，rt=$2, rd=$1</td>
</tr>
<tr>
<td align="center">srlv</td>
<td align="center">srlv $1,$2,$3</td>
<td align="center">$1=$2&gt;&gt;$3</td>
<td align="center">rd &lt;- rt &gt;&gt; rs ；(logical)其中rs＝$3，rt=$2, rd=$1</td>
</tr>
<tr>
<td align="center">srav</td>
<td align="center">srav $1,$2,$3</td>
<td align="center">$1=$2&gt;&gt;$3</td>
<td align="center">rd &lt;- rt &gt;&gt; rs ；(arithmetic) 注意符号位保留  其中rs＝$3，rt=$2, rd=$1</td>
</tr>
<tr>
<td align="center">jr</td>
<td align="center">jr $31</td>
<td align="center">goto $31</td>
<td align="center">PC &lt;- rs</td>
</tr>
<tr>
<td align="center">I-type</td>
<td align="center"></td>
<td align="center"></td>
<td align="center"></td>
</tr>
<tr>
<td align="center">addi</td>
<td align="center">addi $1,$2,100</td>
<td align="center">$1=$2+100</td>
<td align="center">rt &lt;- rs + (sign-extend)immediate ；其中rt=$1,rs=$2</td>
</tr>
<tr>
<td align="center">addiu</td>
<td align="center">addiu $1,$2,100</td>
<td align="center">$1=$2+100</td>
<td align="center">rt &lt;- rs + (zero-extend)immediate ；其中rt=$1,rs=$2</td>
</tr>
<tr>
<td align="center">andi</td>
<td align="center">andi $1,$2,10</td>
<td align="center">$1=$2 &amp; 10</td>
<td align="center">rt &lt;- rs &amp; (zero-extend)immediate ；其中rt=$1,rs=$2</td>
</tr>
<tr>
<td align="center">ori</td>
<td align="center">andi $1,$2,10</td>
<td align="center">$1=$2 | 10</td>
<td align="center">rt &lt;- rs | (zero-extend)immediate ；其中rt=$1,rs=$2</td>
</tr>
<tr>
<td align="center">xori</td>
<td align="center">andi $1,$2,10</td>
<td align="center">$1=$2 ^ 10</td>
<td align="center">rt &lt;- rs xor (zero-extend)immediate ；其中rt=$1,rs=$2</td>
</tr>
<tr>
<td align="center">lui</td>
<td align="center">lui $1,100</td>
<td align="center">$1=100*65536</td>
<td align="center">rt &lt;- immediate*65536 ；将16位立即数放到目标寄存器高16      位，目标寄存器的低16位填0</td>
</tr>
<tr>
<td align="center">lw</td>
<td align="center">lw $1,10($2)</td>
<td align="center">$1=memory[$2  +10]</td>
<td align="center">rt &lt;- memory[rs + (sign-extend)immediate] ；rt=$1,rs=$2</td>
</tr>
<tr>
<td align="center">sw</td>
<td align="center">sw $1,10($2)</td>
<td align="center">memory[$2+10]  =$1</td>
<td align="center">memory[rs + (sign-extend)immediate] &lt;- rt ；rt=$1,rs=$2</td>
</tr>
<tr>
<td align="center">beq</td>
<td align="center">beq $1,$2,10</td>
<td align="center">if($1==$2)   goto PC+4+40</td>
<td align="center">if (rs == rt) PC &lt;- PC+4 + (sign-extend)immediate&lt;&lt;2</td>
</tr>
<tr>
<td align="center">bne</td>
<td align="center">bne $1,$2,10</td>
<td align="center">if($1!=$2)   goto PC+4+40</td>
<td align="center">if (rs != rt) PC &lt;- PC+4 + (sign-extend)immediate&lt;&lt;2</td>
</tr>
<tr>
<td align="center">slti</td>
<td align="center">slti $1,$2,10</td>
<td align="center">if($2&lt;10)   $1=1 else   $1=0</td>
<td align="center">if (rs &lt;(sign-extend)immediate) rt=1 else rt=0 ；   其中rs＝$2，rt=$1</td>
</tr>
<tr>
<td align="center">sltiu</td>
<td align="center">sltiu $1,$2,10</td>
<td align="center">if($2&lt;10)   $1=1 else   $1=0</td>
<td align="center">if (rs &lt;(zero-extend)immediate) rt=1 else rt=0 ；  其中rs＝$2，rt=$1</td>
</tr>
<tr>
<td align="center">J-type</td>
<td align="center"></td>
<td align="center"></td>
<td align="center"></td>
</tr>
<tr>
<td align="center">j</td>
<td align="center">j 10000</td>
<td align="center">goto 10000</td>
<td align="center">PC &lt;- (PC+4)[31..28],address,0,0  ；address=10000/4</td>
</tr>
<tr>
<td align="center">jal</td>
<td align="center">jal 10000</td>
<td align="center">$31&lt;-PC+4; goto 10000</td>
<td align="center">$31&lt;-PC+4；PC &lt;- (PC+4)[31..28],address,0,0   ；address=10000/4</td>
</tr>
</tbody></table>
<br>

<h3 id="其他指令"><a href="#其他指令" class="headerlink" title="其他指令"></a>其他指令</h3><table>
<thead>
<tr>
<th align="center">助记符</th>
<th align="center">用法</th>
<th align="center">解释</th>
<th align="center">注释</th>
</tr>
</thead>
<tbody><tr>
<td align="center">bnez</td>
<td align="center">bnez $t0 ,trylk</td>
<td align="center">if $t0 != 0 ,goto  trylk</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">beqz</td>
<td align="center">beqz $t0 ,trylk</td>
<td align="center">if $t0 ==0, goto trylk</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">伪指令</td>
<td align="center"></td>
<td align="center"></td>
<td align="center"></td>
</tr>
<tr>
<td align="center">not</td>
<td align="center">not $1,$2</td>
<td align="center">对应MIPS，nor $1,$2,$zero</td>
<td align="center">或非操作</td>
</tr>
<tr>
<td align="center">move</td>
<td align="center">move $1,$2</td>
<td align="center">对应MIPS , or $1,$2,$zero</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">li</td>
<td align="center">li $1,$2</td>
<td align="center">对应MIPS，ori $1,$zero,c</td>
<td align="center">c为16位立即数</td>
</tr>
</tbody></table>
<br>

<p>会不断更新~</p>
<p>若有错误，不吝指正~</p>
]]></content>
      <categories>
        <category>计算机组成原理</category>
      </categories>
      <tags>
        <tag>计算机组成原理</tag>
      </tags>
  </entry>
  <entry>
    <title>完美解决git下载慢问题（亲测有效，不用改host）</title>
    <url>/2020/03/26/%E5%AE%8C%E7%BE%8E%E8%A7%A3%E5%86%B3git%E4%B8%8B%E8%BD%BD%E6%85%A2%E9%97%AE%E9%A2%98%EF%BC%88%E4%BA%B2%E6%B5%8B%E6%9C%89%E6%95%88%EF%BC%8C%E4%B8%8D%E7%94%A8%E6%94%B9host%EF%BC%89/</url>
    <content><![CDATA[<p>git一个大佬云集的网站，当我们遇到一个特别感兴趣的项目的时候想下载下来看看，我们敲了git clone ……</p>
<p>然后<br><img src="https://img-blog.csdnimg.cn/20200320141229965.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDk4NDY2NA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<p>我服了……15KiB/s</p>
<br>

<p>先简单科普一下<br><br></p>
<p>KiB/s和咱们平时看到的KB/s有啥不同，</p>
<p>Ki 和 K 只是数学单位</p>
<p>Ki = 1024</p>
<p>K  = 1000</p>
<p>这二者之间没有任何联系<br><br></p>
<p>B 和 b 表示物理存储单位</p>
<p>B = Byte 即一个字节</p>
<p>b = bit   即一个二进制位</p>
<p>二者的关系是 : 1 Byte = 8 bit</p>
 <br>

<p>简单算一下之后如下结果:</p>
<p>1Kib = 1024 bit</p>
<p>1Kb  = 1000 bit</p>
<p>1KiB = 1024 Byte</p>
<p>1KB  = 1000 Byte<br><br></p>
<p>所以15.00KiB/s 和14.65KB/s 差不多</p>
<p>(ノへ￣、)慢的出奇</p>
<p>等下载下来，自己的孩子都能爬树了……<br><br></p>
<p>在网上也找了很多资料，什么修改host文件……</p>
<p>然后试了一大堆，效果不是很好<br><br></p>
<p>机缘巧合之下让我知道了gitee类似于中国的git</p>
<p>d=====(￣▽￣*)b</p>
<p>这样就快很多了</p>
<p>来让我们看一下怎么做吧</p>
<h3 id="1-首先先登陆gitee官网注册一个账号和git差不多"><a href="#1-首先先登陆gitee官网注册一个账号和git差不多" class="headerlink" title="1.首先先登陆gitee官网注册一个账号和git差不多"></a>1.首先先登陆gitee官网注册一个账号和git差不多</h3><p>gitee（码云）介绍</p>
<blockquote>
<p>相比于GitHub，码云有以下优势：</p>
<ul>
<li>在语言的使用上支持中文，对英语薄弱的童鞋就很友好啦</li>
<li>其次，国内 IT 行业有自己的特点，天然决定了对开源软件的需求也有自己的特点，比如小程序这个东西，只有国内有，做个开源的小程序托管在码云比 GitHub 明显更有优势，因为关注着都是国内的开发者；</li>
<li>现在编程越来越普及，每个人都可以参与和贡献开源项目，去做一些有意思的东西分享出来，那么从受众、交流便利度、访问速度等方面，码云都有优势</li>
</ul>
</blockquote>
<h3 id="2-然后再导入一个已存在的仓库"><a href="#2-然后再导入一个已存在的仓库" class="headerlink" title="2.然后再导入一个已存在的仓库"></a>2.然后再导入一个已存在的仓库</h3><p><img src="https://img-blog.csdnimg.cn/20200320141256184.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDk4NDY2NA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<p><img src="https://img-blog.csdnimg.cn/20200320141311719.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDk4NDY2NA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>&lt;</p>
<h3 id="之后就可以直接下载啦"><a href="#之后就可以直接下载啦" class="headerlink" title="之后就可以直接下载啦"></a>之后就可以直接下载啦</h3><p>提供两种方式</p>
<ul>
<li><p><img src="https://img-blog.csdnimg.cn/2020032014133476.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDk4NDY2NA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
</li>
<li><p>还是用git  clone （”链接”）就好啦</p>
</li>
<li><p>不过就是多了一步要输入你的gitee账号</p>
</li>
<li><p><img src="https://img-blog.csdnimg.cn/20200320141355982.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDk4NDY2NA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
</li>
</ul>
<p>看一下下载速度<br><img src="https://img-blog.csdnimg.cn/20200320141411962.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDk4NDY2NA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<p>下载速度差不多是之前的100倍</p>
<p>d=====(￣▽￣*)b</p>
<p>完美解决</p>
]]></content>
      <categories>
        <category>git</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>贪吃蛇，HTML+CSS+JS实现</title>
    <url>/2020/03/26/%E8%B4%AA%E5%90%83%E8%9B%87%EF%BC%8CHTML-CSS-JS%E5%AE%9E%E7%8E%B0/</url>
    <content><![CDATA[<br>

<h4 id="效果图"><a href="#效果图" class="headerlink" title="效果图:"></a>效果图:</h4><p><img src="https://img-blog.csdnimg.cn/20200320140401390.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDk4NDY2NA==,size_16,color_FFFFFF,t_70#pic_center" alt="贪吃蛇游戏"></p>
<h4 id="实现过程"><a href="#实现过程" class="headerlink" title="实现过程"></a>实现过程</h4><ul>
<li>搭建基本HTML，CSS框架</li>
<li>JS实现核心游戏过程<ul>
<li>canvas画布上绘制地图、小蛇、食物</li>
<li>食物随机生成，不能生成在小蛇身上</li>
<li>键盘控制小蛇移动</li>
<li>小蛇成长</li>
<li>小蛇撞墙</li>
</ul>
</li>
<li>setInterval添加计时器</li>
<li>添加button事件</li>
</ul>
<br>

<p>[注]：WSAD分别控制上下左右</p>
<h4 id="源代码"><a href="#源代码" class="headerlink" title="源代码"></a>源代码</h4><br>

<p><code>index.html</code></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>贪吃蛇<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">'text/css'</span>&gt;</span></span><br><span class="line"><span class="css">    *&#123;<span class="attribute">margin</span>:<span class="number">0</span>;&#125;</span></span><br><span class="line"><span class="css">	<span class="selector-class">.map</span>&#123;<span class="attribute">margin</span>:<span class="number">20px</span> auto;</span></span><br><span class="line"><span class="css">		<span class="selector-tag">height</span><span class="selector-pseudo">:600px</span>;</span></span><br><span class="line"><span class="css">		<span class="selector-tag">width</span><span class="selector-pseudo">:900px</span>;</span></span><br><span class="line"><span class="css">		<span class="selector-tag">background</span><span class="selector-pseudo">:gray</span>;</span></span><br><span class="line"><span class="css">		<span class="selector-tag">border</span><span class="selector-pseudo">:10px</span> <span class="selector-tag">solid</span> <span class="selector-id">#AFAEB2</span>;</span></span><br><span class="line"><span class="css">		<span class="selector-tag">border-radius</span><span class="selector-pseudo">:8px</span>;</span></span><br><span class="line">	&#125;</span><br><span class="line"><span class="css">    <span class="selector-id">#timeBox</span>&#123;</span></span><br><span class="line">        background-color: indigo;</span><br><span class="line">        height: 45px;</span><br><span class="line">        width: 500px;</span><br><span class="line"><span class="css">        <span class="selector-tag">border</span><span class="selector-pseudo">:10px</span> <span class="selector-tag">solid</span> <span class="selector-id">#AFAEB2</span>;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">border-radius</span><span class="selector-pseudo">:8px</span>;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">margin</span><span class="selector-pseudo">:20px</span> <span class="selector-tag">auto</span>;</span></span><br><span class="line">        padding-top: 4px;</span><br><span class="line">        font-size: 45px;</span><br><span class="line"><span class="css">        <span class="selector-tag">color</span><span class="selector-pseudo">:white</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.btn</span>&#123;</span></span><br><span class="line">         margin-left: 500px;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"./index.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span> =<span class="string">"timeBox"</span> <span class="attr">align</span> =<span class="string">"center"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"id_H"</span>&gt;</span>00<span class="tag">&lt;/<span class="name">span</span>&gt;</span>:</span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"id_M"</span>&gt;</span>00<span class="tag">&lt;/<span class="name">span</span>&gt;</span>:</span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"id_S"</span>&gt;</span>00<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"btn"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"开始"</span> <span class="attr">id</span> =<span class="string">"btnStart"</span> <span class="attr">style</span>=<span class="string">"width: 100px ;height: 30px;"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"暂停"</span> <span class="attr">id</span> =<span class="string">"btnPause"</span> <span class="attr">style</span>=<span class="string">"width: 100px ;height: 30px;"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"新游戏"</span> <span class="attr">id</span> =<span class="string">"btnStartANewGanme"</span> <span class="attr">style</span>=<span class="string">"width: 100px ;height: 30px;"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"入门级"</span> <span class="attr">id</span> =<span class="string">"btnSimple"</span> <span class="attr">style</span>=<span class="string">"width: 100px ;height: 30px;"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"正常级"</span> <span class="attr">id</span> =<span class="string">"btnNomal"</span> <span class="attr">style</span>=<span class="string">"width: 100px ;height: 30px;"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"地狱级"</span> <span class="attr">id</span> =<span class="string">"btnHard"</span> <span class="attr">style</span>=<span class="string">"width: 100px ;height: 30px;"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"map"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">canvas</span> <span class="attr">id</span>=<span class="string">"canvas"</span> <span class="attr">height</span>=<span class="string">"600"</span> <span class="attr">width</span>=<span class="string">"900"</span>&gt;</span><span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">   </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<br>

<p><code>index.js</code></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">// 简化操作</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">$</span>(<span class="params">id</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">document</span>.getElementById(id);</span><br><span class="line">    &#125;</span><br><span class="line">	<span class="keyword">var</span> c=$(<span class="string">"canvas"</span>);</span><br><span class="line">    <span class="keyword">var</span> ctx=c.getContext(<span class="string">"2d"</span>);</span><br><span class="line">    <span class="comment">//定义一条蛇</span></span><br><span class="line">    <span class="keyword">var</span> snake =[];</span><br><span class="line">    <span class="comment">//初始化蛇的长度</span></span><br><span class="line">    <span class="keyword">var</span> snakeCount = <span class="number">6</span>;</span><br><span class="line">    <span class="comment">//food </span></span><br><span class="line">	<span class="keyword">var</span> foodx =<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">var</span> foody =<span class="number">0</span>;</span><br><span class="line">    <span class="comment">//snack move speed</span></span><br><span class="line">    <span class="keyword">var</span> moveSpeed = <span class="number">150</span>;  </span><br><span class="line">    <span class="comment">// direction</span></span><br><span class="line">    <span class="keyword">var</span> togo =<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// draw map</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">drawtable</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">// draw Vertical line</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;<span class="number">60</span>;i++)<span class="comment">//画竖线</span></span><br><span class="line">        &#123;</span><br><span class="line">        ctx.strokeStyle=<span class="string">"black"</span>;</span><br><span class="line">        ctx.beginPath();</span><br><span class="line">        ctx.moveTo(<span class="number">15</span>*i,<span class="number">0</span>);</span><br><span class="line">        ctx.lineTo(<span class="number">15</span>*i,<span class="number">600</span>);</span><br><span class="line">        ctx.closePath();</span><br><span class="line">        ctx.stroke();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// draw Horizontal line</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> j=<span class="number">0</span>;j&lt;<span class="number">40</span>;j++)</span><br><span class="line">        &#123;</span><br><span class="line">        ctx.strokeStyle=<span class="string">"black"</span>;</span><br><span class="line">        ctx.beginPath();</span><br><span class="line">        ctx.moveTo(<span class="number">0</span>,<span class="number">15</span>*j);</span><br><span class="line">        ctx.lineTo(<span class="number">900</span>,<span class="number">15</span>*j);</span><br><span class="line">        ctx.closePath();</span><br><span class="line">        ctx.stroke();</span><br><span class="line">        &#125;</span><br><span class="line">        drawSnackAndFood();</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">drawSnackAndFood</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> k=<span class="number">0</span>;k&lt;snakeCount;k++)<span class="comment">//画蛇的身体</span></span><br><span class="line">		&#123;</span><br><span class="line">			ctx.fillStyle=<span class="string">"#000"</span>;</span><br><span class="line">			<span class="keyword">if</span> (k==snakeCount<span class="number">-1</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				ctx.fillStyle=<span class="string">"blue"</span>;<span class="comment">//蛇头的颜色与身体区分开</span></span><br><span class="line">			&#125;</span><br><span class="line">			ctx.fillRect(snake[k].x,snake[k].y,<span class="number">15</span>,<span class="number">15</span>);<span class="comment">//前两个数是矩形的起始坐标，后两个数是矩形的长宽。</span></span><br><span class="line">		&#125;</span><br><span class="line">		<span class="comment">// draw food</span></span><br><span class="line">        ctx.fillStyle =<span class="string">"black"</span>;</span><br><span class="line">        ctx.fillRect(foodx,foody,<span class="number">15</span>,<span class="number">15</span>);</span><br><span class="line">        ctx.fill();</span><br><span class="line">    &#125;</span><br><span class="line">   </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">start</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">var</span> k=<span class="number">0</span>;k&lt;snakeCount;k++)</span><br><span class="line">    		&#123;</span><br><span class="line">    			snake[k]=&#123;<span class="attr">x</span>:k*<span class="number">15</span>,<span class="attr">y</span>:<span class="number">0</span>&#125;;	</span><br><span class="line">            &#125;</span><br><span class="line">        addfood();</span><br><span class="line">        drawtable();</span><br><span class="line">          <span class="comment">//在start中调用添加食物函数</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">addfood</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">	    foodx = <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random()*<span class="number">60</span>)*<span class="number">15</span>; <span class="comment">//随机产生一个0-1之间的数</span></span><br><span class="line">	    foody = <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random()*<span class="number">40</span>)*<span class="number">15</span>;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">var</span> k=<span class="number">0</span>;k&lt;snake;k++)</span><br><span class="line">		&#123;</span><br><span class="line">            <span class="comment">//防止产生的随机食物落在蛇身上</span></span><br><span class="line">			<span class="keyword">if</span> (foodx==snake[k].x&amp;&amp;foody==sanke[k].y)</span><br><span class="line">			addfood();</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;	</span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">move</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">   </span>&#123;</span><br><span class="line">    <span class="built_in">document</span>.onkeydown=<span class="function"><span class="keyword">function</span>(<span class="params">ev</span>)</span>&#123;</span><br><span class="line">                    <span class="keyword">switch</span>(ev.keyCode)</span><br><span class="line">                    &#123;</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">65</span>: togo = <span class="number">1</span>; <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">87</span>: togo = <span class="number">2</span>; <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">68</span>: togo = <span class="number">3</span>; <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">83</span>: togo = <span class="number">4</span>; <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">default</span>: togo = <span class="number">0</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">        　　&#125;</span><br><span class="line">        <span class="keyword">switch</span> (togo)</span><br><span class="line">	    &#123;</span><br><span class="line">	    <span class="keyword">case</span> <span class="number">1</span>: snake.push(&#123;<span class="attr">x</span>:snake[snakeCount<span class="number">-1</span>].x<span class="number">-15</span>,<span class="attr">y</span>:snake[snakeCount<span class="number">-1</span>].y&#125;); <span class="keyword">break</span>;<span class="comment">//left</span></span><br><span class="line">	    <span class="keyword">case</span> <span class="number">2</span>: snake.push(&#123;<span class="attr">x</span>:snake[snakeCount<span class="number">-1</span>].x,<span class="attr">y</span>:snake[snakeCount<span class="number">-1</span>].y<span class="number">-15</span>&#125;); <span class="keyword">break</span>;<span class="comment">//down</span></span><br><span class="line">	    <span class="keyword">case</span> <span class="number">3</span>: snake.push(&#123;<span class="attr">x</span>:snake[snakeCount<span class="number">-1</span>].x+<span class="number">15</span>,<span class="attr">y</span>:snake[snakeCount<span class="number">-1</span>].y&#125;); <span class="keyword">break</span>;<span class="comment">//right</span></span><br><span class="line">	    <span class="keyword">case</span> <span class="number">4</span>: snake.push(&#123;<span class="attr">x</span>:snake[snakeCount<span class="number">-1</span>].x,<span class="attr">y</span>:snake[snakeCount<span class="number">-1</span>].y+<span class="number">15</span>&#125;); <span class="keyword">break</span>;<span class="comment">//up</span></span><br><span class="line">	    <span class="keyword">default</span>: snake.push(&#123;<span class="attr">x</span>:snake[snakeCount<span class="number">-1</span>].x+<span class="number">15</span>,<span class="attr">y</span>:snake[snakeCount<span class="number">-1</span>].y&#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        snake.shift();<span class="comment">//删除数组第一个元素</span></span><br><span class="line">   	    ctx.clearRect(<span class="number">0</span>,<span class="number">0</span>,<span class="number">900</span>,<span class="number">600</span>);<span class="comment">//清除画布重新绘制</span></span><br><span class="line">    	isEat();</span><br><span class="line">	    isDead();</span><br><span class="line">	    drawtable();</span><br><span class="line">   &#125; 			</span><br><span class="line">  </span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">isEat</span>(<span class="params"></span>)//吃到食物后长度加1</span></span><br><span class="line"><span class="function">   </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(snake[snakeCount<span class="number">-1</span>].x==foodx&amp;&amp;snake[snakeCount<span class="number">-1</span>].y==foody)</span><br><span class="line">    &#123;</span><br><span class="line">		addfood();</span><br><span class="line">		snakeCount++;</span><br><span class="line">		snake.unshift(&#123;<span class="attr">x</span>:<span class="number">-15</span>,<span class="attr">y</span>:<span class="number">-15</span>&#125;);</span><br><span class="line">    &#125;</span><br><span class="line">   &#125;</span><br><span class="line">   </span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">isDead</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">   </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (snake[snakeCount<span class="number">-1</span>].x&gt;<span class="number">885</span>||snake[snakeCount<span class="number">-1</span>].y&gt;<span class="number">585</span>||snake[snakeCount<span class="number">-1</span>].x&lt;<span class="number">0</span>||snake[snakeCount<span class="number">-1</span>].y&lt;<span class="number">0</span>)</span><br><span class="line">		&#123;</span><br><span class="line">		alert(<span class="string">"You are dead,GAME OVER!!!"</span>);</span><br><span class="line">		<span class="built_in">window</span>.location.reload();</span><br><span class="line">		&#125;</span><br><span class="line">   &#125;</span><br><span class="line">   </span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">time</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">       <span class="keyword">var</span> count=<span class="number">0</span>;<span class="comment">//开始计时后的总秒数</span></span><br><span class="line"></span><br><span class="line">       <span class="keyword">var</span> timer = <span class="literal">null</span>;</span><br><span class="line">       <span class="keyword">var</span> timer2 = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">       $(<span class="string">"btnStart"</span>).onclick=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        timer=setInterval(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            count++;</span><br><span class="line">            <span class="comment">//改变显示的时分秒</span></span><br><span class="line">            $(<span class="string">"id_S"</span>).innerHTML=showNumber(count%<span class="number">60</span>);</span><br><span class="line">            $(<span class="string">"id_M"</span>).innerHTML=showNumber(<span class="built_in">parseInt</span>(count/<span class="number">60</span>)%<span class="number">60</span>);</span><br><span class="line">            $(<span class="string">"id_H"</span>).innerHTML=showNumber(<span class="built_in">parseInt</span>(count/<span class="number">3600</span>));</span><br><span class="line">                &#125;,<span class="number">1000</span>)</span><br><span class="line">            timer2= setInterval(move,moveSpeed);</span><br><span class="line">            drawtable();</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       $(<span class="string">"btnPause"</span>).onclick=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">           clearInterval(timer);</span><br><span class="line">           clearInterval(timer2);</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       $(<span class="string">"btnStartANewGanme"</span>).onclick=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        clearInterval(timer);</span><br><span class="line">        clearInterval(timer2);</span><br><span class="line">        count=<span class="number">0</span>;</span><br><span class="line">        $(<span class="string">"id_S"</span>).innerHTML=<span class="string">"00"</span>;</span><br><span class="line">        $(<span class="string">"id_M"</span>).innerHTML=<span class="string">"00"</span>;</span><br><span class="line">        $(<span class="string">"id_H"</span>).innerHTML=<span class="string">"00"</span>;</span><br><span class="line">        start();</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       $(<span class="string">"btnSimple"</span>).onclick=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">           moveSpeed =<span class="number">300</span>;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       $(<span class="string">"btnNomal"</span>).onclick=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        moveSpeed =<span class="number">150</span>;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       $(<span class="string">"btnHard"</span>).onclick=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        moveSpeed =<span class="number">65</span>;</span><br><span class="line">        &#125;</span><br><span class="line">   <span class="comment">// 处理单个数字</span></span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">showNumber</span>(<span class="params">num</span>)</span>&#123;</span><br><span class="line">       <span class="keyword">if</span>(num&lt;<span class="number">10</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"0"</span>+num;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> num;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//    准备开始</span></span><br><span class="line">   start();</span><br><span class="line"><span class="comment">//    等待点击按钮</span></span><br><span class="line">   time();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>Vue基础用法总结</title>
    <url>/2020/03/26/Vue%E5%9F%BA%E7%A1%80%E7%94%A8%E6%B3%95%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<br>



<h3 id="引入vue"><a href="#引入vue" class="headerlink" title="引入vue"></a>引入vue</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;!-- 开发环境版本，包含了有帮助的命令行警告 --&gt;</span><br><span class="line">&lt;script src=<span class="string">"https://cdn.jsdelivr.net/npm/vue/dist/vue.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">&lt;!-- 生产环境版本，优化了尺寸和速度 --&gt;</span><br><span class="line">&lt;script src=<span class="string">"https://cdn.jsdelivr.net/npm/vue"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<br>

<h3 id="官方文档"><a href="#官方文档" class="headerlink" title="官方文档"></a>官方文档</h3><p><a href="https://cn.vuejs.org/v2/api/" target="_blank" rel="noopener">https://cn.vuejs.org/v2/api/</a></p>
<br>

<h3 id="基本用法"><a href="#基本用法" class="headerlink" title="基本用法"></a>基本用法</h3><ul>
<li>插值表达式</li>
<li><code>v-text</code></li>
<li><code>v-html</code></li>
<li><code>v-show</code></li>
<li><code>v-if</code></li>
<li><code>v-on</code></li>
<li><code>v-bind</code> </li>
<li><code>v-for</code></li>
<li><code>v-model</code></li>
</ul>
<br>

<p> <code>插值表达式</code> </p>
<p>基本概念</p>
<ul>
<li><p>挂载点</p>
</li>
<li><p>数据对象</p>
</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    &#123;&#123;message&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">        &#123;&#123;message&#125;&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span></span><br><span class="line">            &#123;&#123;school.myname&#125;&#125;</span><br><span class="line">            &#123;&#123;school.mobile&#125;&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                &#123;&#123;compus[0]&#125;&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                &#123;&#123;compus[1]&#125;&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// vue会管理 el 挂载点命中的元素及其内部的后代元素</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 设置挂载点</span></span></span><br><span class="line"><span class="actionscript">        el: <span class="string">'.app'</span>,</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 设置数据对象</span></span></span><br><span class="line">        data: &#123;</span><br><span class="line">            </span><br><span class="line"><span class="actionscript">            message: <span class="string">"Hello Vue"</span>,</span></span><br><span class="line">            </span><br><span class="line">            school: &#123;</span><br><span class="line"><span class="actionscript">                myname: <span class="string">"李毅"</span>,</span></span><br><span class="line"><span class="actionscript">                mobile: <span class="string">"15144849101"</span></span></span><br><span class="line">            &#125;,</span><br><span class="line">            </span><br><span class="line"><span class="actionscript">            compus: [<span class="string">'nankai'</span>, <span class="string">'tinghua'</span>]</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<br>

<p><code>v-text</code></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-text</span>=<span class="string">"message+'!'"</span>&gt;</span>深圳<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-text</span>=<span class="string">"info+'!'"</span>&gt;</span>深圳<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>&#123;&#123; message +'!'&#125;&#125;深圳<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 开发环境版本，包含了有帮助的命令行警告 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/vue/dist/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">            el:<span class="string">"#app"</span>,</span></span><br><span class="line">            data:&#123;</span><br><span class="line"><span class="actionscript">                message:<span class="string">"hhhhh"</span>,</span></span><br><span class="line"><span class="actionscript">                info:<span class="string">"nbnbnbnb"</span></span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<br>

<p><code>v-html</code></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-html</span>=<span class="string">'content'</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-text</span>=<span class="string">'content'</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 开发环境版本，包含了有帮助的命令行警告 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/vue/dist/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">            el:<span class="string">"#app"</span>,</span></span><br><span class="line">            data:&#123;</span><br><span class="line"><span class="handlebars"><span class="xml">                content:"<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">'https://blog.csdn.net/weixin_44984664'</span>&gt;</span> 'Joshua_yi'<span class="tag">&lt;/<span class="name">a</span>&gt;</span>"</span></span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<br>

<p><code>v-show</code></p>
<p><strong>功能：控制元素是否显示</strong></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 表达式会转化成bool值 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">img</span> <span class="attr">v-show</span>=<span class="string">"isShow"</span> <span class="attr">src</span>=<span class="string">"./img/monkey.gif"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">img</span> <span class="attr">v-show</span>=<span class="string">"age&gt;=18"</span> <span class="attr">src</span>=<span class="string">"./img/monkey.gif"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 1.开发环境版本，包含了有帮助的命令行警告 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/vue/dist/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">        el:<span class="string">"#app"</span>,</span></span><br><span class="line">        data:&#123;</span><br><span class="line"><span class="actionscript">          isShow:<span class="literal">false</span>,</span></span><br><span class="line">          age:17</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<br>

<p><code>v-if</code></p>
<p><strong>功能：控制元素是否显示</strong></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"切换显示"</span> @<span class="attr">click</span>=<span class="string">"toggleIsShow"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 操作的是DOM --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-if</span>=<span class="string">"isShow"</span>&gt;</span>hhhhh<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 操作的是样式 --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 开发中频繁操作的用v-show,反之用v-if --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-show</span>=<span class="string">"isShow"</span>&gt;</span>hhhhh - v-show修饰<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-if</span>=<span class="string">"temperature&gt;=35"</span>&gt;</span>热死啦<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 开发环境版本，包含了有帮助的命令行警告 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/vue/dist/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">            el:<span class="string">"#app"</span>,</span></span><br><span class="line">            data:&#123;</span><br><span class="line"><span class="actionscript">                isShow:<span class="literal">false</span>,</span></span><br><span class="line">                temperature:20</span><br><span class="line">            &#125;,</span><br><span class="line">            methods: &#123;</span><br><span class="line"><span class="actionscript">                toggleIsShow:<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">this</span>.isShow = !<span class="keyword">this</span>.isShow;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">        &#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<br>

<p><code>v-on</code></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--  @ == v-on --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"v-on指令"</span> @<span class="attr">click</span>=<span class="string">"doIt(666)"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"v-on指令"</span> <span class="attr">v-onclick</span>=<span class="string">"doIt(666)"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- &lt;input type="button" name="" id="" value="事件绑定" v-on:monseenter="方法"&gt; --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">name</span>=<span class="string">""</span> <span class="attr">id</span>=<span class="string">""</span> <span class="attr">value</span>=<span class="string">"双击"</span> @<span class="attr">dblclick</span>=<span class="string">"doIt(666)"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- &lt;input type="text" @keyup.enter="sayHi"&gt; --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span> @<span class="attr">click</span>=<span class="string">"changFood"</span>&gt;</span></span><br><span class="line">                &#123;&#123;food&#125;&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 1.开发环境版本，包含了有帮助的命令行警告 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/vue/dist/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">            el:<span class="string">"#app"</span>,</span></span><br><span class="line">            data:&#123;</span><br><span class="line"><span class="actionscript">                food:<span class="string">"泡面"</span></span></span><br><span class="line">            &#125;,</span><br><span class="line">            methods: &#123;</span><br><span class="line"><span class="actionscript">                doIt:<span class="function"><span class="keyword">function</span><span class="params">(p1)</span></span>&#123;</span></span><br><span class="line">                    alert(p1);</span><br><span class="line">                &#125;,</span><br><span class="line"><span class="actionscript">                sayHi:<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">                    alert(<span class="string">"吃了没"</span>);</span></span><br><span class="line">                &#125;,</span><br><span class="line"><span class="actionscript">                changFood:<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">this</span>.food+=<span class="string">"好吃！"</span>;</span></span><br><span class="line"><span class="actionscript">                    alert(<span class="keyword">this</span>.food);</span></span><br><span class="line">                &#125;,</span><br><span class="line">            &#125;,</span><br><span class="line">        &#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<br>

<p><code>v-bind</code> </p>
<p><strong>功能：操纵元素的属性</strong></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>v-bind指令<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.active</span>&#123;</span></span><br><span class="line">            border: 1px solid red;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">v-bind:src</span>=<span class="string">"imgSrc"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 简写 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">:src</span>=<span class="string">"imgSrc"</span> <span class="attr">alt</span>=<span class="string">""</span> <span class="attr">:title</span>=<span class="string">"imgTitle+'!!!'"</span> <span class="attr">:class</span>=<span class="string">"isActive?'active':''"</span> @<span class="attr">click</span>=<span class="string">"toggleActive"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">:src</span>=<span class="string">"imgSrc"</span> <span class="attr">alt</span>=<span class="string">""</span> <span class="attr">:title</span>=<span class="string">"imgTitle+'!!!'"</span> <span class="attr">:class</span>=<span class="string">"&#123;active:isActive&#125;"</span> @<span class="attr">click</span>=<span class="string">"toggleActive"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 开发环境版本，包含了有帮助的命令行警告 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/vue/dist/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">            el:<span class="string">"#app"</span>,</span></span><br><span class="line">            data:&#123;</span><br><span class="line"><span class="actionscript">                imgSrc:<span class="string">"http://www.itheima.com/images/logo.png"</span>,</span></span><br><span class="line"><span class="actionscript">                imgTitle:<span class="string">"黑马程序员"</span>,</span></span><br><span class="line"><span class="actionscript">                isActive:<span class="literal">false</span></span></span><br><span class="line">            &#125;,</span><br><span class="line">            methods: &#123;</span><br><span class="line"><span class="actionscript">                toggleActive:<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">this</span>.isActive = !<span class="keyword">this</span>.isActive;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">        &#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<br>

<p><code>v-for</code></p>
<p>功能：类似于循环</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"添加数据"</span> @<span class="attr">click</span>=<span class="string">"add"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"移除数据"</span> @<span class="attr">click</span>=<span class="string">"remove"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">"(it,index) in arr"</span>&gt;</span></span><br><span class="line">                &#123;&#123; index+1 &#125;&#125;黑马程序员校区:&#123;&#123; it &#125;&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-for</span>=<span class="string">"item in vegetables"</span> <span class="attr">v-bind:title</span>=<span class="string">"item.name"</span>&gt;</span></span><br><span class="line">            &#123;&#123; item.name &#125;&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 1.开发环境版本，包含了有帮助的命令行警告 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/vue/dist/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">            el:<span class="string">"#app"</span>,</span></span><br><span class="line">            data:&#123;</span><br><span class="line"><span class="actionscript">                arr:[<span class="string">"北京"</span>,<span class="string">"上海"</span>,<span class="string">"广州"</span>,<span class="string">"深圳"</span>],</span></span><br><span class="line">                vegetables:[</span><br><span class="line"><span class="actionscript">                    &#123;name:<span class="string">"西兰花炒蛋"</span>&#125;,</span></span><br><span class="line"><span class="actionscript">                    &#123;name:<span class="string">"蛋炒西蓝花"</span>&#125;</span></span><br><span class="line">                ]</span><br><span class="line">            &#125;,</span><br><span class="line">            methods: &#123;</span><br><span class="line"><span class="actionscript">                add:<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">this</span>.vegetables.push(&#123; name:<span class="string">"花菜炒蛋"</span> &#125;);</span></span><br><span class="line">                &#125;,</span><br><span class="line"><span class="actionscript">                remove:<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">this</span>.vegetables.shift();</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">        &#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<br>

<p><code>v-model</code></p>
<p>功能：</p>
<ul>
<li>便捷的设置和获取表单元素的值</li>
<li>绑定的数据会和表单元素的值相关联</li>
<li>表单的数据&lt;-&gt;表单元素的值 ，双向传递</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 便捷的设置和获取表单元素的值 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 绑定的数据会和表单元素的值相关联 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 表单的数据&lt;-&gt;表单元素的值 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"修改message"</span> @<span class="attr">click</span>=<span class="string">"setM"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">v-model</span>=<span class="string">"message"</span> @<span class="attr">keyup.enter</span>=<span class="string">"getM"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>&#123;&#123; message &#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 开发环境版本，包含了有帮助的命令行警告 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/vue/dist/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">            el:<span class="string">"#app"</span>,</span></span><br><span class="line">            data:&#123;</span><br><span class="line"><span class="actionscript">                message:<span class="string">"黑马程序员"</span></span></span><br><span class="line">            &#125;,</span><br><span class="line">            methods: &#123;</span><br><span class="line"><span class="actionscript">                getM:<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">                    alert(<span class="keyword">this</span>.message);</span></span><br><span class="line">                &#125;,</span><br><span class="line"><span class="actionscript">                setM:<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">this</span>.message =<span class="string">"酷丁鱼"</span>;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">        &#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>Axios+Vue 示例——获取一条笑话</title>
    <url>/2020/03/26/Axios-Vue-%E7%A4%BA%E4%BE%8B%E2%80%94%E2%80%94%E8%8E%B7%E5%8F%96%E4%B8%80%E6%9D%A1%E7%AC%91%E8%AF%9D/</url>
    <content><![CDATA[<br>

<p><a href="https://github.com/axios/axios" target="_blank" rel="noopener">axios   github地址d=====(￣▽￣*)b</a></p>
<br>

<h3 id="ajax-jqueryAjax-fetch-axios对比"><a href="#ajax-jqueryAjax-fetch-axios对比" class="headerlink" title="ajax, jqueryAjax, fetch,axios对比"></a>ajax, jqueryAjax, fetch,axios对比</h3><blockquote>
<p><strong>ajax</strong></p>
<ul>
<li><strong>优点</strong>：局部更新；原生支持</li>
<li><strong>缺点</strong>：可能破坏浏览器后退功能；嵌套回调难处理</li>
</ul>
<p><strong>jqueryAjax</strong></p>
<ul>
<li>在原生的ajax的基础上进行了封装；支持jsonp</li>
</ul>
<p><strong>fetch</strong></p>
<ul>
<li><strong>优点</strong>：解决回调地狱</li>
<li><strong>缺点</strong>：API 偏底层，需要封装;默认不带Cookie，需要手动添加; 浏览器支持情况不是很友好，需要第三方的ployfill</li>
</ul>
<p><strong>axios</strong></p>
<ul>
<li>几乎完美</li>
</ul>
</blockquote>
<br>

<h3 id="示例获取一条笑话"><a href="#示例获取一条笑话" class="headerlink" title="示例获取一条笑话"></a>示例获取一条笑话</h3><p>效果：<br><img src="https://img-blog.csdnimg.cn/20200320225040788.png#pic_center" alt="在这里插入图片描述"></p>
<br>

<p>代码：<br>引入axios</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;!-- 官网提供的 axios 在线地址 --&gt;</span><br><span class="line">   &lt;script src=<span class="string">"https://unpkg.com/axios/dist/axios.min.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>
<br>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>axios+vue<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"获取笑话"</span> @<span class="attr">click</span>=<span class="string">"getJoke"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span> &#123;&#123; joke &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 官网提供的 axios 在线地址 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://unpkg.com/axios/dist/axios.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 开发环境版本，包含了有帮助的命令行警告 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/vue/dist/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line">        /*</span><br><span class="line">            接口:随机获取一条笑话</span><br><span class="line"><span class="actionscript">            请求地址:https:<span class="comment">//autumnfish.cn/api/joke</span></span></span><br><span class="line"><span class="actionscript">            请求方法:<span class="keyword">get</span></span></span><br><span class="line">            请求参数:无</span><br><span class="line">            响应内容:随机笑话</span><br><span class="line">        */</span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">            el:<span class="string">"#app"</span>,</span></span><br><span class="line">            data:&#123;</span><br><span class="line"><span class="actionscript">                joke:<span class="string">"很好笑的笑话"</span></span></span><br><span class="line">            &#125;,</span><br><span class="line">            methods: &#123;</span><br><span class="line"><span class="actionscript">                getJoke:<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">                    <span class="comment">// this 会改变 所以就先存起来</span></span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">var</span> that = <span class="keyword">this</span>;</span></span><br><span class="line"><span class="vbscript">                    axios.<span class="keyword">get</span>(<span class="string">"https://autumnfish.cn/api/joke"</span>).<span class="keyword">then</span>(<span class="keyword">function</span>(<span class="built_in">response</span>)&#123;</span></span><br><span class="line"><span class="actionscript">                        <span class="comment">// console.log(response)</span></span></span><br><span class="line"><span class="vbscript">                        console.<span class="built_in">log</span>(<span class="built_in">response</span>.data);</span></span><br><span class="line"><span class="actionscript">                        <span class="comment">// console.log(this.joke);</span></span></span><br><span class="line"><span class="vbscript">                        that.joke = <span class="built_in">response</span>.data;</span></span><br><span class="line"><span class="actionscript">                    &#125;,<span class="function"><span class="keyword">function</span> <span class="params">(err)</span> </span>&#123; </span></span><br><span class="line"><span class="vbscript">                        console.<span class="built_in">log</span>(<span class="built_in">err</span>);</span></span><br><span class="line">                    &#125;)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">        &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>Kruskal算法——UnionFind数据结构实现并优化</title>
    <url>/2020/03/26/Kruskal%E7%AE%97%E6%B3%95%E2%80%94%E2%80%94UnionFind%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AE%9E%E7%8E%B0%E5%B9%B6%E4%BC%98%E5%8C%96/</url>
    <content><![CDATA[<h3 id="一、概述"><a href="#一、概述" class="headerlink" title="一、概述"></a>一、概述</h3><p>最小生成树（MST, Minimum Spanning Tree）问题简单来说就是在多个地方修路路程的最短，</p>
<p>或者在多个选择中选择花费做少的路线。</p>
<br>

<p>求解最小生成树的算法的方法有</p>
<p>Prim算法，Kruskal算法，以及Reverse-Delete algorithm（反向删除算法）</p>
<p>比较而言</p>
<p><strong>prim算法适合稠密图，kruskal算法适合简单图。</strong></p>
<br>

<p>下面来用Kruskal算法实现最小生成树</p>
<h3 id="二、Kruskal算法"><a href="#二、Kruskal算法" class="headerlink" title="二、Kruskal算法"></a>二、Kruskal算法</h3><p>伪代码如下</p>
<p><img src="https://img-blog.csdnimg.cn/20200323160238320.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDk4NDY2NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>需要用到uniofind数据结构来维护图的边和顶点</p>
<p>简单来说这种数据结构可以用来维护多个集合，判断某个元素是否在某个集合里，以及完成集合间的合并</p>
<br>

<h3 id="三、题目"><a href="#三、题目" class="headerlink" title="三、题目"></a>三、题目</h3><blockquote>
<p><strong>数据输入:</strong><br>第一行是2个整数,分别表示顶点个数n和边数m。接下来的m行中,每一行第一个整<br>数表示边的开始顶点，第二个表示边的结束顶点，第三个表示这条边的权重。<br>(<br>测试数据中保证图是连通图；<br>没有自环；<br>两个顶点之间只有一条边；<br>0&lt;权重&lt;100(可以相等)； n&lt;=50; m&lt;=1000；<br>)<br><strong>结果输出:</strong><br>输出无向连通图最小生成树权重之和  </p>
</blockquote>
<br>

<p>代码如下，使用了平衡并查集来降低集合合并的复杂度</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// UnionFind base class</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UnionFind</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	UnionFind(<span class="keyword">int</span> n);</span><br><span class="line">	~UnionFind();</span><br><span class="line">	<span class="function"><span class="keyword">virtual</span> <span class="keyword">bool</span> <span class="title">Connected</span><span class="params">(<span class="keyword">int</span> p, <span class="keyword">int</span> q)</span> </span>= <span class="number">0</span>;</span><br><span class="line">	<span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">Union</span><span class="params">(<span class="keyword">int</span> p, <span class="keyword">int</span> q)</span> </span>= <span class="number">0</span>;</span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line">	<span class="keyword">int</span> *id;</span><br><span class="line">	<span class="keyword">int</span> *sz;<span class="comment">// store every vertex set's connect with how many vertexs</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">UnionFind::UnionFind(<span class="keyword">int</span> n)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">this</span>-&gt;id = <span class="keyword">new</span> <span class="keyword">int</span>[n];</span><br><span class="line">	<span class="keyword">this</span>-&gt;sz = <span class="keyword">new</span> <span class="keyword">int</span>[n];</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">		<span class="comment">// initialize every vertex set has only 1 vertex</span></span><br><span class="line">		<span class="keyword">this</span>-&gt;id[i] = i;</span><br><span class="line">		<span class="keyword">this</span>-&gt;sz[i] = <span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br><span class="line">UnionFind::~UnionFind()</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">delete</span> <span class="keyword">this</span>-&gt;id;</span><br><span class="line">	<span class="keyword">delete</span> &amp;<span class="keyword">this</span>-&gt;sz;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 平衡并查集</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">QuickUnion</span> :</span> <span class="keyword">public</span> UnionFind</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	QuickUnion(<span class="keyword">int</span> n);</span><br><span class="line">	<span class="function"><span class="keyword">bool</span> <span class="title">Connected</span><span class="params">(<span class="keyword">int</span> p, <span class="keyword">int</span> q)</span></span>;</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">Union</span><span class="params">(<span class="keyword">int</span> p, <span class="keyword">int</span> q)</span></span>;</span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line">	<span class="function"><span class="keyword">int</span> <span class="title">findRoot</span><span class="params">(<span class="keyword">int</span> p)</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">QuickUnion::QuickUnion(<span class="keyword">int</span> n) :UnionFind(n) &#123;&#125;;</span><br><span class="line"><span class="keyword">int</span> QuickUnion::findRoot(<span class="keyword">int</span> p)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">while</span> (p != <span class="keyword">this</span>-&gt;id[p])</span><br><span class="line">		p = <span class="keyword">this</span>-&gt;id[p];</span><br><span class="line">	<span class="keyword">return</span> p;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> QuickUnion::Connected(<span class="keyword">int</span> p, <span class="keyword">int</span> q)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">return</span> <span class="keyword">this</span>-&gt;findRoot(p) == <span class="keyword">this</span>-&gt;findRoot(q);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> QuickUnion::Union(<span class="keyword">int</span> p, <span class="keyword">int</span> q)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">int</span> rootp = <span class="keyword">this</span>-&gt;findRoot(p);</span><br><span class="line">	<span class="keyword">int</span> rootq = <span class="keyword">this</span>-&gt;findRoot(q);</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">if</span> (rootq == rootp)<span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//比较p属于的集合与q属于的集合的大小</span></span><br><span class="line">	<span class="keyword">if</span> (<span class="keyword">this</span>-&gt;sz[rootp]&gt;<span class="keyword">this</span>-&gt;sz[rootq])   </span><br><span class="line">	&#123;</span><br><span class="line">		<span class="comment">//如果p的集合较大，我们将q的根结点的父节点设置为i的根结点</span></span><br><span class="line">		<span class="keyword">this</span>-&gt;id[rootq] = <span class="keyword">this</span>-&gt;id[rootp];</span><br><span class="line">		<span class="comment">//更新合并后的新集合大小，一个集合的大小只保存在它的根结点</span></span><br><span class="line">		<span class="keyword">this</span>-&gt;sz[rootp] += <span class="keyword">this</span>-&gt;sz[rootq];</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">this</span>-&gt;id[rootp] =<span class="keyword">this</span>-&gt;id[rootq];</span><br><span class="line">		<span class="keyword">this</span>-&gt;sz[rootq] += <span class="keyword">this</span>-&gt;sz[rootp];</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">EVNode</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	<span class="keyword">int</span> vertex1;</span><br><span class="line">	<span class="keyword">int</span> vertex2;</span><br><span class="line">	<span class="keyword">int</span> weight;</span><br><span class="line">&#125;EVUion;</span><br><span class="line"></span><br><span class="line"><span class="comment">// n : vertex number </span></span><br><span class="line"><span class="comment">// m : edge number</span></span><br><span class="line"><span class="keyword">int</span> n = <span class="number">0</span>, m = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">vector</span>&lt;EVNode&gt; loadData() &#123;</span><br><span class="line">	<span class="built_in">vector</span>&lt;EVNode&gt; EV_Vector;</span><br><span class="line">	<span class="built_in">cin</span> &gt;&gt; n &gt;&gt; m;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; i++) &#123;</span><br><span class="line">		<span class="keyword">int</span> v1, v2, w;</span><br><span class="line">		<span class="built_in">cin</span> &gt;&gt; v1 &gt;&gt; v2 &gt;&gt; w;</span><br><span class="line">		EVUion.vertex1 = v1;</span><br><span class="line">		EVUion.vertex2 = v2;</span><br><span class="line">		EVUion.weight = w;</span><br><span class="line">		EV_Vector.push_back(EVUion);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> EV_Vector;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">sortWeight</span><span class="params">( EVNode evNd1, EVNode evNd2)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">return</span> evNd1.weight &lt; evNd2.weight;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Kruskal algorithm</span></span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; Kruskal(<span class="built_in">vector</span>&lt;EVNode&gt; ev) &#123;</span><br><span class="line">	<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; T;</span><br><span class="line">	<span class="comment">// sort ev vector according to the weight</span></span><br><span class="line">	sort(ev.begin(), ev.end(), sortWeight);</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">"sorted after"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; i++)</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; ev[i].vertex1 &lt;&lt; <span class="string">" "</span> &lt;&lt; ev[i].vertex2 &lt;&lt; <span class="string">" "</span> &lt;&lt; ev[i].weight &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="comment">// make a set containing singleton vertex</span></span><br><span class="line">	QuickUnion *Vertex_union = <span class="keyword">new</span> QuickUnion(n);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; i++) &#123;</span><br><span class="line">		<span class="comment">// if ev[i].vertex1 ev[i].vertex2 in different set ,in other words </span></span><br><span class="line">		<span class="keyword">if</span> (Vertex_union-&gt;Connected(ev[i].vertex1<span class="number">-1</span>, ev[i].vertex2<span class="number">-1</span>)!=<span class="literal">true</span>) &#123;</span><br><span class="line">			<span class="comment">// add this edge to the tree </span></span><br><span class="line">			T.push_back(ev[i].weight);</span><br><span class="line">			<span class="comment">// margin the sets containing ev[i].vertex1 ev[i].vertex2</span></span><br><span class="line">			Vertex_union-&gt;Union(ev[i].vertex1<span class="number">-1</span>, ev[i].vertex2<span class="number">-1</span>);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> T;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="built_in">vector</span>&lt;EVNode&gt; EV_Vector;</span><br><span class="line">	EV_Vector=loadData();</span><br><span class="line">	<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; T;</span><br><span class="line">	T = Kruskal(EV_Vector);</span><br><span class="line">	<span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">"The edge of the minimum spanning tree is"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; T.size(); i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; T[i] &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">		sum += T[i];</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">"sum="</span>&lt;&lt;sum;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="四、结果测试"><a href="#四、结果测试" class="headerlink" title="四、结果测试"></a>四、结果测试</h3><p>输入：</p>
<p><code>6 10
1 2 6
1 3 1
1 4 5
2 3 5
2 5 3
3 4 5
3 5 6
3 6 4
4 6 2
5 6 6</code></p>
<p>图形展示</p>
<img src="https://img-blog.csdnimg.cn/20200323162004109.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDk4NDY2NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" style="zoom:50%;">

<p><a href="https://csacademy.com/app/graph_editor/" target="_blank" rel="noopener">一个专门做图论的图的网站  d=====(￣▽￣*)b</a></p>
<p>输出：</p>
<img src="https://img-blog.csdnimg.cn/20200323161709141.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDk4NDY2NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" style="zoom:33%;">

<p>结果正确  d=====(￣▽￣*)b</p>
]]></content>
      <categories>
        <category>算法</category>
      </categories>
      <tags>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title>前端框架总结</title>
    <url>/2020/03/26/%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<br>
推荐一个超级厉害的前端网站

<p><a href="http://www.fly63.com/nav" target="_blank" rel="noopener">http://www.fly63.com/nav</a><br>适合像我一样的小白入门<br><img src="https://img-blog.csdnimg.cn/20200325160521861.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDk4NDY2NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>他已经按模块将很多的前端相关的网站都总结了<br>内容非常丰富 d=====(￣▽￣*)b<br>下面是小编搜集的一些相关的框架和项目<br><br></p>
<h3 id="15种CSS框架"><a href="#15种CSS框架" class="headerlink" title="15种CSS框架"></a>15种CSS框架</h3><p><strong>1. Bootstrap</strong></p>
<p><a href="https://getbootstrap.com/" target="_blank" rel="noopener">https://getbootstrap.com</a><br><img src="https://img-blog.csdnimg.cn/2020032516123942.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDk4NDY2NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>最初被称为Twitter Blueprint的Bootstrap，是作为内部团队使用的工具而创建的。它是最著名的前端框架之一。自公开发布以来，Bootstrap的使用率逐年攀升。</p>
<p>Bootstrap提供了报警、按钮、轮播、下拉式菜单、以及表单等设计模板。借助Bootstrap的移动优先(mobile-first)功能，您可以轻松地创建响应式布局，进而保证在横跨多个设备上的设计一致性。</p>
<p><strong>2. Skeleton</strong></p>
<p><a href="http://getskeleton.com/" target="_blank" rel="noopener">http://getskeleton.com/</a><br><img src="https://img-blog.csdnimg.cn/20200325161514292.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDk4NDY2NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>Skeleton号称“简单的响应式样板”。由于此框架只有大约400行代码，因此它更适合于小型项目，以及开发人员需要创建轻量级内容的应用场景。</p>
<p>由于布局简单，Skeleton对于那些刚开始使用前端框架的人来说，是一个不错的选择。当然，也正是缺少CSS设计模板、预处理器、以及整体功能，受限的Skeleton不太适合大型的项目。</p>
<p><strong>3. ZURB Foundation</strong><br><a href="https://get.foundation" target="_blank" rel="noopener">https://get.foundation</a><br><img src="https://img-blog.csdnimg.cn/20200325161430903.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDk4NDY2NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>如果您正在寻找一种响应迅速的前端框架，那么ZURB Foundation就比较适合。该框架将允许您为所有的设备创建各种生产环境的代码和原型。通过支持具有“准系统结构(barebone structure)”的流行框架，ZURB Foundation让用户能够使用简单的方法及其入门模板，来快速生成产品原型。由于提交量不少于14,000次，而且贡献者超过了940名，因此ZURB在GitHub上也有着大量的支持。目前，《华盛顿邮报》和《国家地理》等知名网站都使用的是该框架。</p>
<p><strong>4. UI Kit</strong><br><a href="https://getuikit.com" target="_blank" rel="noopener">https://getuikit.com</a><br><img src="https://img-blog.csdnimg.cn/2020032516153149.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDk4NDY2NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>UI Kit以具有高度可定制的轻量级元素而闻名。它的各种模板能够让您轻地松构建各类Web界面。UI Kit的安装包里包含了CSS、HTML和JavaScript文件、以及Sublime Text和Atom编辑器的软件包。另外，它还提供了30多种模块化的组件，用户可以对其进行混合与匹配，以实现多种功能。也就是说，您不必反复搜索那些标记和类名。</p>
<p>与Bootstrap和Foundation等其他框架不同，UI Kit并非使用12列网格设置，而是将其布局分为了弹性、网格和宽度三个部分。当然，由于缺乏资源，该框架更适合于那些具有丰富经验的开发人员。</p>
<p><strong>5. Bulma</strong><br><a href="https://bulma.io" target="_blank" rel="noopener">https://bulma.io</a><br><img src="https://img-blog.csdnimg.cn/20200325161732348.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDk4NDY2NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>作为最常用的框架之一，Bulma得到了超过15万名开发人员的支持。它是基于Flexbox的免费开源框架之一。由于Bulma框架仅完全能够满足开发响应式网站的最低要求，因此它对于初学者来说十分容易上手。另外，得益于在GitHub上有着庞大的用户社区，Bulma具有良好的技术支持。</p>
<p><strong>6. Materialize</strong><br><a href="https://materializecss.com" target="_blank" rel="noopener">https://materializecss.com</a><br><img src="https://img-blog.csdnimg.cn/20200325162122666.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDk4NDY2NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>该前端CSS框架是根据Google的设计规范创建的。Materialize带有易于使用的IZ列网格，以便很好地用于布局设计。它的程序包中包括有按钮、卡片、表格、图标、以及许多其他可供按需使用的组件。此外，您还可能用到的功能包括：拖出式移动菜单、涟漪效果动画、以及SASS mixins等。而且，Materialize可以在任何类型的设备上被使用。</p>
<p><strong>7. Semantic UI</strong><br><a href="https://semantic-ui.com" target="_blank" rel="noopener">https://semantic-ui.com</a><br><img src="https://img-blog.csdnimg.cn/20200325162302266.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDk4NDY2NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>由于是一款较新的框架，因此Semantic UI在代码中使用到了自然语言，而且备受初学者的钟爱。它的继承系统(inheritance system)带有一个高级的主题变量，为您提供了设计时的完全自由度。</p>
<p>由于自带有大量的第三方软件库，因此在使用Semantic UI时，您不必调用其他的库，便可以让Web开发的过程更加便捷。这也是许多初学者和经验丰富的开发人员喜欢它的原因所在。</p>
<p><strong>8. Tailwind CSS</strong><br><a href="https://www.tailwindcss.cn/" target="_blank" rel="noopener">https://www.tailwindcss.cn/</a><br><img src="https://img-blog.csdnimg.cn/2020032516242068.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDk4NDY2NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>Tailwind CSS与其他框架的不同之处在于，它的软件包并没有预建UI组件。该框架更关注于实用性。它包含有各种专注于颜色、大小和位置的CSS类。Tailwind适合于那些不满足于预设组件，但希望能够完全自由地定制Web设计的开发人员。</p>
<p><strong>9. Picnic CSS</strong><br><a href="https://picnicss.com" target="_blank" rel="noopener">https://picnicss.com</a><br><img src="https://img-blog.csdnimg.cn/20200325162610709.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDk4NDY2NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>该框架非常轻巧，其压缩后的代码不到10KB。同时，Picnic CSS还带有基于Flexbox的网格布局和许多UI元素。您可以使用它们来启动自己的Web开发项目。另外，Picnic的模式窗口和导航栏，也对初学者非常友好。</p>
<p><strong>10. Ionic</strong><br><a href="https://ionicframework.com" target="_blank" rel="noopener">https://ionicframework.com</a><br><img src="https://img-blog.csdnimg.cn/20200325162636562.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDk4NDY2NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>该开源的移动UI框架，可以让用户在不更改代码库的情况下，开发出适用于Android和iOS原生的，以及具有网络高性能的应用。Ionic带有直观的UI组件，可协助用户加快网站或应用程序的开发过程。由于提供了卓越的原生功能和速度，Ionic可以与社区、主流分析平台、身份验证服务、插件以及其他集成平台，很好地配合使用。</p>
<p><strong>11. Pure.css</strong><br><a href="https://purecss.io" target="_blank" rel="noopener">https://purecss.io</a><br><img src="https://img-blog.csdnimg.cn/20200325162800666.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDk4NDY2NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>美国雅虎公司出品的一组轻量级、响应式纯css模块,适用于任何Web项目.该框架专注于移动优先的理念。由于Pure.css是模块化的，因此您可以轻松地按需导入元素包。同时，您还可以获取它的各种可供下载与安装的布局。以轻便闻名的Pure.css框架，在压缩后只有3.8KB。</p>
<p><strong>12. mini.css</strong><br><a href="https://minicss.org" target="_blank" rel="noopener">https://minicss.org</a><br><img src="https://img-blog.csdnimg.cn/20200325162926167.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDk4NDY2NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>mini.css同样提供全面的功能和轻巧的框架。虽然它在压缩后只有10KB，但仍然可以提供丰富的布局和UI元素。如果您想对它的工作原理做进一步了解，那么请查阅它的联机文档。</p>
<p><strong>13. Base</strong><br><a href="https://getbase.org" target="_blank" rel="noopener">https://getbase.org</a><br><img src="https://img-blog.csdnimg.cn/20200325163327518.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDk4NDY2NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>如果您的主要任务是为所有的应用程序和Web开发项目打下坚实的基础，那么您应该尝试一下此模块化的框架。作为号称“坚如磐石”的响应框架，Base基于Normalize.css提供了基本的可自定义样式。您可以按需用它来实现简单的应用。</p>
<p><strong>14. Concise CSS</strong><br><a href="https://concisecss.com" target="_blank" rel="noopener">https://concisecss.com</a><br><img src="https://img-blog.csdnimg.cn/20200325163300922.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDk4NDY2NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>Concise CSS也是一款简单且实用的框架。该框架结构紧凑、明快、且无需额外添加。当然，如果您需要UI元素的话，也可以通过单独的工具包来轻松地进行追加。</p>
<p><strong>15. Mobi.css</strong><br><a href="http://getmobicss.com/" target="_blank" rel="noopener">http://getmobicss.com/</a><br><img src="https://img-blog.csdnimg.cn/20200325163049668.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDk4NDY2NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>压缩后的Mobi.css仅为2.6KB，它是目前您可以找到的最小的框架之一。Mobi的优势在于速度，尤其是在针对移动设备的应用场景中。由于Mobi.css内置了主题和插件系统，而且可以按需扩展，因此用户可以采用模块化的方法，在其基础上进行构建。<br><br></p>
<h3 id="4种Bootstrap在线设计工具"><a href="#4种Bootstrap在线设计工具" class="headerlink" title="4种Bootstrap在线设计工具"></a>4种Bootstrap在线设计工具</h3><p><a href="http://www.layoutit.com/build" target="_blank" rel="noopener">1. Layoutit</a></p>
<p><img src="https://img-blog.csdnimg.cn/20200325160031836.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDk4NDY2NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>LayoutIt通过使用我们的拖放界面生成器帮助您简单快速地创建Bootstrap前端代码。它陈列出Bootstrap的每个元素和组件，你只需要用鼠标拖曳到页面上即完成设计，让您的前端编码更容易，不需要你是javascript，HTML5或CSS3的专家。所有的设计可以是响应式的CSS和流体。设计完成后，您只需下载HTML即获得自己设计的源码。</p>
<p>LayoutIt有四个主要菜单，Grid网格系统，这是布局Layout方面，是你首先必须选择的，是单栏 或左右分栏等；在Components组件中选择导航条；文字工作是选择”BASE CSS”，当你熟悉该工具以后，编写一个现代Html页面如同在Word里编辑文档一样方便容易。</p>
<p><a href="http://pikock.github.io/bootstrap-magic/" target="_blank" rel="noopener">2.Bootstrap Magic</a></p>
<p><img src="https://img-blog.csdnimg.cn/20200325161112921.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDk4NDY2NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>Bootstrap Magic主题生成器充分兼容Bootstrap3和AngularJS。您可以轻松快速地创建您自己的Twitter Bootstrap主题。这是可视化的，页面上陈列出所有Bootstrap的组件样式，你能够立即改变，也立即看到你改变的内容效果。您还可以从谷歌Webfont添加更棒的webfonts。他们都包含神奇的typehead字体。当你设计好自己的主题后，能够发布分享你的主题。</p>
<p><a href="http://fancyboot.designspebam.com/" target="_blank" rel="noopener">3. Fancyboot</a></p>
<p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly93d3cuamRvbi5jb20vc2ltZ3MvaWRlYS9mYW5jeWJvb3QucG5n?x-oss-process=image/format,png" alt="img"><br>Fancyboot也是一个Bootstrap 简单但功能强大的定制工具，能够设计自己的主题，可以选择自己需要设计的组件，然后进行定制，设计完成后下载，没有所有不必要的复杂性。</p>
<p><a href="http://bootsnipp.com/" target="_blank" rel="noopener">4.Bootsnipp</a></p>
<p><img src="https://img-blog.csdnimg.cn/20200325160844901.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDk4NDY2NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>Bootsnipp是一个针对网页设计师的网页元素设计画廊，使用Bootstrap的人会发现这是他们设计网站是必不可少的。该设计工具虽然也是一种主题设计器，但是对每个BootStrap元素组件设计定制能力更强，能够单独对某个组件进行可视化选择设计，比如幻灯片设计可以选择上下方向变动还是左右方向。</p>
<h3 id="Bootstrap相关的项目"><a href="#Bootstrap相关的项目" class="headerlink" title="Bootstrap相关的项目"></a>Bootstrap相关的项目</h3><p>bootsWatch<br><a href="https://bootswatch.com" target="_blank" rel="noopener">https://bootswatch.com</a><br><img src="https://img-blog.csdnimg.cn/20200325161944993.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDk4NDY2NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>提供非常多的bootstrao的免费主题</p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>以hello world为例，详细分析程序的运行过程</title>
    <url>/2020/02/27/%E4%BB%A5hello-world%E4%B8%BA%E4%BE%8B%EF%BC%8C%E8%AF%A6%E7%BB%86%E5%88%86%E6%9E%90%E7%A8%8B%E5%BA%8F%E7%9A%84%E8%BF%90%E8%A1%8C%E8%BF%87%E7%A8%8B/</url>
    <content><![CDATA[<h2 id="以hello-world为例，详细分析程序的运行过程"><a href="#以hello-world为例，详细分析程序的运行过程" class="headerlink" title="以hello world为例，详细分析程序的运行过程"></a>以hello world为例，详细分析程序的运行过程</h2><h4 id="（一）环境说明："><a href="#（一）环境说明：" class="headerlink" title="（一）环境说明："></a><strong>（一）环境说明：</strong></h4><p>IDE ：Visual Studio 2017</p>
<p>语言：C++</p>
<p>示例代码：</p>
<p>#include&lt;iostream&gt;</p>
<p>using namespace std;</p>
<p>void main() {</p>
<p>cout &lt;&lt; &quot;Hello World&quot;;</p>
<p>}</p>
<p>在点击运行后输出”Hello World”</p>
<p>可以看一下啊该项目的文件树</p>
<img src="http://q6b782rdi.bkt.clouddn.com/images4.png" style="zoom: 33%;">

<p><strong>基本介绍</strong></p>
<p>test1.sln</p>
<p>是整个解决方案(Solution)的配制文件，组织多个工程和相关的元素到一个解决方案中。用鼠标双击它就能用VS打开整个工程项目。</p>
<p>test1.vcxproj： <br>记录工程(Project)相关的属性配制。</p>
<p>test1.vcxproj.filters： <br>文件过虑器， “工程结构”中各个文件的组织和编排都是定义在这个文件中的。</p>
<p>test1.vcxproj.user： <br>用户相关的一些配制。</p>
<p>源.cpp</p>
<p>存放源代码</p>
<p>test1.ilk文件是连接时生成的文件</p>
<p>test1.pdb 可以保存调试信息</p>
<p>test1/Debug 里主要存放一些日志信息</p>
<p>在整个项目中的test1.exe（二进制可执行文件）就是可以被计算机执行的程序</p>
<p>该”Hello World”程序执行过程可以分析以下两个阶段</p>
<ol>
<li><p>程序编译的过程</p>
</li>
<li><p>exe文件的执行过程</p>
</li>
</ol>
<h4 id="（二）程序编译过程"><a href="#（二）程序编译过程" class="headerlink" title="（二）程序编译过程"></a><strong>（二）程序编译过程</strong></h4><p>为了能让机器读懂我们语言，所以需要进行一系列的转换，将高级语言转换为机器能读懂的低级语言指令，然后这些指令按照一种称为可执行目标程序的格式打包好，以二进制磁盘文件形式存放起来，目标程序也称为可执行程序</p>
<p><strong>C++程序目标文件和可执行文件结构</strong></p>
<p>目标文件和可执行文件可以有几种不同的格式，有ELF（Excutable and linking Format,可执行文件和链接）格式，也有COFF（Common Object-File Format,普通目标文件格式）。虽然格式不一样，但具有一个共同的概念，那就是段(segments)，这里段指二进制格式文件中的一块区域。</p>
<p>linux下的可执行文件有三个段文本段(text)、数据段(data)、bss段，可用nm命令查看目标文件的符号清单。</p>
<p>编译过程： 源文件--------&gt;到可执行文件</p>
<img src="http://q6b782rdi.bkt.clouddn.com/images5.png" style="zoom:50%;">

<p>图引自《C专家编程》</p>
<p>从源文件到目标文件的转换是由编译器驱动程序完成的。</p>
<p>分为以下几个阶段：</p>
<p><img src="http://q6b782rdi.bkt.clouddn.com/images6.png" style="zoom: 67%;"><br><br><strong>1.编译预处理</strong>  </p>
<p>读取C++源程序，对其中的伪指令（以#开头的指令）和特殊符号进行处理。 <br>伪指令主要包括以下四个方面<br>（1）宏定义指令，如# define Name TokenString,#undef等。对于前一个伪指令，预编译所要作得的是将程序中的所有Name用TokenString替换，但作为字符串常量的Name则不被替换。对于后者，则将取消对某个宏的定义，使以后该串的出现不再被替换。 <br><br>（2）条件编译指令，如#ifdef,#ifndef,#else,#elif,#endif,等等。这些伪指令的引入使得程序员可以通过定义不同的宏来决定编译程序对哪些代码进行处理。预编译程序将根据有关的文件，将那些不必要的代码过滤掉。 <br><br>（3）头文件包含指令，如#include &quot;FileName&quot;或者#include &lt;FileName&gt;等。在头文件中一般用伪指令#define定义了大量的宏（最常见的是字符常量），同时包含有各种外部符号的声明。采用头文件的目的主要是为了使某些定义可以供多个不同的C源程序使用。因为在需要用到这些定义的C++源程序中，只需加上一条#include语句即可，而不必再在此文件中将这些定义重复一遍。预编译程序将把头文件中的定义统统都加入到它所产生的输出文件中，以供编译程序对之进行处理。 <br><br>包含到c源程序中的头文件可以是系统提供的，这些头文件一般被放在/usr/include目录下。在程序中#include它们要使用尖括号（&lt;&gt;）。另外开发人员也可以定义自己的头文件，这些文件一般与C++源程序放在同一目录下，此时在#include中要用双引号（&quot;&quot;）。<br><br>（4）特殊符号，预编译程序可以识别一些特殊的符号。例如在源程序中出现的LINE标识将被解释为当前行号（十进制数），FILE则被解释为当前被编译的C源程序的名称。预编译程序对于在源程序中出现的这些串将用合适的值进行替换。<br><br>预编译程序所完成的基本上是对源程序的”替代”工作。经过此种替代，生成一个没有宏定义、没有条件编译指令、没有特殊符号的输出文件。这个文件的含义同没有经过预处理的源文件是相同的，但内容有所不同。下一步，此输出文件将作为编译程序的输出而被翻译成为机器指令。<br><br><strong>2.编译阶段</strong><br>经过预编译得到的输出文件中，将只有常量。如数字、字符串、变量的定义，以及C++语言的关键字，如main,if,else,for,while,{,},+,-,*,\，等等。预编译程序所要作得工作就是通过词法分析和语法分析，在确认所有的指令都符合语法规则之后，将其翻译成等价的中间代码表示或汇编代码。 <br><br><strong>3.优化阶段</strong><br>优化处理是编译系统中一项比较艰深的技术。它涉及到的问题不仅同编译技术本身有关，而且同机器的硬件环境也有很大的关系。优化一部分是对中间代码的优化。这种优化不依赖于具体的计算机。另一种优化则主要针对目标代码的生成而进行的。</p>
<p>对于前一种优化，主要的工作是删除公共表达式、循环优化（代码外提、强度削弱、变换循环控制条件、已知量的合并等）、复写传播，以及无用赋值的删除，等等。<br><br>后一种类型的优化同机器的硬件结构密切相关，最主要的是考虑是如何充分利用机器的各个硬件寄存器存放的有关变量的值，以减少对于内存的访问次数。另外，如何根据机器硬件执行指令的特点（如流水线、RISC、CISC、VLIW等）而对指令进行一些调整使目标代码比较短，执行的效率比较高，也是一个重要的研究课题。 <br>经过优化得到的汇编代码必须经过汇编程序的汇编转换成相应的机器指令，方可能被机器执行。 <br><br><strong>4.汇编过程</strong><br>汇编过程实际上指把汇编语言代码翻译成目标机器指令的过程。对于被翻译系统处理的每一个C++语言源程序，都将最终经过这一处理而得到相应的目标文件。目标文件中所存放的也就是与源程序等效的目标的机器语言代码。<br><br>目标文件由段组成。通常一个目标文件中至少有两个段：<br>代码段  该段中所包含的主要是程序的指令。该段一般是可读和可执行的，但一般却不可写。  <br>数据段  主要存放程序中要用到的各种全局变量或静态的数据。一般数据段都是可读，可写，可执行的。<br><br>UNIX环境下主要有三种类型的目标文件： <br>（1）可重定位文件  其中包含有适合于其它目标文件链接来创建一个可执行的或者共享的目标文件的代码和数据。<br><br> （2）共享的目标文件  这种文件存放了适合于在两种上下文里链接的代码和数据。第一种事链接程序可把它与其它可重定位文件及共享的目标文件一起处理来创建另一个目标文件；第二种是动态链接程序将它与另一个可执行文件及其它的共享目标文件结合到一起，创建一个进程映象。<br><br> （3）可执行文件  它包含了一个可以被操作系统创建一个进程来执行之的文件。<br>汇编程序生成的实际上是第一种类型的目标文件。对于后两种还需要其他的一些处理方能得到，这个就是链接程序的工作了。<br><br><strong>5.链接程序</strong><br>由汇编程序生成的目标文件并不能立即就被执行，其中可能还有许多没有解决的问题。例如，某个源文件中的函数可能引用了另一个源文件中定义的某个符号（如变量或者函数调用等）；在程序中可能调用了某个库文件中的函数，等等。所有的这些问题，都需要经链接程序的处理方能得以解决。</p>
<p>举个简单的例子，如果程序A中引用了文件B中定义的函数，为了A中的函数能正常执行，就需要把B中的函数部分也放在A的源代码中，那么将A和B合并成一个文件的过程就是链接了。有专门的过程用来链接程序，称为链接器。他将一些输入的目标文件加工后合成一个输出文件。这些目标文件中往往有相互的数据、函数引用。</p>
<p>链接程序的主要工作就是将有关的目标文件彼此相连接，也即将在一个文件中引用的符号同该符号在另外一个文件中的定义连接起来，使得所有的这些目标文件成为一个能够被操作系统装入执行的统一整体。<br><br>根据开发人员指定的同库函数的链接方式的不同，链接处理可分为两种： <br><br>（1）静态链接  在这种链接方式下，函数的代码将从其所在地静态链接库中被拷贝到最终的可执行程序中。这样该程序在被执行时这些代码将被装入到该进程的虚拟地址空间中。静态链接库实际上是一个目标文件的集合，其中的每个文件含有库中的一个或者一组相关函数的代码。<br><br> （2）动态链接  在此种方式下，函数的代码被放到称作是动态链接库或共享对象的某个目标文件中。链接程序此时所作的只是在最终的可执行程序中记录下共享对象的名字以及其它少量的登记信息。在此可执行文件被执行时，动态链接库的全部内容将被映射到运行时相应进程的虚地址空间。动态链接程序将根据可执行程序中记录的信息找到相应的函数代码。 <br><br> 对于可执行文件中的函数调用，可分别采用动态链接或静态链接的方法。使用动态链接能够使最终的可执行文件比较短小，并且当共享对象被多个进程使用时能节约一些内存，因为在内存中只需要保存一份此共享对象的代码。但并不是使用动态链接就一定比使用静态链接要优越。在某些情况下动态链接可能带来一些性能上损害。<br><br>经过上述五个过程，C源程序就最终被转换成可执行文件了</p>
<h4 id="（三）exe文件的执行过程"><a href="#（三）exe文件的执行过程" class="headerlink" title="（三）exe文件的执行过程"></a><strong>（三）exe文件的执行过程</strong></h4><p>EXE File英文全名executable file ，译作可执行文件，可移植可执行 (PE) 文件格式的文件，它可以加载到内存中，并由操作系统加载程序执行，是可在操作系统存储空间中浮动定位的可执行程序。</p>
<p>EXE文件分为两个部分: EXE文件头和程序本体。exe文件比较复杂，属于一种多段的结构，是DOS最成功和复杂的设计之一。每个exe文件包含一个文件头和一个可重定位程序的映像。文件头包含MS-DOS用于加载程序的信息，例如程序的大小和寄存器的初始值。文件头还指向一个重定位表，该表包含指向程序映像中可重定位段地址的指针链表。MS-DOS通过把该映像直接从文件复制到内存加载exe程序，然后调整定位表中说明的可重定位段地址。定位表是一个重定位指针数组，每个指向程序映像中的可重定位段地址</p>
<img src="http://q6b782rdi.bkt.clouddn.com/images7.png" style="zoom:67%;">

<p><strong>可执行文件中的段在内存中的布局</strong></p>
<img src="http://q6b782rdi.bkt.clouddn.com/images8.png" style="zoom: 33%;">

<p><strong>exe文件的执行过程</strong><br>1、Shell（Explorer.exe ）调用CreateProcess函数激活exe程序<br>2、系统创建一个进程内核对象，引用计数置为1<br>3、系统为进程创建一个4GB的进程虚拟地址空间<br>4、PE装载器把exe的代码映射到地址空间，并查找ImportTable引入相关<br>的动态链接库（DLLs ）<br>5、系统为进程创建一个主线程，线程得到CPU后，把CS:IP指向.text节中<br>的程序进入点（OEP） ，此处是一条JMP指令，它跳到XXXCRTStartup<br>函数处执行<br>6、完成c/c++运行期库的一些初始化设置，包括c++ 构造函数的调用<br>全局变量，静态变量的初始化<br>7、调用WinMain/main函数，进入主函数<br>8、注册窗口类，创建窗口，显示窗口，更新窗口，进入消息循环<br>9、窗口关闭，循环退出，返回到C/C++ 运行期库<br>10、完成一些清理工作<br>11 、最后是ExitProcess退出进程</p>
<p>具体到cout来说（类似于C中的print函数）</p>
<p>是个普通的函数调用，与正常的函数调用没有太大区别。他通过系统调用去请求内核完成在屏幕上打印字符串的动作。</p>
<p>这就是整个”Hello World”程序的执行过程，先由编译器将源文件编译为exe文件（window操作系统中 在Linux中是bin文件）再接着由操作系统执行该二进制文件，实现对应的功能</p>
]]></content>
      <categories>
        <category>计算机基础</category>
      </categories>
      <tags>
        <tag>计算机基础</tag>
      </tags>
  </entry>
  <entry>
    <title>ES6系列-2</title>
    <url>/2020/02/26/ES6%E7%B3%BB%E5%88%97-2/</url>
    <content><![CDATA[<h2 id="ES6系列（2）"><a href="#ES6系列（2）" class="headerlink" title="ES6系列（2）"></a>ES6系列（2）</h2><p>今天是set的基础用法哦<del>~</del></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>set<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">'text/css'</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// =====================================================================</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// set和数组类似</span></span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> <span class="keyword">set</span> = <span class="keyword">new</span> Set([<span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]);</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="keyword">set</span>);</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// -------------------------------------------------------------</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 扩展运算符...</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 可以使set类型扩展为arry类型</span></span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> arry = [...set];</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// -------------------------------------------------------------</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// set 和 arry 的遍历</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// console.log(arry);</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// for(let i of set)&#123;</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">//     console.log(i);</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// &#125;</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// for(let i of arry)&#123;</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">//     console.log(i);</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// &#125;</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// -------------------------------------------------------------</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// set.has() 是否含有某一个值</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// console.log(set.has(1));// true</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">//添加元素</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// set.add(0);</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// console.log(set);// 1 2 3 4 0</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">//删除元素</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// set.delete(3);</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// console.log(set);//1 2 4 0</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">//set.size 长度</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// console.log(set.size);//4</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">//set.clear()清除</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// set.clear();</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// console.log(set);//&#123;&#125;</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// -------------------------------------------------------------</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">//返回键名</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// for(let item of set.keys())&#123;</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">//     console.log(item);//1 2 3 4</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// &#125;</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">//返回值</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// for(let item of set.values())&#123;</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">//     console.log(item);//1 2 3 4</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// &#125;</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// for(let [key, item] of set.entries())&#123;</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">//     console.log(key, item);//1 1 2 2 3 3 4 4</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// &#125;</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// set.forEach((item,key)=&gt;console.log(item*2,key*2));//2 2 4 4 6 6 8 8</span></span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>ES6</category>
      </categories>
      <tags>
        <tag>ES6</tag>
      </tags>
  </entry>
  <entry>
    <title>ES6系列(1)</title>
    <url>/2020/02/23/ES6%E7%B3%BB%E5%88%97-1/</url>
    <content><![CDATA[<h2 id="ES6系列（1）"><a href="#ES6系列（1）" class="headerlink" title="ES6系列（1）"></a>ES6系列（1）</h2><p>以下是小J在学习ES6过程中记的一些笔记。大家可以学习一下哦。</p>
<p>本次主要是四个part</p>
<ul>
<li>let的使用</li>
<li>解构赋值</li>
<li>模板字符串的使用</li>
<li>箭头函数的使用</li>
</ul>
<h4 id="let的使用和解构赋值"><a href="#let的使用和解构赋值" class="headerlink" title="let的使用和解构赋值"></a>let的使用和解构赋值</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>ES6 Let 的使用<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">'text/css'</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span> </span><br><span class="line"><span class="actionscript">        <span class="comment">// =====================================================================</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// let的用法类似于var，但是限制比较多</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// let a=10;</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// console.log(a);</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// -------------------------------------------------------------</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// cannot ouput </span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// let 存在块级作用域</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 不能这样用</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 类似于一个局部变量</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// if(a&gt;5)&#123;</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">//     let b=20;</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// &#125;</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// console.log("b"+b);</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// -------------------------------------------------------------</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 同样不可以</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// function foo()&#123;</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">//     let c=20;</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// &#125;</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// foo();</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// console.log("c"+c);</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// -------------------------------------------------------------</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// console.log(a); // undefined</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// var a = 10;</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// console.log(b); // Uncaught ReferenceError: Cannot access 'b' before initialization</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// let b = 10;</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// -------------------------------------------------------------</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 不允许重复定义</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// let a = 10;</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// let a = 20; //Uncaught SyntaxError: Identifier 'a' has already been declared</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// =====================================================================</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 解构赋值,数组形式</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// let [a,b,c] = [1,2,3];</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// console.log(a);// 1</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// console.log(b);// 2</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// console.log(c);// 3</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// -------------------------------------------------------------</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// let [a=3, b] = [2];</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// console.log("a="+a,"b="+b);//a=2 b=undefined</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// -------------------------------------------------------------</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// let c;</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// console.log(c);//undefined</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// let [a=2]=[c];</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// console.log(a);// 2</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// [a] = [c];</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// console.log(a);//undefined</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// -------------------------------------------------------------</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 解构赋值 对象形式 类似于python中的字典</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// let &#123;a,b&#125;=&#123;a:"aaaa", b:"bbbbbbbbbbb"&#125;;</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// console.log("a="+a,"b="+b);//a=aaaa b=bbbbbbbbbbb</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// let &#123;a,b=1&#125;=&#123;a:5&#125;;</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// console.log("a="+a,"b="+b);//a=5 b=1</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// -------------------------------------------------------------</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// let &#123;a:b&#125;=&#123;a:"1111111111"&#125;;</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// console.log("b="+b);//b=1111111111</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// console.log("a="+a);//Uncaught ReferenceError: a is not defined</span></span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h4 id="模板字符串的使用"><a href="#模板字符串的使用" class="headerlink" title="模板字符串的使用"></a>模板字符串的使用</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>ES6 模版字符串<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">'text/css'</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// =====================================================================</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// ES5</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// var obj = &#123;"name":"小J","age":20&#125;;</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// var name = obj.name;</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// var age = obj.age;</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// console.log(name+"的年龄是"+age);//小J的年龄是20</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// -------------------------------------------------------------</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// ES6 可以不用字符串的拼接</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 反引号，</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// let &#123;name, age&#125; = &#123;"name":"小J","age":20&#125;;</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// console.log(`$&#123;name&#125;的年龄是$&#123;age&#125;`);//小J的年龄是20</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// console.log(`$&#123;name&#125;`);</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// -------------------------------------------------------------</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 注意下面也是可以滴！！！</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// var obj = &#123;"name":"小J","age":20&#125;;</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// var name = obj.name;</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// var age = obj.age;</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// console.log(`$&#123;name&#125;的年龄是$&#123;age&#125;`);//小J的年龄是20</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// =====================================================================</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 可以用于多行字符串的拼接</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// var arr= [0,1,2,3,4];</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// var output1 = "";</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// for(var i in arr)</span></span></span><br><span class="line"><span class="handlebars"><span class="xml">    //     output1 += "<span class="tag">&lt;<span class="name">li</span>&gt;</span>"+arr[i]+"<span class="tag">&lt;/<span class="name">li</span>&gt;</span>";</span></span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// var output2 = "";</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// for(var i in arr)</span></span></span><br><span class="line"><span class="handlebars"><span class="xml">    //     output2 += `<span class="tag">&lt;<span class="name">li</span>&gt;</span>$&#123;arr[i]&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span>`;</span></span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// // 可以完成在js里写html代码的工作!!!!!!!!!!!!!!!!!</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// var output3 = "";</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// for(var i in arr)</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">//     output3 += `&lt;li&gt;</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">//     &lt;a href=""&gt;$&#123;arr[i]&#125;&lt;/a&gt;</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">//     &lt;/li&gt;`;</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// document.write(output1);</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// // 0</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// // 1</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// // 2</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// // 3</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// // 4</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// document.write(output2);</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// // 0</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// // 1</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// // 2</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// // 3</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// // 4</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// document.write(output3);</span></span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="箭头函数的使用"><a href="#箭头函数的使用" class="headerlink" title="箭头函数的使用"></a>箭头函数的使用</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>箭头函数<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">'text/css'</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span> </span><br><span class="line"><span class="actionscript">    <span class="comment">// =====================================================================</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// ES5</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// var foo = function()&#123;</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">//     return 1;</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// &#125;</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// foo();  </span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// console.log(foo());// 1</span></span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// ES6</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// let foo = () =&gt; 1;</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// console.log(foo());//1</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// -------------------------------------------------------------</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 含参</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// let foo = (a) =&gt; a;</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// console.log(foo(10));//10</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// -------------------------------------------------------------</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 函数有多条语句</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// let foo = (a,b) =&gt;&#123;</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">//     let c = 10;</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">//     return a*b*c;</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// &#125;</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// console.log(foo(1,2));//20</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// -------------------------------------------------------------</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 注以下也是可以的！！！！</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// var foo = () =&gt; 1;</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// console.log(foo());</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// =====================================================================</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// this 的问题</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// var foo = () =&gt; &#123;</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">//     console.log(this);</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// &#125;</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// foo();//window</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// -------------------------------------------------------------</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// var obj1 = &#123;</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">//     "name1": "小J",</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">//     "speakTo":function()&#123;</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">//         console.log(this.name1);</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">//     &#125;</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// &#125;</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// var obj2 = &#123;</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">//     "name1": "小J",</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">//     "speakTo":() =&gt; &#123;</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">//             // 指向定义时所在的作用域，而不是执行时所在的作用域!!!!!!!!!!!!!!!</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">//         console.log(this);</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">//         console.log(this.name1);</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">//     &#125;,</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">//     "speakTo2":function()&#123;</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">//         console.log(this);</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">//         // 1000ms后执行该语句</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">//         setTimeout(()=&gt;&#123;</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">//             console.log(this.name1);</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">//         &#125;,1000);</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">//     &#125;</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// &#125;</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// obj1.speakTo();//小J</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// obj2.speakTo();//window  undefined</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// obj2.speakTo2();//obj 小J</span></span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>以上就是小J今天所学的关于ES6的知识啦</p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>HTML基础1</title>
    <url>/2020/02/21/HTML%E5%9F%BA%E7%A1%801/</url>
    <content><![CDATA[<h2 id="HTML基础1"><a href="#HTML基础1" class="headerlink" title="HTML基础1"></a>HTML基础1</h2><p>HTML是一种超文本标记语言（英语：HyperText Markup Language，简称：HTML）这语言能用来干嘛嘞，简单来说就是能用来写网页，但是要想真正做出一个比较精美的网页仅仅有HTML是不够滴，需要其他的语言CSS，JS等等，可能还需要用到一些框架比如前端最有名的三大框架Vue,React,Angular,等等而其中有可能用到类似于Webpack的打包工具。</p>
<p>以下是小J在学习前端的过程中的一些总结和经验分享。</p>
<p>写前端代码的编译器可以有好多选择，VScode ， IntelliJ IDEA……都可，看自己喜欢用哪一种啦。</p>
<p>以下代码均用的是 VScode所编写</p>
<p>要想学明白HTML首先最主要的是明白<strong>标签</strong>的概念，就小J理解来说标签就是类似与C++，python的一句句代码。</p>
<p>标签大体上可以分为单标签，例如</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span>&gt;</span> //链接</span><br><span class="line"><span class="tag">&lt;<span class="name">img</span>&gt;</span> //图片</span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>&gt;</span>  //输出一条横线</span><br><span class="line">……</span><br></pre></td></tr></table></figure>

<p>双标签</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span><span class="tag">&lt;/<span class="name">head</span>&gt;</span>//头</span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span><span class="tag">&lt;/<span class="name">body</span>&gt;</span>//身体</span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span>段落</span><br><span class="line">……</span><br></pre></td></tr></table></figure>

<p>之后是大体了解一下html的框架是啥样的，废话不多说直接上代码</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 整个网页都包裹在一个html标签里 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 在html标签里基本可以分为两大部分head（头），body（身体） --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- title是文档的标题，就是在浏览器网址上面的那个标题 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>文档的标题<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- style 里可以写一些CSS代码 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">'text/css'</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- body的内容就是展示在页面上的内容 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 到此结束 --&gt;</span></span><br></pre></td></tr></table></figure>

<p>ok</p>
<p>接下来的第三部就是要理解一些常用标签的作用和用法啦</p>
<p>这里小编推荐两个网站，已经列出了常用的标签和用法</p>
<ul>
<li><a href="https://www.runoob.com/html/html-intro.html" target="_blank" rel="noopener">菜鸟教程</a></li>
<li><a href="https://www.w3school.com.cn/h.asp" target="_blank" rel="noopener">W3school</a></li>
</ul>
<p>第四部就是要实际的敲代码了,做一些小的demo。</p>
<p>这一部分内容下次再讲啦，今天就先写到这里叭</p>
<p>（悄悄说：小编实在太懒了~~）</p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>波士顿矩阵和新波士顿矩阵</title>
    <url>/2020/01/31/%E6%B3%A2%E5%A3%AB%E9%A1%BF%E7%9F%A9%E9%98%B5%E5%92%8C%E6%96%B0%E6%B3%A2%E5%A3%AB%E9%A1%BF%E7%9F%A9%E9%98%B5/</url>
    <content><![CDATA[<h2 id="波士顿矩阵和新波士顿矩阵"><a href="#波士顿矩阵和新波士顿矩阵" class="headerlink" title="波士顿矩阵和新波士顿矩阵"></a>波士顿矩阵和新波士顿矩阵</h2><p>在制定公司层战略的时候，BCG矩阵（波士顿矩阵）是一种非常流行的方法，下面咱们就来聊聊波士顿矩阵和他的弟弟新波士顿矩阵叭</p>
<p>首先呢这两哥们，都是由波士顿咨询集团（Boston Consulting Group  ，BCG）提出来的。哥哥波士顿矩阵是在1970s初出生的，弟弟是在1983年出生的。</p>
<p>这两哥们长的挺像的，都长了个矩阵的形状……</p>
<p>如图</p>
<p>BCG Matirx</p>
<img src="/.site//bcg_m.jpg" style="zoom: 33%;">

<p>新波士顿矩阵</p>
<img src="/.site//nbcg_m.jpg" style="zoom:50%;">

<p>确实挺像的，除了上面的字基本都都一样，嘿嘿</p>
<p><strong>这时候就要问了要这俩哥们有啥用呢？</strong></p>
<p>首先哥哥波士顿矩阵又可以称为增长率相对份额矩阵</p>
<p>从他的名字可以看出通过分析增长率和相对份额咱能得到自己想要的信息</p>
<p>这时候要弄清一下几点</p>
<ol>
<li><strong>波士顿矩阵应该对谁用，什么时候用</strong></li>
<li><strong>波士顿矩阵用了有啥用嘞</strong></li>
</ol>
<p>波士顿矩阵是对一个公司内部的多种产业分析的的（新波士顿矩阵是对一个行业的多个企业分析的）</p>
<p>新波士顿矩阵可以对一个公司内部的多种产业进行划分以及这些产业应该怎么发展（新波士顿矩阵可以对一个行业的多个竞争企业进行划分以及这些企业该怎么发展）‘</p>
<p><strong>波士顿矩阵是如何做到这样的功能的呢？</strong></p>
<p>波士顿矩阵认为一般决定一个企业中的产品结构的基本因素有两个<strong>市场引力与企业实力</strong>。</p>
<p>市场引力包括整个市场的销售量（额）增长率、竞争对手强弱及利润高低等。</p>
<p>而其中销售增长率是决定企业产品结构是否合理的外在因素。</p>
<p>企业实力包括市场占有率，技术、设备、资金利用能力等</p>
<p>其中市场占有率是决定企业产品结构的内在要素，它直接显示出企业竞争实力。</p>
<p>这样就把这两个指标拿出来作为划分一个企业不同产品之间的依据啦</p>
<p>根据指标的高低划分为四种不同性质的产品类型，以及他们对应的发展前景</p>
<p>这样就实现了他的功能啦！</p>
<p>来让我们再回到那张图上</p>
<img src="/.site//bcg_m.jpg" style="zoom:67%;">



<p>首先呢一个企业中的某一种产品的市场占有率和该产品的销售增长率“大致上看”都是极大型指标，也就是这一数值越大对这种产品越有好处</p>
<p>由此，一看就是明星类产品比瘦狗类产品要强一点，听名字也能听出来，but</p>
<p>只要选好了对应产品的发展策略，一个王中王一个盖中盖，两个都是不赖的</p>
<p>这时候就会有问题了，这两个指标多少叫高，多少叫低嘞？</p>
<p>拿啥来比较合适呢？</p>
<p>对于纵坐标销售增长率可以有两种科学的比较方法</p>
<p>A. 可以把这个产品行业市场的平均销售增长率作为分界点</p>
<p>B. 把这个企业中的各种产品的销售增长率（加权）平均后作为分界点</p>
<p>但是呢，一般高增长至少为10%（扣除通货膨胀因素之后）</p>
<p>对于横坐标来说呢也有两种</p>
<p>一种比较简单的方法是，高市场份额意味着该项业务是所在行业的领导者的市场份额（一般在15%以上）</p>
<p>而另一种比较复杂的方法是多考虑点因素<a href="BCG的布鲁斯认为，这个界分值应当取为2，他认为“任何两个竞争者之间，2比1的市场份额似乎是一个均衡点。在这个均衡点上，无论哪个竞争者要增加或减少市场份额，都显得不切实际，而且得不偿失。这是一个通过观察得出的经验性结论。”在同年的另一篇文章中，布鲁斯说的更为明确：“明星的市场份额必须是仅次于它的竞争者的两倍，否则其表面业绩只是一种假象。”按照布鲁斯的观点，市场份额之比小于2，竞争地位就不稳定，企业就不能回收现金，否则地位难保。但在实际的业务市场上，市场领先者市场份额是跟随其后的竞争者的2倍的情况极为少见。所以和上面的市场增长率的标准线确定一样，由于评分等级过于宽泛，可能会造成两项或多项不同的业务位于一个象限中或位于矩阵的中间区域，难以确定使用何种战略。**所以在划分标准线的时候要尽量占有更多资料，审慎分析，这些数字范围在运用中根据实际情况的不同进行修改**。而且不能仅仅注意业务在BCG矩阵图中现有的位置，还要注意随着时间推移历史的移动轨迹。每项业务都应该回顾它去年、前年甚至更前的时候是处在哪里，用以参考标准线的确定。">^想听啰嗦的请点开，不想听的直接跳过吧</a></p>
<p>这样基本的问题就解决啦</p>
<p><strong>之后就是每一种产品对应的发展战略</strong></p>
<p>（1）销售增长率低、市场占有率高的产品群（现金牛类产品，成熟型产品）。</p>
<p>财务特点:销售量大，产品利润率高、负债比率低，可以为企业提供资金，而且由于增长率低，也无需增大投资。</p>
<p>作用：企业回收资金，支持其它产品，尤其明星产品投资的后盾。</p>
<p>发展策略：对于这一象限内的销售增长率仍有所增长的产品，应进一步进行市场细分，维持现存市场增长率或延缓其下降速度。对于现金牛产品，适合于用事业部制进行管理，其经营者最好是市场营销型人物。</p>
<p>要注意维持现金牛的领导地位，否则这个强壮的现金牛可能就会变弱，甚至成为瘦狗。</p>
<p>（2）销售增长率和市场占有率“双高”的产品群（明星类产品，标准化产品）</p>
<p>这类产品可能成为企业的现金牛产品，需要加大投资以支持其迅速发展。</p>
<p>发展策略：积极扩大经济规模和市场机会，以长远利益为目标，提高市场占有率，加强竞争地位。发展战略以及明星产品的管理与组织最好采用事业部形式，由对生产技术和销售两方面都很内行的经营者负责。</p>
<p>（3）销售增长率高、市场占有率低的产品群（问题类产品，创新型产品）</p>
<p>分析：销售增长率高说明市场机会大，前景好，市场占有率低说明在市场营销上存在问题。</p>
<p>财务特点：利润率较低，所需资金不足，负债比率高。</p>
<p>发展策略：对问题产品的改进与扶持方案一般均列入企业长期计划中。对问题产品的管理组织，最好是采取智囊团或项目组织等形式，选拔有规划能力，敢于冒风险、有才干的人负责。促使其向明星类产品转化</p>
<p>（4）销售增长率和市场占有率“双低”的产品群（瘦狗类产品，个性化产品）</p>
<p>财务特点：利润率低、处于保本或亏损状态，负债比率高，无法为企业带来收益。</p>
<p>发展策略：撤退战略：首先应减少批量，逐渐撤退，对那些销售增长率和市场占有率均极低的产品应立即淘汰。其次是将剩余资源向其它产品转移。第三是整顿产品系列，最好将瘦狗产品与其它事业部合并，统一管理。</p>
<p>　　</p>
<p>现在哥哥说完了，让我们再延申一下简单说一下弟弟叭，分析方法是类似的</p>
<p>新波士顿矩阵中，横轴表示经营单位所具备的竞争地位差别的大小，纵轴表示的是在行业中取得独特竞争优势的途径的多少。在这个矩阵中，也有四个象限，从而也就有四种不同的经营单位类型及战略。新波士顿矩阵主要是解决处于不同象限的企业应当采取什么样的竞争工具（成本领先、差异化与集中化）的问题。</p>
<table>
<thead>
<tr>
<th align="left">分散化</th>
<th>具有较多的实现竞争优势的途径，但企业本身现有的竞争地位差别较小。</th>
<th>最适宜采用集中化战略</th>
</tr>
</thead>
<tbody><tr>
<td align="left">专业化</td>
<td>具有较多的实现竞争优势的途径，并且企业自身现有的竞争地位差别也较大。</td>
<td>最适宜采用差异化战略</td>
</tr>
<tr>
<td align="left">大量化</td>
<td>具有较多的竞争优势，但这种行业所具有的取得竞争优势的途径不是很多。</td>
<td>最适宜采用成本领先战略</td>
</tr>
<tr>
<td align="left">死胡同</td>
<td>既没有较多的竞争优势，也缺乏实现竞争优势的途径。</td>
<td>类似于波特战略中的夹在中间战</td>
</tr>
</tbody></table>
<p>回到他的图像上</p>
<img src="/.site//myblog\myblog_1\source\_posts\波士顿矩阵和新波士顿矩阵\nbcg_m.jpg" style="zoom:67%;">

<p>​       （一）“产量规模”</p>
<p>​        这种行业随着市场占有率的扩大，企业产品成本降低、企业盈利增加。如<strong>汽车，家电等装配加工业</strong>。</p>
<p>　　（二）“僵持”</p>
<p>　　指行业的进入壁垒较低或退出壁垒较高，行业类所有企业的盈利能力都较低，他们的竞争地位和盈利率相差不大，与市场的占有率无关。如<strong>一般农产品的初加工</strong>。</p>
<p>　　（三）“分层”</p>
<p>　　企业的盈利能力以与其是否能取得某种独特的优势直接有关，独特优势突出则盈利高，相反，则盈利低。但企业盈利能力与市场占有关系不大，如<strong>饮食业</strong>。</p>
<p>　　（四）“专业分工”</p>
<p>　　行业中企业市场占有率较小，但产品却具有特色，这种企业的盈利能力高，而市场占有率很大的企业，由于其产品成本低，企业盈利能力也很高。</p>
<p>这时候这张图是一定要提及的</p>
<img src="/.site//nbc_m2.jpg" style="zoom:50%;">



<p>最后很多书都对他们的局限性进行了评价和分析，我这里就不赘述了（主要是因为小编懒(￣～￣) 嚼！）</p>
<p>这里附一篇比较好文章<a href="https://www.ixueshu.com/document/4da86022a3a97942e21ea93f8070ad64318947a18e7f9386.html" target="_blank" rel="noopener">波士顿矩阵的局限性</a></p>
]]></content>
      <categories>
        <category>战略咨询模型</category>
      </categories>
      <tags>
        <tag>战略咨询</tag>
      </tags>
  </entry>
  <entry>
    <title>JS打印99乘法表</title>
    <url>/2019/12/13/JS%E6%89%93%E5%8D%B099%E4%B9%98%E6%B3%95%E8%A1%A8/</url>
    <content><![CDATA[<h2 id="JS打印99乘法表"><a href="#JS打印99乘法表" class="headerlink" title="JS打印99乘法表"></a>JS打印99乘法表</h2><p>环境：Visual Studio Code</p>
<p>​            Chrome</p>
<p>在学习了HTML和CSS之后终于步入了Javascript的学习辽，下面是完成的第一个JS的小练习题，打印99乘法表</p>
<p><strong>效果如下：</strong></p>
<p><img src="/.site//JS%E6%89%93%E5%8D%B099%E4%B9%98%E6%B3%95%E8%A1%A8%5C1.png" alt></p>
<p>下面就是基本的代码啦：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;99乘法表&lt;/title&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    //主要是document.write的使用</span><br><span class="line">    //注意要写在for循环之外</span><br><span class="line">    document.write(&quot;&lt;table&gt;&quot;);</span><br><span class="line">    for(var i=0;i&lt;9;i++)&#123;</span><br><span class="line">        //打印行</span><br><span class="line">        document.write(&quot;&lt;tr&gt;&quot;);</span><br><span class="line">        for(var j=0;j&lt;9&amp;&amp;j&lt;=i;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            var mul=(i+1)*(j+1);</span><br><span class="line">            var str=(i+1)+&apos;*&apos;+(j+1)+&apos;=&apos;+mul;</span><br><span class="line">            //打印列</span><br><span class="line">            document.write(&quot;&lt;td&gt;&quot;);</span><br><span class="line">            var str2=str;</span><br><span class="line">            document.write(str2+&quot;&lt;/td&gt;&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">        //结束打印行</span><br><span class="line">        document.write(&quot;&lt;/tr&gt;&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    document.write(&quot;&lt;/table&gt;&quot;);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;style type=&apos;text/css&apos;&gt;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;table class=&quot;a&quot;&gt;</span><br><span class="line">    &lt;/table&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>css练习-绘制安卓机器人</title>
    <url>/2019/11/20/css%E7%BB%83%E4%B9%A0-%E7%BB%98%E5%88%B6%E5%AE%89%E5%8D%93%E6%9C%BA%E5%99%A8%E4%BA%BA/</url>
    <content><![CDATA[<h2 id="css练习——绘制安卓机器人"><a href="#css练习——绘制安卓机器人" class="headerlink" title="css练习——绘制安卓机器人"></a>css练习——绘制安卓机器人</h2><p>一个学校里BBS的学长的布置的小练习 (￣ ‘i ￣;) </p>
<p>用css画一个安卓机器人</p>
<p>效果如下</p>
<img src="http://q6b782rdi.bkt.clouddn.com/images13.png" style="zoom: 25%;">

<p>虽然有点丑……</p>
<p>不管啦 (*￣rǒ￣) </p>
<p>接下来是相关的步骤</p>
<ol>
<li>画身体</li>
<li>画jiojio</li>
<li>画头</li>
<li>画手手</li>
<li>画眼睛</li>
<li>画天线（耳朵）</li>
</ol>
<h4 id="总体概述"><a href="#总体概述" class="headerlink" title="总体概述"></a>总体概述</h4><p>写这个用到的知识有css盒子模型，position定位，伪类选择器，图像的旋转</p>
<p>上代码！</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"android"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"a_ears"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"a_head"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"a_eyes"</span>&gt;</span> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"a_body"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"a_arms"</span>&gt;</span> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>这是在body中部署的架构</p>
<h4 id="画身体"><a href="#画身体" class="headerlink" title="画身体"></a>画身体</h4><ul>
<li>先把基本工作做好</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>安卓机器人<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">'text/css'</span>&gt;</span></span><br><span class="line">*&#123;</span><br><span class="line"><span class="css">    <span class="comment">/*将所有的margin和padding归零，养成好习惯*/</span></span></span><br><span class="line">    margin: 0;</span><br><span class="line">    padding: 0;</span><br><span class="line">&#125;</span><br><span class="line">html&#123;</span><br><span class="line">    height: 100%;</span><br><span class="line">&#125;</span><br><span class="line">body&#123;</span><br><span class="line">    height: 100%;</span><br><span class="line">    background-color: black;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>画身体</li>
</ul>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">    <span class="selector-class">.android</span>&#123;</span><br><span class="line">    <span class="comment">/* 相对定位 */</span></span><br><span class="line"><span class="comment">/*考虑到机器人内部的元素要相互重叠，所以使用了相对定位，让内部元素在使用绝对定位的时候以android层的左上角作为参考点*/</span></span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="comment">/*离body层的边缘*/</span></span><br><span class="line">    <span class="attribute">left</span>: <span class="number">320px</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">230px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.a_body</span>&#123;</span><br><span class="line">    <span class="attribute">position</span>:absolute;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">150px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">150px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: green;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">20px</span> <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h4 id="画脚脚"><a href="#画脚脚" class="headerlink" title="画脚脚"></a>画脚脚</h4><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.a_body</span><span class="selector-pseudo">:after</span>,<span class="selector-class">.a_body</span><span class="selector-pseudo">:before</span>&#123;</span><br><span class="line">    <span class="comment">/*伪类选择器:after,:before*/</span></span><br><span class="line">    <span class="attribute">background-color</span>: green</span><br><span class="line">    <span class="comment">/*绝对定位*/</span></span><br><span class="line">    position: absolute;</span><br><span class="line">    <span class="comment">/*设置圆角</span></span><br><span class="line"><span class="comment">    从左到右为从矩形的左上角开始，然后顺时针设置*/</span></span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">7px</span> <span class="number">7px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">67px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="comment">/*以a_body整体参考点*/</span></span><br><span class="line">    <span class="comment">/*这个读者可以多改变一下试一试就能理解辽要是超出a_body范围的话就是负值*/</span></span><br><span class="line">    <span class="attribute">bottom</span>: -<span class="number">67px</span>;</span><br><span class="line">    <span class="comment">/*必须加*/</span></span><br><span class="line">    <span class="attribute">content</span>:<span class="string">''</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*上一步的设置这两个脚脚已经重叠了，下面要让这两个错开*/</span></span><br><span class="line"><span class="selector-class">.a_body</span><span class="selector-pseudo">:before</span>&#123;</span><br><span class="line">    <span class="comment">/*同样以脚的上一级元素a_body整体参考点*/</span></span><br><span class="line">    <span class="attribute">left</span>:<span class="number">20px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.a_body</span><span class="selector-pseudo">:after</span>&#123;</span><br><span class="line">    <span class="attribute">right</span>:<span class="number">20px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="画头"><a href="#画头" class="headerlink" title="画头"></a>画头</h4><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.a_head</span>&#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="comment">/*头是个半圆，所以要将高度设置为宽度的一半*/</span></span><br><span class="line">    <span class="attribute">width</span>: <span class="number">150px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">75px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: green;</span><br><span class="line">    <span class="comment">/*头的左上角离他的上一级的高度*/</span></span><br><span class="line">    <span class="attribute">top</span>:-<span class="number">85px</span>;</span><br><span class="line">    <span class="comment">/*左上右上角为圆角值*/</span></span><br><span class="line">    <span class="attribute">border-radius</span>:<span class="number">75px</span> <span class="number">75px</span> <span class="number">0</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="画手手"><a href="#画手手" class="headerlink" title="画手手"></a>画手手</h4><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.a_arms</span><span class="selector-pseudo">:before</span>,<span class="selector-class">.a_arms</span><span class="selector-pseudo">:after</span>&#123;</span><br><span class="line">    <span class="attribute">background-color</span>:green;</span><br><span class="line">    <span class="comment">/*同样必须加*/</span></span><br><span class="line">    <span class="attribute">content</span>:<span class="string">''</span>;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">height</span>:<span class="number">80px</span>;</span><br><span class="line">    <span class="attribute">top</span>:<span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">position</span>:absolute;</span><br><span class="line">    <span class="attribute">border-radius</span>:<span class="number">7px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.a_arms</span><span class="selector-pseudo">:before</span>&#123;</span><br><span class="line">    <span class="attribute">left</span>: -<span class="number">30px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.a_arms</span><span class="selector-pseudo">:after</span>&#123;</span><br><span class="line">    <span class="attribute">right</span>: -<span class="number">30px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="画眼睛"><a href="#画眼睛" class="headerlink" title="画眼睛"></a>画眼睛</h4><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.a_eyes</span><span class="selector-pseudo">:before</span>, <span class="selector-class">.a_eyes</span><span class="selector-pseudo">:after</span>&#123;</span><br><span class="line">    <span class="attribute">background-color</span>: white;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">''</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">position</span>:absolute;</span><br><span class="line">    <span class="comment">/*因为要画的是一个圆所以参数设置为高度（宽度和高度一致）的一半就可*/</span></span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">top</span>:<span class="number">34px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.a_eyes</span><span class="selector-pseudo">:after</span>&#123;</span><br><span class="line">    <span class="attribute">right</span>: <span class="number">30px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.a_eyes</span><span class="selector-pseudo">:before</span>&#123;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">30px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="画天线（耳朵）"><a href="#画天线（耳朵）" class="headerlink" title="画天线（耳朵）"></a>画天线（耳朵）</h4><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.a_ears</span><span class="selector-pseudo">:before</span>,<span class="selector-class">.a_ears</span><span class="selector-pseudo">:after</span>&#123;</span><br><span class="line">    <span class="attribute">background-color</span>: green;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">''</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">45px</span>;</span><br><span class="line">    <span class="attribute">position</span>:absolute;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">top</span>:-<span class="number">105px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.a_ears</span><span class="selector-pseudo">:before</span>&#123;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">15px</span>;</span><br><span class="line">    <span class="comment">/*旋转，默认的中点是耳朵的左上角*/</span></span><br><span class="line"> 	<span class="comment">/*默认顺时针是正值，负值就是逆时针啦*/</span></span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotate</span>(-30deg);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.a_ears</span><span class="selector-pseudo">:after</span>&#123;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">125px</span>;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotate</span>(30deg);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>最后一个安卓小机器人就大功告成辽 ヽ(✿ﾟ▽ﾟ)ノ </p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>神器集合</title>
    <url>/2019/11/17/%E7%A5%9E%E5%99%A8%E9%9B%86%E5%90%88/</url>
    <content><![CDATA[<h2 id="神器"><a href="#神器" class="headerlink" title="神器"></a>神器</h2><p>闲的没事，就想总结几款神器 供大家参考o(<em>^＠^</em>)o</p>
<h4 id="LICEcap"><a href="#LICEcap" class="headerlink" title="LICEcap"></a>LICEcap</h4><p>一款非常简洁实用的gif神器</p>
<img src="https://raw.githubusercontent.com/Joshua-li-yi/blog_images/master/images/first_1/20191117000100.png" style="zoom: 50%;">



<h4 id="Snipaster"><a href="#Snipaster" class="headerlink" title="Snipaster"></a>Snipaster</h4><p>一款好用的截图软件</p>
<img src="https://raw.githubusercontent.com/Joshua-li-yi/blog_images/master/images/first_1/20191117000144.png" style="zoom:50%;">

<h4 id="pandoc"><a href="#pandoc" class="headerlink" title="pandoc"></a>pandoc</h4><p>极其 极其好用格式转化工具</p>
<p> d=====(￣▽￣*)b </p>
<h4 id="谷歌访问助手"><a href="#谷歌访问助手" class="headerlink" title="谷歌访问助手"></a>谷歌访问助手</h4><p>可以不用外网使用Google搜索等服务</p>
<img src="https://raw.githubusercontent.com/Joshua-li-yi/blog_images/master/images/first_1/20191117000226.png" style="zoom:50%;">

<h4 id="gvim"><a href="#gvim" class="headerlink" title="gvim"></a>gvim</h4><p>敲代码真神器！！！程序猿的金箍棒！！！</p>
<p>体验自行百度 ✧(≖ ◡ ≖✿) </p>
<img src="https://raw.githubusercontent.com/Joshua-li-yi/blog_images/master/images/first_1/20191117000303.png" style="zoom:50%;">

<h4 id="youdict网站"><a href="#youdict网站" class="headerlink" title="youdict网站"></a>youdict网站</h4><p>可以查到词根词缀非常方便记忆哦</p>
<p>[优词词典]（ <a href="https://www.youdict.com/" target="_blank" rel="noopener">https://www.youdict.com</a> ）</p>
<h4 id="每日英语听力APP"><a href="#每日英语听力APP" class="headerlink" title="每日英语听力APP"></a>每日英语听力APP</h4><p>一款好用的英语听力APP包含了IELTS听力真题以及一些其他的听力资源</p>
<img src="https://raw.githubusercontent.com/Joshua-li-yi/blog_images/master/images/first_1/Screenshot_2019_1117_210003.png" style="zoom: 33%;">

<h4 id="欧陆词典"><a href="#欧陆词典" class="headerlink" title="欧陆词典"></a>欧陆词典</h4><p>大家是否有过在手机上来回切换查词软件来查词的麻烦经历</p>
<p>这款手机APP可以悬浮在其他软件上方随时进行查词查句的操作真的特别的方便</p>
<p>学习效率提升两三倍 ～(￣▽￣～)(～￣▽￣)～ </p>
<img src="https://raw.githubusercontent.com/Joshua-li-yi/blog_images/master/images/first_1/Screenshot_2019_1117_210028.png" style="zoom:50%;">

<h4 id="西窗烛"><a href="#西窗烛" class="headerlink" title="西窗烛"></a>西窗烛</h4><p>喜欢诗词文学同学的福利鸭</p>
<img src="https://raw.githubusercontent.com/Joshua-li-yi/blog_images/master/images/first_1/Screenshot_2019_1117_210119.png" style="zoom:33%;">

<h4 id="猪八戒"><a href="#猪八戒" class="headerlink" title="猪八戒"></a>猪八戒</h4><p>一个学生可以偷偷挣零花钱的网站哦（做PPT，视频……）</p>
<p>不是刷单 Σ( ° △ °|||)︴ </p>
<img src="https://raw.githubusercontent.com/Joshua-li-yi/blog_images/master/images/first_1/Screenshot_2019_1117_210039.png" style="zoom:33%;">

<h4 id="实习僧"><a href="#实习僧" class="headerlink" title="实习僧"></a>实习僧</h4><p>一个太特别好用的找实习的平台</p>
<h4 id="站酷"><a href="#站酷" class="headerlink" title="站酷"></a>站酷</h4><p>培养审美的神器！！！</p>
<img src="https://raw.githubusercontent.com/Joshua-li-yi/blog_images/master/images/first_1/Screenshot_2019_1117_210128.png" style="zoom:33%;">

<h4 id="BOSS直聘"><a href="#BOSS直聘" class="headerlink" title="BOSS直聘"></a>BOSS直聘</h4><h4 id="拉钩招聘"><a href="#拉钩招聘" class="headerlink" title="拉钩招聘"></a>拉钩招聘</h4><p>这两个是找工作找实习的神器直接和招聘公司一对一聊天</p>
<p>大学生不可错过的软件哦</p>
<img src="https://raw.githubusercontent.com/Joshua-li-yi/blog_images/master/images/first_1/Screenshot_2019_1117_210057.png" style="zoom:33%;">

<img src="https://raw.githubusercontent.com/Joshua-li-yi/blog_images/master/images/first_1/Screenshot_2019_1117_210048.png" style="zoom:33%;">

<h4 id="EasyConnect"><a href="#EasyConnect" class="headerlink" title="EasyConnect"></a>EasyConnect</h4><p>一款可以用其他网络登陆学校VPN的特别好用的手机软件</p>
<p>大学生极力推荐 (<em>￣▽)u┌┐ ｄ(▽￣</em>) </p>
<img src="https://raw.githubusercontent.com/Joshua-li-yi/blog_images/master/images/first_1/Screenshot_2019_1117_210017.png" style="zoom:33%;">



<h4 id="E站"><a href="#E站" class="headerlink" title="E站"></a>E站</h4><p>一个刷动漫的网站</p>
<p>详情请自行查看</p>
<p>绝对o(￣▽￣)ｄ</p>
<p>嘻嘻嘻 </p>
]]></content>
      <categories>
        <category>神器</category>
      </categories>
      <tags>
        <tag>神器</tag>
      </tags>
  </entry>
  <entry>
    <title>K-近邻算法分析</title>
    <url>/2019/11/13/K-%E8%BF%91%E9%82%BB%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90/</url>
    <content><![CDATA[<h1 id="K—近邻算法分析"><a href="#K—近邻算法分析" class="headerlink" title="K—近邻算法分析"></a>K—近邻算法分析</h1><p>K—近邻算法采用测量不同特征之间的距离方法进行分类</p>
<p>特点：</p>
<ul>
<li><p>对异常值不敏感</p>
</li>
<li><p>精度高</p>
</li>
<li><p>计算复杂度高</p>
</li>
<li><p>空间复杂度高</p>
</li>
</ul>
<p><strong>K—近邻算法的一般流程</strong></p>
<ol>
<li><p>收集数据</p>
</li>
<li><p>准备数据</p>
</li>
<li><p>分析数据</p>
</li>
<li><p>测试算法</p>
</li>
<li><p>使用算法</p>
</li>
</ol>
<p>示例代码如下</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># K近邻算法</span></span><br><span class="line"><span class="comment"># 调用numpy和operator包</span></span><br><span class="line"><span class="keyword">from</span> numpy <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> operator</span><br><span class="line"><span class="comment"># dataSet数据集合 没有标签</span></span><br><span class="line"><span class="comment"># labels 标签</span></span><br><span class="line"><span class="comment"># k 最近邻近的数目</span></span><br><span class="line"><span class="comment"># inX 分类的输入向量</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">classify0</span><span class="params">(inX, dataSet, labels, k)</span>:</span></span><br><span class="line">    <span class="comment"># 提取数据的特征数量</span></span><br><span class="line">    <span class="comment"># shape[0]提取一维长度</span></span><br><span class="line">    <span class="comment"># shape[1]提取二维长度</span></span><br><span class="line">    dataSetSize = dataSet.shape[<span class="number">0</span>]</span><br><span class="line">    <span class="comment"># 使用了欧式距离</span></span><br><span class="line">    diffMat = tile(inX, (dataSetSize, <span class="number">1</span>))-dataSet</span><br><span class="line">    sqDiffMat = diffMat**<span class="number">2</span></span><br><span class="line">    sqDistances = sqDiffMat.sum(axis=<span class="number">1</span>)</span><br><span class="line">    distances = sqDistances**<span class="number">0.5</span></span><br><span class="line">    <span class="comment"># argsort()为大小排序</span></span><br><span class="line">    sortedDistIndicies = distances.argsort()</span><br><span class="line">    classCount = &#123;&#125;</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(k):</span><br><span class="line">        voteIlable = labels[sortedDistIndicies[i]]</span><br><span class="line">        classCount[voteIlable] = classCount.get(voteIlable, <span class="number">0</span>) + <span class="number">1</span></span><br><span class="line">    sortedClassCount = sorted(classCount.iteritems(), </span><br><span class="line">                              key=operator.itemgetter(<span class="number">1</span>), reverse=<span class="literal">True</span>)</span><br><span class="line">    <span class="keyword">return</span> sortedClassCount[<span class="number">0</span>][<span class="number">0</span>]</span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>Machine Learning</category>
      </categories>
      <tags>
        <tag>Machine Learing</tag>
      </tags>
  </entry>
  <entry>
    <title>使用PicGo遇到的坑集合</title>
    <url>/2019/11/12/%E4%BD%BF%E7%94%A8PicGo%E9%81%87%E5%88%B0%E7%9A%84%E5%9D%91%E9%9B%86%E5%90%88/</url>
    <content><![CDATA[<h2 id="使用PicGo遇到的坑集合"><a href="#使用PicGo遇到的坑集合" class="headerlink" title="使用PicGo遇到的坑集合"></a>使用PicGo遇到的坑集合</h2><p>我们在写blog的时候很多时候都会上传图片，然鹅光靠一个伴随生成的保存图片的文件夹有时候可能不够方便</p>
<p>这时候一款好的图床就特别重要辽</p>
<p>小Y凑集到PicGo是一款现在比较好用的软件</p>
<p>这款图床软件集合了多个图床方便使用</p>
<p>接下来小Y就说一说在使用PicGo的Github图床时遇到的坑 (ノへ￣、) </p>
<h4 id="坑1"><a href="#坑1" class="headerlink" title="坑1"></a>坑1</h4><p>在图床设置中的Github图床设置中</p>
<img src="https://raw.githubusercontent.com/Joshua-li-yi/blog_images/master/images/first_1/qq_pic_merged_1573493261853.jpg" style="zoom:50%;">



<ul>
<li><p>仓库名要设置为自己的github账户名/仓库名</p>
</li>
<li><p>分支名设置为master</p>
</li>
<li><p>Token为</p>
<p>1.github中的setting</p>
<img src="https://raw.githubusercontent.com/Joshua-li-yi/blog_images/master/images/first_1/20191112013055.png" style="zoom: 50%;">

</li>
</ul>
<p>2.然后进入Developer settings下的Personal access tokens</p>
<img src="https://raw.githubusercontent.com/Joshua-li-yi/blog_images/master/images/first_1/20191112013313.png" style="zoom:67%;">

<p>3.新建一个token</p>
<p><img src="https://raw.githubusercontent.com/Joshua-li-yi/blog_images/master/images/first_1/20191112013503.png" alt></p>
<p>Note可以任取</p>
<p>然后将repo的选项√就可</p>
<p>其他四项会自动✔</p>
<p>4.然后将token copy贴到PicGo的GitHub图床那一栏就可</p>
<ul>
<li><p>路径写的时候记得加 /</p>
<img src="https://raw.githubusercontent.com/Joshua-li-yi/blog_images/master/images/first_1/20191112013823.png" style="zoom:67%;">



</li>
</ul>
<ul>
<li><p>自定义域名的话可写可不写</p>
<p>它的主要作用是自定义域名的作用是，在上传图片后成功后，PicGo会将“自定义域名+上传的图片名”生成的访问链接，放到剪切板上</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">https://raw.githubusercontent.com/用户名/RepositoryName/分支名</span><br></pre></td></tr></table></figure>

<p>自定义域名需要按照这样去填写</p>
<h4 id="坑2"><a href="#坑2" class="headerlink" title="坑2"></a>坑2</h4><p>有时候会因为某些原因将相册里的图片或者gif删掉</p>
<p>然鹅你会发现再要是上传这一张图片或gif的时候就会上传失败</p>
<p>这个时候处理的办法是</p>
<p>将这张图片或gif改变一下名称这亚子就可以成功上传辽 (๑•̀ㅂ•́)و✧ </p>
<p>或者你在一种链接格式下选择了一张照片然后上传了</p>
<p>之后又删掉了</p>
<p>再以另一种链接格式上传的时候发现会上传失败</p>
<p>同样的处理手段改变一下名称就会上传成功了 ︿(￣︶￣)︿ </p>
<h4 id="温馨小提示"><a href="#温馨小提示" class="headerlink" title="温馨小提示"></a>温馨小提示</h4><p><strong>tip1</strong></p>
<img src="https://raw.githubusercontent.com/Joshua-li-yi/blog_images/master/images/first_1/20191112015418.png" style="zoom:67%;">

<p>这里可以选择链接的格式哦</p>
<p><strong>tip2</strong></p>
<img src="https://raw.githubusercontent.com/Joshua-li-yi/blog_images/master/images/first_1/20191112015601.png" style="zoom:67%;">

<p>可以把上传前重命名开启哦</p>
<p><strong>tip3</strong></p>
<p>可以多长图片同时上传哦</p>
</li>
</ul>
]]></content>
      <categories>
        <category>Blog搭建</category>
      </categories>
      <tags>
        <tag>PicGo</tag>
      </tags>
  </entry>
  <entry>
    <title>HEXO Next 添加小魔方</title>
    <url>/2019/11/11/Hexo-Next-%E6%B7%BB%E5%8A%A0%E5%B0%8F%E9%AD%94%E6%96%B9/</url>
    <content><![CDATA[<h2 id="HEXO-Next-小魔方（个性化回到顶部）"><a href="#HEXO-Next-小魔方（个性化回到顶部）" class="headerlink" title="HEXO Next 小魔方（个性化回到顶部）"></a>HEXO Next 小魔方（个性化回到顶部）</h2><h4 id="具体步骤如下"><a href="#具体步骤如下" class="headerlink" title="具体步骤如下"></a>具体步骤如下</h4><p>1.<strong><em>添加实现代码</em></strong></p>
<p>在/themes/next/layout/ _custom/ 路径下新建cube-hollow.swig文件</p>
<p>添加如下内容</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">  <span class="comment">/*最外层容器样式*/</span></span></span><br><span class="line"><span class="css">  <span class="selector-class">.wrap</span> &#123;</span></span><br><span class="line">    width: 0px;</span><br><span class="line">    height: 0px;</span><br><span class="line"><span class="css">    <span class="comment">/*margin: 80px;*/</span></span></span><br><span class="line"><span class="css">    <span class="comment">/*position: relative;*/</span></span></span><br><span class="line">    position: fixed;</span><br><span class="line"><span class="css">      <span class="comment">/*显示位置*/</span></span></span><br><span class="line">    bottom: 80px;</span><br><span class="line">    right: 80px;</span><br><span class="line">    z-index: 999;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">  <span class="comment">/*包裹所有容器样式*/</span></span></span><br><span class="line"><span class="css">  <span class="selector-class">.cube</span> &#123;</span></span><br><span class="line">    width: 0px;</span><br><span class="line">    height: 0px;</span><br><span class="line">    margin: 0 auto;</span><br><span class="line">    -webkit-transform-style: preserve-3d;</span><br><span class="line">    transform-style: preserve-3d;</span><br><span class="line">    transform: rotateX(-30deg) rotateY(-80deg);</span><br><span class="line">    animation: rotate linear 10s infinite;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">  @-<span class="keyword">webkit</span>-<span class="keyword">keyframes</span> rotate &#123;</span></span><br><span class="line">    from &#123;</span><br><span class="line">      transform: rotateX(0deg) rotateY(0deg);</span><br><span class="line">    &#125;</span><br><span class="line">    to &#123;</span><br><span class="line">      transform: rotateX(360deg) rotateY(360deg);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">  <span class="selector-class">.cube</span> <span class="selector-tag">div</span> &#123;</span></span><br><span class="line">    position: absolute;</span><br><span class="line"><span class="css">    <span class="comment">/*显示大小*/</span></span></span><br><span class="line">    width: 50px;</span><br><span class="line">    height: 50px;</span><br><span class="line"><span class="css">    <span class="selector-tag">opacity</span>: 0<span class="selector-class">.8</span>;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">transition</span>: <span class="selector-tag">all</span> <span class="selector-class">.4s</span>;</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">  <span class="comment">/*定义所有图片样式*/</span></span></span><br><span class="line"><span class="css">  <span class="selector-class">.pic</span> &#123;</span></span><br><span class="line">    width: 50px;</span><br><span class="line">    height: 50px;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">  <span class="selector-class">.cube</span> <span class="selector-class">.out_front</span> &#123;</span></span><br><span class="line">    transform: rotateY(0deg) translateZ(25px);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">  <span class="selector-class">.cube</span> <span class="selector-class">.out_back</span> &#123;</span></span><br><span class="line">    transform: translateZ(-25px) rotateY(180deg);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">  <span class="selector-class">.cube</span> <span class="selector-class">.out_left</span> &#123;</span></span><br><span class="line">    transform: rotateY(-90deg) translateZ(25px);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">  <span class="selector-class">.cube</span> <span class="selector-class">.out_right</span> &#123;</span></span><br><span class="line">    transform: rotateY(90deg) translateZ(25px);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">  <span class="selector-class">.cube</span> <span class="selector-class">.out_top</span> &#123;</span></span><br><span class="line">    transform: rotateX(90deg) translateZ(25px);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">  <span class="selector-class">.cube</span> <span class="selector-class">.out_bottom</span> &#123;</span></span><br><span class="line">    transform: rotateX(-90deg) translateZ(25px);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">  <span class="comment">/*定义小正方体样式*/</span></span></span><br><span class="line"><span class="css">  <span class="selector-class">.cube</span> <span class="selector-tag">span</span> &#123;</span></span><br><span class="line">    display: block;</span><br><span class="line">    width: 25px;</span><br><span class="line">    height: 25px;</span><br><span class="line">    position: absolute;</span><br><span class="line">    top: 12px;</span><br><span class="line">    left: 12px;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">  <span class="selector-class">.cube</span> <span class="selector-class">.in_pic</span> &#123;</span></span><br><span class="line">    width: 25px;</span><br><span class="line"><span class="css">    <span class="selector-tag">height</span><span class="selector-pseudo">:25px</span>;</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">  <span class="selector-class">.cube</span> <span class="selector-class">.in_front</span> &#123;</span></span><br><span class="line">    transform: rotateY(0deg) translateZ(12px);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">  <span class="selector-class">.cube</span> <span class="selector-class">.in_back</span> &#123;</span></span><br><span class="line">    transform: translateZ(-12px) rotateY(180deg);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">  <span class="selector-class">.cube</span> <span class="selector-class">.in_left</span> &#123;</span></span><br><span class="line">    transform: rotateY(-90deg) translateZ(12px);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">  <span class="selector-class">.cube</span> <span class="selector-class">.in_right</span> &#123;</span></span><br><span class="line">    transform: rotateY(90deg) translateZ(12px);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">  <span class="selector-class">.cube</span> <span class="selector-class">.in_top</span> &#123;</span></span><br><span class="line">    transform: rotateX(90deg) translateZ(12px);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">  <span class="selector-class">.cube</span> <span class="selector-class">.in_bottom</span> &#123;</span></span><br><span class="line">    transform: rotateX(-90deg) translateZ(12px);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">  <span class="comment">/*鼠标移入后样式*/</span></span></span><br><span class="line"><span class="css">  <span class="selector-class">.cube</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.out_front</span> &#123;</span></span><br><span class="line">    transform: rotateY(0deg) translateZ(50px);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">  <span class="selector-class">.cube</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.out_back</span> &#123;</span></span><br><span class="line">    transform: translateZ(-50px) rotateY(180deg);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">  <span class="selector-class">.cube</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.out_left</span> &#123;</span></span><br><span class="line">    transform: rotateY(-90deg) translateZ(50px);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">  <span class="selector-class">.cube</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.out_right</span> &#123;</span></span><br><span class="line">    transform: rotateY(90deg) translateZ(50px);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">  <span class="selector-class">.cube</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.out_top</span> &#123;</span></span><br><span class="line">    transform: rotateX(90deg) translateZ(50px);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">  <span class="selector-class">.cube</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.out_bottom</span> &#123;</span></span><br><span class="line">    transform: rotateX(-90deg) translateZ(50px);</span><br><span class="line">  &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"wrap"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--包裹所有元素的容器--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"cube"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--前面图片 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"out_front"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">onclick</span>=<span class="string">"back2top()"</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"https://raw.githubusercontent.com/Joshua-li-yi/blog_images/master/images/first_1/5.jpg"</span> <span class="attr">class</span>=<span class="string">"pic"</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--后面图片 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"out_back"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">onclick</span>=<span class="string">"back2top()"</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"https://raw.githubusercontent.com/Joshua-li-yi/blog_images/master/images/first_1/5.jpg"</span> <span class="attr">class</span>=<span class="string">"pic"</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--左面图片 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"out_left"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">onclick</span>=<span class="string">"back2top()"</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"https://raw.githubusercontent.com/Joshua-li-yi/blog_images/master/images/first_1/5.jpg"</span> <span class="attr">class</span>=<span class="string">"pic"</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--右面图片 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"out_right"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">onclick</span>=<span class="string">"back2top()"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"https://raw.githubusercontent.com/Joshua-li-yi/blog_images/master/images/first_1/5.jpg"</span> <span class="attr">class</span>=<span class="string">"pic"</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--上面图片 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"out_top"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">onclick</span>=<span class="string">"back2top()"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"https://raw.githubusercontent.com/Joshua-li-yi/blog_images/master/images/first_1/5.jpg"</span> <span class="attr">class</span>=<span class="string">"pic"</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--下面图片 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"out_bottom"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">onclick</span>=<span class="string">"back2top()"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"https://raw.githubusercontent.com/Joshua-li-yi/blog_images/master/images/first_1/5.jpg"</span> <span class="attr">class</span>=<span class="string">"pic"</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--小正方体 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"in_front"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"https://raw.githubusercontent.com/Joshua-li-yi/blog_images/master/images/first_1/6.jpg"</span> <span class="attr">class</span>=<span class="string">"in_pic"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"in_back"</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"https://raw.githubusercontent.com/Joshua-li-yi/blog_images/master/images/first_1/6.jpg"</span> <span class="attr">class</span>=<span class="string">"in_pic"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"in_left"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"https://raw.githubusercontent.com/Joshua-li-yi/blog_images/master/images/first_1/6.jpg"</span> <span class="attr">class</span>=<span class="string">"in_pic"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"in_right"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"https://raw.githubusercontent.com/Joshua-li-yi/blog_images/master/images/first_1/6.jpg"</span> <span class="attr">class</span>=<span class="string">"in_pic"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"in_top"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"https://raw.githubusercontent.com/Joshua-li-yi/blog_images/master/images/first_1/6.jpg"</span> <span class="attr">class</span>=<span class="string">"in_pic"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"in_bottom"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"https://raw.githubusercontent.com/Joshua-li-yi/blog_images/master/images/first_1/6.jpg"</span> <span class="attr">class</span>=<span class="string">"in_pic"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">  <span class="function"><span class="keyword">function</span> <span class="title">back2top</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="javascript">    $(<span class="string">'html, body'</span>).animate(&#123;<span class="attr">scrollTop</span>: <span class="number">0</span>&#125;, <span class="number">500</span>);</span></span><br><span class="line">  &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>其中的照片最好放自己的鸭！</p>
<p>还有就是记得调整显示的位置哦！</p>
<p>这样基本小魔方的实现代码就写辽</p>
<p>2.<strong><em>调用</em></strong></p>
<p>下面就是在个人主页中调用小魔方辽</p>
<ul>
<li><p>在  /themes/next/layout/_custom/custom.swig 文件中引入新建的文件</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 旋转魔方 --&gt;</span></span><br><span class="line">&#123;% if theme.cube.enable %&#125;</span><br><span class="line">   &#123;% if theme.cube.type == "mini" %&#125;</span><br><span class="line">      &#123;% include 'cube-mini.swig' %&#125;</span><br><span class="line">   &#123;% elseif theme.cube.type == "hollow" %&#125;</span><br><span class="line">      &#123;% include 'cube-hollow.swig' %&#125;</span><br><span class="line">   &#123;% endif %&#125;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>



</li>
</ul>
<ul>
<li><p>在主题next中的 _config.yml 中新添加以下动态配置项</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">cube:</span><br><span class="line">  enable: true</span><br><span class="line">  type: hollow # mini | hollow</span><br></pre></td></tr></table></figure>

</li>
</ul>
<p>这样子就好辽</p>
<p>最后再在gitbush中hexo g &amp;&amp; hexo d就可</p>
<h4 id="实现的效果如下"><a href="#实现的效果如下" class="headerlink" title="实现的效果如下"></a>实现的效果如下</h4><p><img src="https://raw.githubusercontent.com/Joshua-li-yi/blog_images/master/images/first_1/1.gif" alt></p>
]]></content>
      <categories>
        <category>HEXO Next美化</category>
      </categories>
      <tags>
        <tag>HEXO Next</tag>
      </tags>
  </entry>
  <entry>
    <title>Qt-画图板</title>
    <url>/2019/11/10/Qt-%E7%94%BB%E5%9B%BE%E6%9D%BF/</url>
    <content><![CDATA[<h2 id="Qt画图板程序的实现"><a href="#Qt画图板程序的实现" class="headerlink" title="Qt画图板程序的实现"></a>Qt画图板程序的实现</h2><h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p><img src="https://raw.githubusercontent.com/Joshua-li-yi/blog_images/master/images/20191110225749.png" alt></p>
<h4 id="Qt环境"><a href="#Qt环境" class="headerlink" title="Qt环境"></a>Qt环境</h4><p>Qt Creator 4.8.2</p>
<h4 id="技术细节"><a href="#技术细节" class="headerlink" title="技术细节"></a>技术细节</h4><p>画图板程序的实现分为以下三个部分，</p>
<ol>
<li><p>画图板界面的设计</p>
</li>
<li><p>界面和后台程序之间信号的传递</p>
</li>
<li><p>画图板功能程序的具体实现</p>
</li>
</ol>
<ol>
<li><strong>画图板界面的设计</strong></li>
</ol>
<p>利用Qt design设计画图板，包括，菜单栏，工具栏和用户窗口</p>
<p>具体界面如下：</p>
<p><img src="https://raw.githubusercontent.com/Joshua-li-yi/blog_images/master/images/first_1/20191111142852.png" alt></p>
<p>绘制图形可以绘制选择，直线，矩形，和圆</p>
<p><img src="https://raw.githubusercontent.com/Joshua-li-yi/blog_images/master/images/first_1/a145.png" alt></p>
<p>选择涂鸦即可绘制自由线条</p>
<p>可以选择，画笔的粗细，颜色和画笔的样式，也可以选择画刷的颜色和样式</p>
<p>二．<strong>界面和后台程序之间信号的传递</strong></p>
<p>在菜单栏的选择中使用了，connect函数实现信号的传递，使用action中自带的triggered()信号，来获得所点击的内容</p>
<p>具体代码如下：</p>
<p><img src="https://raw.githubusercontent.com/Joshua-li-yi/blog_images/master/images/first_1/20191111142945.png" alt></p>
<p>槽的定义为：</p>
<p><img src="https://raw.githubusercontent.com/Joshua-li-yi/blog_images/master/images/first_1/20191111143015.png" alt></p>
<p>graph在头文件中的定义为：</p>
<p><img src="https://raw.githubusercontent.com/Joshua-li-yi/blog_images/master/images/first_1/20191111143100.png" alt></p>
<p>画笔的粗细值的传递的具体代码如下：</p>
<figure class="highlight qt"><table><tr><td class="code"><pre><span class="line">ui-\&gt;spinBox-\&gt;setMinimum(<span class="number">1</span>);</span><br></pre></td></tr></table></figure>



<p><img src="https://raw.githubusercontent.com/Joshua-li-yi/blog_images/master/images/first_1/20191111143158.png" alt></p>
<p>画笔的颜色和画笔的样式，画刷的颜色和样式具体的实现代码如下：</p>
<p><img src="https://raw.githubusercontent.com/Joshua-li-yi/blog_images/master/images/first_1/20191111143227.png" alt></p>
<p><img src="https://raw.githubusercontent.com/Joshua-li-yi/blog_images/master/images/first_1/20191111143258.png" alt></p>
<p><img src="https://raw.githubusercontent.com/Joshua-li-yi/blog_images/master/images/first_1/20191111143328.png" alt></p>
<p>先使用了combox中的activated槽函数，将下拉列表的选择项提取出来，再一一对应对应的颜色与格式。</p>
<p>三 <strong>画图板功能程序的具体实现</strong></p>
<p>使用鼠标press，move，和release函数来获得鼠标的状态，并将状态记录下来</p>
<p>具体代码如下：</p>
<p><img src="https://raw.githubusercontent.com/Joshua-li-yi/blog_images/master/images/first_1/20191111143407.png" alt></p>
<p>isDrawing 用来记录画板是否处于绘画状态</p>
<p><img src="https://raw.githubusercontent.com/Joshua-li-yi/blog_images/master/images/first_1/20191111143436.png" alt></p>
<p><img src="https://raw.githubusercontent.com/Joshua-li-yi/blog_images/master/images/first_1/20191111143505.png" alt></p>
<p>问题及解决</p>
<ol>
<li></li>
</ol>
<p><strong>问题描述</strong>：在涂鸦功能的代码实现上，发现总是只能显示最终所画的两个点，而不能实现，鼠标点击之后路过哪里就在哪里画。</p>
<p><strong>问题解决</strong>：经过对代码的分析发现，造成上面的原因是，直接套用了上面画矩形和圆的双缓冲机制，而忽略了，双缓冲机制，是为了避免拖拽残影而将最终的tempix上的状态复制到pix画板上，所有，应该实时将涂鸦的内容复制到pix画板上，所以最终加了</p>
<p><img src="https://raw.githubusercontent.com/Joshua-li-yi/blog_images/master/images/first_1/20191111143538.png" alt></p>
<p>pix=tempix：这句</p>
<p>最后解决了，涂鸦的路径绘制问题</p>
<p>效果展示：</p>
<p><img src="https://raw.githubusercontent.com/Joshua-li-yi/blog_images/master/images/first_1/a1009.png" alt></p>
<p>2.</p>
<p><strong>问题描述</strong>：无法在画板上进行图形的连续绘制，每次只能在画板上画一个图形，再画另一个图形之后，就会更新前面所画的图形</p>
<p><strong>问题解决</strong>：分析绘制图形的代码发现，应该将</p>
<p>if(isDrawing)放在if(graph==1)里面可以解决上述问题，且只有一个</p>
<p>if(!isDrawing)</p>
<p>pix=tempix;</p>
<p>这样既可实现连续绘制，因为如果有多个</p>
<p>if(!isDrawing)</p>
<p>pix=tempix;</p>
<p>时，每次绘完之后他就会重启一个画板。</p>
<p><img src="https://raw.githubusercontent.com/Joshua-li-yi/blog_images/master/images/first_1/20191111143723.png" alt></p>
<p><img src="https://raw.githubusercontent.com/Joshua-li-yi/blog_images/master/images/first_1/20191111143801.png" alt></p>
<p>效果展示：</p>
<p><img src="https://raw.githubusercontent.com/Joshua-li-yi/blog_images/master/images/first_1/20191111143827.png" alt></p>
<p>3<strong>.</strong></p>
<p><strong>问题描述</strong>：无法更改画笔，画刷，画笔和画刷的信号传递过程没有设计好</p>
<p>开始时直接在构造函数里写combox的信号与槽，发现无法完成画笔和槽之间的切换。</p>
<p><strong>问题解决</strong>：经过查阅资料后，明白了combox和spinbox的使用细节。之后直接调用了他们的相关槽函数，具体代码如下：</p>
<p><img src="https://raw.githubusercontent.com/Joshua-li-yi/blog_images/master/images/first_1/20191111143855.png" alt></p>
<p>使用了combox的activated槽函数，和spinbox的editingfinished槽函数解决了问题。</p>
<p>效果展示：</p>
<p><img src="https://raw.githubusercontent.com/Joshua-li-yi/blog_images/master/images/first_1/a1215.png" alt></p>
]]></content>
      <categories>
        <category>Qt</category>
      </categories>
      <tags>
        <tag>Qt</tag>
      </tags>
  </entry>
  <entry>
    <title>Qt*.ui界面文件对应的ui_*.h文件的作用</title>
    <url>/2019/11/09/Qt-ui%E7%95%8C%E9%9D%A2%E6%96%87%E4%BB%B6%E5%AF%B9%E5%BA%94%E7%9A%84ui-h%E6%96%87%E4%BB%B6%E7%9A%84%E4%BD%9C%E7%94%A8/</url>
    <content><![CDATA[<h3 id="研究-ui界面文件对应的ui-h文件的作用"><a href="#研究-ui界面文件对应的ui-h文件的作用" class="headerlink" title="研究.ui界面文件对应的ui_.h文件的作用"></a>研究<em>.ui界面文件对应的ui_</em>.h文件的作用</h3><p>ui_<em>.h 是在对 *.ui 文件编译后生成的一个文件，ui_</em>.h 会出现在编译后的目录下，或与 *.ui 同目录（与项目的 shadow build 编译设置有关）。</p>
<h4 id="查看-ui-h-文件的内容，发现它主要做了以下的一些工作："><a href="#查看-ui-h-文件的内容，发现它主要做了以下的一些工作：" class="headerlink" title="查看 ui_*.h 文件的内容，发现它主要做了以下的一些工作："></a>查看 ui_*.h 文件的内容，发现它主要做了以下的一些工作：</h4><p>1.定义了一个类 Ui_*，用于封装可视化设计的界面。</p>
<p>2.自动生成了界面各个组件的类成员变量定义。在 public 部分为界面上每个组件定义了一个指针变量，变量的名称就是设置的相关控件的名称。比如，在窗体上放置了一个 QLabel 和一个 QPushButton 并命名后，自动生成的定义是：</p>
<figure class="highlight qt"><table><tr><td class="code"><pre><span class="line">QLabel*LabDemo;</span><br><span class="line"></span><br><span class="line">QPushButton*btnClos;</span><br></pre></td></tr></table></figure>

<p>3.定义了 setupUi() 函数，这个函数用于创建各个界面组件，并设置其位置、大小、文字内容、字体等属性，设置信号与槽的关联。setupUi() 函数体的第一部分是根据可视化设计的界面内容，用 C++ 代码创建界面上各组件，并设置其属性。<br>接下来，setupUi() 调用了函数 retranslateUi(Widget)，用来设置界面各组件的文字内容属性，如标签的文字、按键的文字、窗体的标题等。将界面上的文字设置的内容独立出来作为一个函数 retranslateUi()。</p>
<p>setupUi()函数的第三部分是设置信号于槽的关联，本文件中有一下两行</p>
<figure class="highlight qt"><table><tr><td class="code"><pre><span class="line"><span class="attribute">QObject</span>::connect(btnClose,SIGNAL(clicked()),Widget,SLOT(close()))</span><br><span class="line">;</span><br><span class="line"><span class="attribute">QMetaObject</span>::connectSlotsByName(Widget);</span><br></pre></td></tr></table></figure>

<p>第1 行是调用 connect() 函数，将在 UI 设计器里设置的信号与槽的关联转换为语句。这里是将 btnClose 按键的 clicked() 信号与窗体 Widget 的 close() 槽函数关联起来，就是在图 4 中设置的信号与槽的关联的程序语句实现。这样，当单击 btnClose 按钮时，就会执行 Widget 的 close() 槽函数，而 close() 槽函数的功能是关闭窗口。<br>第 2 行是设置槽函数的关联方式，用于将 UI 设计器自动生成的组件信号的槽函数与组件信号相关联。<br>所以，在Widget 的构造函数里调用 ui-&gt;setupUI(this)，就实现了窗体上组件的创建、属性设置、信号与槽的关联。</p>
<p>定义 namespace Ui，并定义一个从Ui_Widget 继承的类Widget。 </p>
<figure class="highlight qt"><table><tr><td class="code"><pre><span class="line">namespace <span class="title">Ui</span>&#123;</span><br><span class="line">class <span class="attribute">Widget</span>:<span class="attribute">public Ui Widget&#123;&#125;</span></span><br><span class="line"><span class="attribute">&#125;</span></span><br></pre></td></tr></table></figure>

<p>ui_widget.h 文件里实现界面功能的类是 Ui_Widget。再定义一个类 Widget 从 Ui_Widget 继承而来，并定义在 namespace Ui 里，这样 Ui:: Widget 与 widget.h 里的类 Widget 同名，但是用 namespace 区分开来。所以，界面的 Ui:: Widget 类与文件 widget.h 里定义的 Widget 类实际上是两个类，但是设计的程序员对 Qt 的处理让用户感觉不到 Ui:: Widget 类的存在。</p>
]]></content>
      <categories>
        <category>Qt</category>
      </categories>
      <tags>
        <tag>Qt</tag>
      </tags>
  </entry>
  <entry>
    <title>函数递归之斐波那契数列加强版</title>
    <url>/2019/11/09/%E5%87%BD%E6%95%B0%E9%80%92%E5%BD%92%E4%B9%8B%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91%E6%95%B0%E5%88%97%E5%8A%A0%E5%BC%BA%E7%89%88/</url>
    <content><![CDATA[<h1 id="函数递归之斐波那契数列加强版1"><a href="#函数递归之斐波那契数列加强版1" class="headerlink" title="函数递归之斐波那契数列加强版1"></a>函数递归之斐波那契数列加强版1</h1><p><strong>背景</strong></p>
<p>在函数递归问题中一个典型问题是求解斐波那契数列</p>
<p>但是函数递归会面临着资源的大量消耗问题</p>
<p>按照一种最为基本的写法</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">Fib</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> a)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (a &lt; <span class="number">2</span>)</span><br><span class="line">		<span class="keyword">return</span> a;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">		<span class="keyword">return</span> Fib(a - <span class="number">1</span>) + Fib(a - <span class="number">2</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="keyword">int</span> n;</span><br><span class="line">	<span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">	<span class="keyword">if</span> (n &lt;=<span class="number">0</span>||n&gt;<span class="number">90</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">"WORNG"</span>;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">cout</span>&lt;&lt;Fib(n);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>在n&lt;=50左右时，大概等几秒钟是可以得出答案的</p>
<p>然鹅一旦太大的话……</p>
<p>你也许就得等上老一会儿</p>
<p>下面是对该算法的改进</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">Fibo</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span>&amp;,<span class="keyword">long</span> <span class="keyword">long</span>&amp;,<span class="keyword">int</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="keyword">int</span> n;</span><br><span class="line">	<span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">	<span class="keyword">if</span> (n &lt;=<span class="number">0</span>||n&gt;<span class="number">90</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">"WORNG"</span>;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">long</span> <span class="keyword">long</span> a = <span class="number">1</span>, b = <span class="number">1</span>;</span><br><span class="line">	<span class="built_in">cout</span>&lt;&lt;Fibo(a,b,n);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">Fibo</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> &amp;a,<span class="keyword">long</span> <span class="keyword">long</span> &amp;b,<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">long</span> <span class="keyword">long</span> temp1[<span class="number">90</span>],temp2[<span class="number">90</span>];</span><br><span class="line">	<span class="keyword">int</span> j = <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">if</span> (n &gt; <span class="number">2</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			temp1[j] = a + b;</span><br><span class="line">			temp2[j++] = a;</span><br><span class="line">			<span class="keyword">return</span> Fibo(temp1[j<span class="number">-1</span>],temp2[j<span class="number">-1</span>], n - <span class="number">1</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这样写就可极大的缩短时间啦！！！</p>
]]></content>
      <categories>
        <category>c++算法</category>
      </categories>
      <tags>
        <tag>c++ data structure</tag>
      </tags>
  </entry>
  <entry>
    <title>MATLAB—线性规划问题求解</title>
    <url>/2019/11/09/matlab-%E7%BA%BF%E6%80%A7%E8%A7%84%E5%88%92%E9%97%AE%E9%A2%98%E6%B1%82%E8%A7%A3/</url>
    <content><![CDATA[<h1 id="MATLAB求解线性规划问题"><a href="#MATLAB求解线性规划问题" class="headerlink" title="MATLAB求解线性规划问题"></a>MATLAB求解线性规划问题</h1><h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><p>1.（生产问题）某工厂计划生产甲、乙两种产品，主要材料有钢材3500kg，铁材1800kg，专用设备能力2800台时，材料与设备能力的消耗定额及单位产品所获利润如表所示，问如何安排生产，才能使该厂所获利润最大？</p>
<p><img src="http://q6b782rdi.bkt.clouddn.com/images10.png" alt></p>
<h3 id="问题分析"><a href="#问题分析" class="headerlink" title="问题分析"></a>问题分析</h3><p>x1甲种产品的件数，x2乙种产品的件数</p>
<p>max y=80<em>x1+125</em>x2  （该厂所获得的的利润）</p>
<p>8<em>x1+5</em>x2&lt;=3500  （所耗费的钢材不超过3500kg）</p>
<p>6<em>x1+4</em>x2&lt;=1800 （所耗费的铁材不超过1800kg）</p>
<p>4<em>x1+5</em>x2&lt;=2800  （所耗费的设备能力不超过2800台）</p>
<p>-x1&lt;=0  （生产甲的件数为自然数）</p>
<p>-x2&lt;=0  （生产乙的件数为自然数）</p>
<h5 id="MATLAB代码如下"><a href="#MATLAB代码如下" class="headerlink" title="MATLAB代码如下"></a>MATLAB代码如下</h5><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; intcon=[<span class="number">1</span> <span class="number">2</span>]</span><br><span class="line"></span><br><span class="line">intcon =</span><br><span class="line"></span><br><span class="line">     <span class="number">1</span>     <span class="number">2</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; a=[<span class="number">8</span> <span class="number">5</span>;<span class="number">6</span> <span class="number">4</span>;<span class="number">4</span> <span class="number">5</span>;<span class="number">-1</span> <span class="number">0</span>;<span class="number">0</span> <span class="number">-1</span>]</span><br><span class="line"></span><br><span class="line">a =</span><br><span class="line"></span><br><span class="line">     <span class="number">8</span>     <span class="number">5</span></span><br><span class="line">     <span class="number">6</span>     <span class="number">4</span></span><br><span class="line">     <span class="number">4</span>     <span class="number">5</span></span><br><span class="line">    <span class="number">-1</span>     <span class="number">0</span></span><br><span class="line">     <span class="number">0</span>    <span class="number">-1</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; b=[<span class="number">3500</span>;<span class="number">1800</span>;<span class="number">2800</span>;<span class="number">0</span>;<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">b =</span><br><span class="line"></span><br><span class="line">        <span class="number">3500</span></span><br><span class="line">        <span class="number">1800</span></span><br><span class="line">        <span class="number">2800</span></span><br><span class="line">           <span class="number">0</span></span><br><span class="line">           <span class="number">0</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; f=-[<span class="number">80</span> <span class="number">125</span>]</span><br><span class="line"></span><br><span class="line">f =</span><br><span class="line"></span><br><span class="line">   <span class="number">-80</span>  <span class="number">-125</span></span><br><span class="line">&gt;&gt; [x fval exitflag]=intlinprog(f,intcon,a,b)</span><br><span class="line"></span><br><span class="line">x =</span><br><span class="line"></span><br><span class="line">         <span class="number">0</span></span><br><span class="line">  <span class="number">450.0000</span>（生产甲<span class="number">0</span>件，乙<span class="number">450</span>件）</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">fval =</span><br><span class="line"></span><br><span class="line">      <span class="number">-56250</span></span><br><span class="line">      <span class="comment">%（最大利润为56250元）</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">exitflag =</span><br><span class="line"></span><br><span class="line">     <span class="number">1</span></span><br></pre></td></tr></table></figure>

<p>当生产甲0件，乙450件时，该厂利润最大，为56250元</p>
<p>2.（运输问题）设两个建材厂C1和C2，每年沙石的产量分别为35万吨和55万吨，这些沙石需要供应到W1、W2和W3三个建筑工地，每年建筑工地对沙石的需求量分别为26万吨、35万吨和26万吨，各建材厂到建筑工地之间的运费（万元/万吨）如表所示，问应当如何调运才能使得总运费最小。</p>
<p><img src="http://q6b782rdi.bkt.clouddn.com/images11.png" alt></p>
<h3 id="问题分析-1"><a href="#问题分析-1" class="headerlink" title="问题分析"></a>问题分析</h3><p>c1x1,c1x2,c1x3,分别为c1建材厂调到w1，w2，w3三个建筑工地的砂石量（万吨）</p>
<p>c2x1,c2x2,c2x3, 分别为c2建材厂调到w1，w2，w3三个建筑工地的砂石量（万吨）</p>
<p>min y=10<em>c1x1+12</em>c1x2+9<em>c1x3+8</em>c2x1+11<em>c2x2+13</em>c2x3(总运费最小)</p>
<p>c1x1+c1x2+c1x3&lt;=35（c1建材厂产量为35万吨）</p>
<p>c2x1+c2x2+c2x3&lt;=55（c2建材厂产量为55万吨）</p>
<p>c1x1+c2x1&gt;=26（w1建筑工地对沙石的需求量为26万吨）</p>
<p>c1x2+c2x2&gt;=35（w2建筑工地对沙石的需求量为35万吨）</p>
<p>c1x3+c2x3&gt;=26（w3建筑工地对沙石的需求量为26万吨）</p>
<p>cixj&gt;=0(i=1,2 j=1,2,3)（运送量大于等于0万吨）</p>
<h5 id="MATLAB代码如下-1"><a href="#MATLAB代码如下-1" class="headerlink" title="MATLAB代码如下"></a>MATLAB代码如下</h5><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">f=[<span class="number">10</span> <span class="number">12</span> <span class="number">9</span> <span class="number">8</span> <span class="number">11</span> <span class="number">13</span>];</span><br><span class="line">b=-[<span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span>;<span class="number">0</span> <span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span>;<span class="number">0</span> <span class="number">0</span> <span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span>;<span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1</span> <span class="number">0</span> <span class="number">0</span>;<span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1</span> <span class="number">0</span>;<span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1</span>];</span><br><span class="line">a=[<span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span>;<span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span>;<span class="number">-1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">-1</span> <span class="number">0</span> <span class="number">0</span>;<span class="number">0</span> <span class="number">-1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">-1</span> <span class="number">0</span>;<span class="number">0</span> <span class="number">0</span> <span class="number">-1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">-1</span>;b];</span><br><span class="line">c=[<span class="number">35</span>;<span class="number">55</span>;<span class="number">-26</span>;<span class="number">-35</span>;<span class="number">-26</span>;<span class="number">0</span>;<span class="number">0</span>;<span class="number">0</span>;<span class="number">0</span>;<span class="number">0</span>;<span class="number">0</span>];</span><br><span class="line">[cx fmin]=linprog(f,a,c);</span><br><span class="line">cx=</span><br><span class="line"><span class="number">0</span>(c1x1,c1-&gt;w1)</span><br><span class="line"><span class="number">6</span>(c1x2,c1-&gt;w2)</span><br><span class="line"><span class="number">26</span>(c1x3,c1-&gt;w3)</span><br><span class="line"><span class="number">26</span>(c2x1,c2-&gt;w1)</span><br><span class="line"><span class="number">29</span>(c2x2,c2-&gt;w2)</span><br><span class="line"><span class="number">0</span>(c2x3,c2-&gt;w3)</span><br><span class="line">fmin=</span><br><span class="line"><span class="number">833</span></span><br><span class="line"><span class="comment">%（总运费最小为833万元）</span></span><br></pre></td></tr></table></figure>

<p>当c1向w1,w2,w3分别运送0,6,26万吨，c2向w1,w2,w3分别运送26,29,0万吨时，总运费最小，为833万元。</p>
<p>3.（资金分配问题）某企业在今后三年有5项工程考虑施工，每项工程的期望收入和年度费用如表所示。假定每一项已经批准的工程要在整个三年内完成。问企业应怎样选择工程，使企业总收入最大。</p>
<p><img src="http://q6b782rdi.bkt.clouddn.com/images12.png" alt></p>
<h3 id="问题分析-2"><a href="#问题分析-2" class="headerlink" title="问题分析"></a>问题分析</h3><p>x1,x2,x3,x4,x5分别表示工程1,2,3,4,5</p>
<p>max y=20<em>x1+40</em>x2+20<em>x3+15</em>x4+30*x5 (企业总收入最大)</p>
<p>5<em>x1+4</em>x2+3<em>x3+7</em>x4+8*x5&lt;=25（第1年最大可用基金数为25千元）</p>
<p>1<em>x1+7</em>x2+9<em>x3+4</em>x4+6*x5&lt;=25（第2年最大可用基金数为25千元）</p>
<p>8<em>x1+10</em>x2+2<em>x3+1</em>x4+10*x5&lt;=25（第3年最大可用基金数为25千元）</p>
<p>xi=[0 1];(i=1,2 ,3,4,5)</p>
<h5 id="MATLAB代码如下-2"><a href="#MATLAB代码如下-2" class="headerlink" title="MATLAB代码如下"></a>MATLAB代码如下</h5><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">f=-[<span class="number">20</span> <span class="number">40</span> <span class="number">20</span> <span class="number">15</span> <span class="number">30</span>];</span><br><span class="line">a=[<span class="number">5</span> <span class="number">4</span> <span class="number">3</span> <span class="number">7</span> <span class="number">8</span>;<span class="number">1</span> <span class="number">7</span> <span class="number">9</span> <span class="number">4</span> <span class="number">6</span>;<span class="number">8</span> <span class="number">10</span> <span class="number">2</span> <span class="number">1</span> <span class="number">10</span>];</span><br><span class="line">b=[<span class="number">25</span>;<span class="number">25</span>;<span class="number">25</span>];</span><br><span class="line">intcon=[<span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span>];</span><br><span class="line">lb=<span class="built_in">zeros</span>(<span class="number">5</span>,<span class="number">1</span>);</span><br><span class="line">ub=<span class="built_in">ones</span>(<span class="number">5</span>,<span class="number">1</span>);</span><br><span class="line">[x ,fm ,exitflag]=intlinprog(f,intcon,a,b,[],[],lb,ub);</span><br><span class="line">x=</span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">0</span></span><br><span class="line"><span class="comment">%(实施1,2,3,4号项目)</span></span><br><span class="line">fm=</span><br><span class="line">	<span class="number">-95</span></span><br><span class="line">	<span class="comment">%（企业总收入最大为95千元）</span></span><br><span class="line">exitflag=</span><br><span class="line">   <span class="number">1</span></span><br></pre></td></tr></table></figure>

<p>当企业选择1,2,3,4工程时，企业利润最大，为95千元。</p>
]]></content>
      <categories>
        <category>MATLAB</category>
      </categories>
      <tags>
        <tag>MATLAB machine learning</tag>
      </tags>
  </entry>
</search>
