<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>神器集合</title>
    <url>/2019/11/17/%E7%A5%9E%E5%99%A8%E9%9B%86%E5%90%88/</url>
    <content><![CDATA[<h2 id="神器"><a href="#神器" class="headerlink" title="神器"></a>神器</h2><p>闲的没事，就想总结几款神器 供大家参考o(<em>^＠^</em>)o</p>
<h4 id="LICEcap"><a href="#LICEcap" class="headerlink" title="LICEcap"></a>LICEcap</h4><p>一款非常简洁实用的gif神器</p>
<img src="https://raw.githubusercontent.com/Joshua-li-yi/blog_images/master/images/first_1/20191117000100.png" style="zoom: 50%;">



<h4 id="Snipaster"><a href="#Snipaster" class="headerlink" title="Snipaster"></a>Snipaster</h4><p>一款好用的截图软件</p>
<img src="https://raw.githubusercontent.com/Joshua-li-yi/blog_images/master/images/first_1/20191117000144.png" style="zoom:50%;">

<h4 id="pandoc"><a href="#pandoc" class="headerlink" title="pandoc"></a>pandoc</h4><p>极其 极其好用格式转化工具</p>
<p> d=====(￣▽￣*)b </p>
<h4 id="谷歌访问助手"><a href="#谷歌访问助手" class="headerlink" title="谷歌访问助手"></a>谷歌访问助手</h4><p>可以不用外网使用Google搜索等服务</p>
<img src="https://raw.githubusercontent.com/Joshua-li-yi/blog_images/master/images/first_1/20191117000226.png" style="zoom:50%;">

<h4 id="gvim"><a href="#gvim" class="headerlink" title="gvim"></a>gvim</h4><p>敲代码真神器！！！程序猿的金箍棒！！！</p>
<p>体验自行百度 ✧(≖ ◡ ≖✿) </p>
<img src="https://raw.githubusercontent.com/Joshua-li-yi/blog_images/master/images/first_1/20191117000303.png" style="zoom:50%;">

<h4 id="youdict网站"><a href="#youdict网站" class="headerlink" title="youdict网站"></a>youdict网站</h4><p>可以查到词根词缀非常方便记忆哦</p>
<p>[优词词典]（ <a href="https://www.youdict.com/" target="_blank" rel="noopener">https://www.youdict.com</a> ）</p>
<h4 id="每日英语听力APP"><a href="#每日英语听力APP" class="headerlink" title="每日英语听力APP"></a>每日英语听力APP</h4><p>一款好用的英语听力APP包含了IELTS听力真题以及一些其他的听力资源</p>
<img src="https://raw.githubusercontent.com/Joshua-li-yi/blog_images/master/images/first_1/Screenshot_2019_1117_210003.png" style="zoom: 33%;">

<h4 id="欧陆词典"><a href="#欧陆词典" class="headerlink" title="欧陆词典"></a>欧陆词典</h4><p>大家是否有过在手机上来回切换查词软件来查词的麻烦经历</p>
<p>这款手机APP可以悬浮在其他软件上方随时进行查词查句的操作真的特别的方便</p>
<p>学习效率提升两三倍 ～(￣▽￣～)(～￣▽￣)～ </p>
<img src="https://raw.githubusercontent.com/Joshua-li-yi/blog_images/master/images/first_1/Screenshot_2019_1117_210028.png" style="zoom:50%;">

<h4 id="西窗烛"><a href="#西窗烛" class="headerlink" title="西窗烛"></a>西窗烛</h4><p>喜欢诗词文学同学的福利鸭</p>
<img src="https://raw.githubusercontent.com/Joshua-li-yi/blog_images/master/images/first_1/Screenshot_2019_1117_210119.png" style="zoom:33%;">

<h4 id="猪八戒"><a href="#猪八戒" class="headerlink" title="猪八戒"></a>猪八戒</h4><p>一个学生可以偷偷挣零花钱的网站哦（做PPT，视频……）</p>
<p>不是刷单 Σ( ° △ °|||)︴ </p>
<img src="https://raw.githubusercontent.com/Joshua-li-yi/blog_images/master/images/first_1/Screenshot_2019_1117_210039.png" style="zoom:33%;">

<h4 id="实习僧"><a href="#实习僧" class="headerlink" title="实习僧"></a>实习僧</h4><p>一个太特别好用的找实习的平台</p>
<h4 id="站酷"><a href="#站酷" class="headerlink" title="站酷"></a>站酷</h4><p>培养审美的神器！！！</p>
<img src="https://raw.githubusercontent.com/Joshua-li-yi/blog_images/master/images/first_1/Screenshot_2019_1117_210128.png" style="zoom:33%;">

<h4 id="BOSS直聘"><a href="#BOSS直聘" class="headerlink" title="BOSS直聘"></a>BOSS直聘</h4><h4 id="拉钩招聘"><a href="#拉钩招聘" class="headerlink" title="拉钩招聘"></a>拉钩招聘</h4><p>这两个是找工作找实习的神器直接和招聘公司一对一聊天</p>
<p>大学生不可错过的软件哦</p>
<img src="https://raw.githubusercontent.com/Joshua-li-yi/blog_images/master/images/first_1/Screenshot_2019_1117_210057.png" style="zoom:33%;">

<img src="https://raw.githubusercontent.com/Joshua-li-yi/blog_images/master/images/first_1/Screenshot_2019_1117_210048.png" style="zoom:33%;">

<h4 id="EasyConnect"><a href="#EasyConnect" class="headerlink" title="EasyConnect"></a>EasyConnect</h4><p>一款可以用其他网络登陆学校VPN的特别好用的手机软件</p>
<p>大学生极力推荐 (<em>￣▽)u┌┐ ｄ(▽￣</em>) </p>
<img src="https://raw.githubusercontent.com/Joshua-li-yi/blog_images/master/images/first_1/Screenshot_2019_1117_210017.png" style="zoom:33%;">



<h4 id="E站"><a href="#E站" class="headerlink" title="E站"></a>E站</h4><p>一个刷动漫的网站</p>
<p>详情请自行查看</p>
<p>绝对o(￣▽￣)ｄ</p>
<p>嘻嘻嘻 </p>
]]></content>
      <categories>
        <category>神器</category>
      </categories>
      <tags>
        <tag>神器</tag>
      </tags>
  </entry>
  <entry>
    <title>K-近邻算法分析</title>
    <url>/2019/11/13/K-%E8%BF%91%E9%82%BB%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90/</url>
    <content><![CDATA[<h1 id="K—近邻算法分析"><a href="#K—近邻算法分析" class="headerlink" title="K—近邻算法分析"></a>K—近邻算法分析</h1><p>K—近邻算法采用测量不同特征之间的距离方法进行分类</p>
<p>特点：</p>
<ul>
<li><p>对异常值不敏感</p>
</li>
<li><p>精度高</p>
</li>
<li><p>计算复杂度高</p>
</li>
<li><p>空间复杂度高</p>
</li>
</ul>
<p><strong>K—近邻算法的一般流程</strong></p>
<ol>
<li><p>收集数据</p>
</li>
<li><p>准备数据</p>
</li>
<li><p>分析数据</p>
</li>
<li><p>测试算法</p>
</li>
<li><p>使用算法</p>
</li>
</ol>
<p>示例代码如下</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># K近邻算法</span></span><br><span class="line"><span class="comment"># 调用numpy和operator包</span></span><br><span class="line"><span class="keyword">from</span> numpy <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> operator</span><br><span class="line"><span class="comment"># dataSet数据集合 没有标签</span></span><br><span class="line"><span class="comment"># labels 标签</span></span><br><span class="line"><span class="comment"># k 最近邻近的数目</span></span><br><span class="line"><span class="comment"># inX 分类的输入向量</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">classify0</span><span class="params">(inX, dataSet, labels, k)</span>:</span></span><br><span class="line">    <span class="comment"># 提取数据的特征数量</span></span><br><span class="line">    <span class="comment"># shape[0]提取一维长度</span></span><br><span class="line">    <span class="comment"># shape[1]提取二维长度</span></span><br><span class="line">    dataSetSize = dataSet.shape[<span class="number">0</span>]</span><br><span class="line">    <span class="comment"># 使用了欧式距离</span></span><br><span class="line">    diffMat = tile(inX, (dataSetSize, <span class="number">1</span>))-dataSet</span><br><span class="line">    sqDiffMat = diffMat**<span class="number">2</span></span><br><span class="line">    sqDistances = sqDiffMat.sum(axis=<span class="number">1</span>)</span><br><span class="line">    distances = sqDistances**<span class="number">0.5</span></span><br><span class="line">    <span class="comment"># argsort()为大小排序</span></span><br><span class="line">    sortedDistIndicies = distances.argsort()</span><br><span class="line">    classCount = &#123;&#125;</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(k):</span><br><span class="line">        voteIlable = labels[sortedDistIndicies[i]]</span><br><span class="line">        classCount[voteIlable] = classCount.get(voteIlable, <span class="number">0</span>) + <span class="number">1</span></span><br><span class="line">    sortedClassCount = sorted(classCount.iteritems(), </span><br><span class="line">                              key=operator.itemgetter(<span class="number">1</span>), reverse=<span class="literal">True</span>)</span><br><span class="line">    <span class="keyword">return</span> sortedClassCount[<span class="number">0</span>][<span class="number">0</span>]</span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>Machine Learning</category>
      </categories>
      <tags>
        <tag>Machine Learing</tag>
      </tags>
  </entry>
  <entry>
    <title>使用PicGo遇到的坑集合</title>
    <url>/2019/11/12/%E4%BD%BF%E7%94%A8PicGo%E9%81%87%E5%88%B0%E7%9A%84%E5%9D%91%E9%9B%86%E5%90%88/</url>
    <content><![CDATA[<h2 id="使用PicGo遇到的坑集合"><a href="#使用PicGo遇到的坑集合" class="headerlink" title="使用PicGo遇到的坑集合"></a>使用PicGo遇到的坑集合</h2><p>我们在写blog的时候很多时候都会上传图片，然鹅光靠一个伴随生成的保存图片的文件夹有时候可能不够方便</p>
<p>这时候一款好的图床就特别重要辽</p>
<p>小Y凑集到PicGo是一款现在比较好用的软件</p>
<p>这款图床软件集合了多个图床方便使用</p>
<p>接下来小Y就说一说在使用PicGo的Github图床时遇到的坑 (ノへ￣、) </p>
<h4 id="坑1"><a href="#坑1" class="headerlink" title="坑1"></a>坑1</h4><p>在图床设置中的Github图床设置中</p>
<img src="https://raw.githubusercontent.com/Joshua-li-yi/blog_images/master/images/first_1/qq_pic_merged_1573493261853.jpg" style="zoom:50%;">



<ul>
<li><p>仓库名要设置为自己的github账户名/仓库名</p>
</li>
<li><p>分支名设置为master</p>
</li>
<li><p>Token为</p>
<p>1.github中的setting</p>
<img src="https://raw.githubusercontent.com/Joshua-li-yi/blog_images/master/images/first_1/20191112013055.png" style="zoom: 50%;">

</li>
</ul>
<p>2.然后进入Developer settings下的Personal access tokens</p>
<img src="https://raw.githubusercontent.com/Joshua-li-yi/blog_images/master/images/first_1/20191112013313.png" style="zoom:67%;">

<p>3.新建一个token</p>
<p><img src="https://raw.githubusercontent.com/Joshua-li-yi/blog_images/master/images/first_1/20191112013503.png" alt></p>
<p>Note可以任取</p>
<p>然后将repo的选项√就可</p>
<p>其他四项会自动✔</p>
<p>4.然后将token copy贴到PicGo的GitHub图床那一栏就可</p>
<ul>
<li><p>路径写的时候记得加 /</p>
<img src="https://raw.githubusercontent.com/Joshua-li-yi/blog_images/master/images/first_1/20191112013823.png" style="zoom:67%;">



</li>
</ul>
<ul>
<li><p>自定义域名的话可写可不写</p>
<p>它的主要作用是自定义域名的作用是，在上传图片后成功后，PicGo会将“自定义域名+上传的图片名”生成的访问链接，放到剪切板上</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">https://raw.githubusercontent.com/用户名/RepositoryName/分支名</span><br></pre></td></tr></table></figure>

<p>自定义域名需要按照这样去填写</p>
<h4 id="坑2"><a href="#坑2" class="headerlink" title="坑2"></a>坑2</h4><p>有时候会因为某些原因将相册里的图片或者gif删掉</p>
<p>然鹅你会发现再要是上传这一张图片或gif的时候就会上传失败</p>
<p>这个时候处理的办法是</p>
<p>将这张图片或gif改变一下名称这亚子就可以成功上传辽 (๑•̀ㅂ•́)و✧ </p>
<p>或者你在一种链接格式下选择了一张照片然后上传了</p>
<p>之后又删掉了</p>
<p>再以另一种链接格式上传的时候发现会上传失败</p>
<p>同样的处理手段改变一下名称就会上传成功了 ︿(￣︶￣)︿ </p>
<h4 id="温馨小提示"><a href="#温馨小提示" class="headerlink" title="温馨小提示"></a>温馨小提示</h4><p><strong>tip1</strong></p>
<img src="https://raw.githubusercontent.com/Joshua-li-yi/blog_images/master/images/first_1/20191112015418.png" style="zoom:67%;">

<p>这里可以选择链接的格式哦</p>
<p><strong>tip2</strong></p>
<img src="https://raw.githubusercontent.com/Joshua-li-yi/blog_images/master/images/first_1/20191112015601.png" style="zoom:67%;">

<p>可以把上传前重命名开启哦</p>
<p><strong>tip3</strong></p>
<p>可以多长图片同时上传哦</p>
</li>
</ul>
]]></content>
      <categories>
        <category>Blog搭建</category>
      </categories>
      <tags>
        <tag>PicGo</tag>
      </tags>
  </entry>
  <entry>
    <title>HEXO Next 添加小魔方</title>
    <url>/2019/11/11/Hexo-Next-%E6%B7%BB%E5%8A%A0%E5%B0%8F%E9%AD%94%E6%96%B9/</url>
    <content><![CDATA[<h2 id="HEXO-Next-小魔方（个性化回到顶部）"><a href="#HEXO-Next-小魔方（个性化回到顶部）" class="headerlink" title="HEXO Next 小魔方（个性化回到顶部）"></a>HEXO Next 小魔方（个性化回到顶部）</h2><p>小Y在浏览网页的时候无意中看到某些大佬的Next下面有一个这亚子的小魔方</p>
<p><img src="https://raw.githubusercontent.com/Joshua-li-yi/blog_images/master/images/first_1/3.gif" alt></p>
<p>一开始不知道这玩意除了好看还有嘛用</p>
<p>后来发现这个小魔方是一个“返回页面顶部的个性化操作”</p>
<p>就想着怎么把这个弄到自己的blog里</p>
<h4 id="具体步骤如下"><a href="#具体步骤如下" class="headerlink" title="具体步骤如下"></a>具体步骤如下</h4><p>1.<strong><em>添加实现代码</em></strong></p>
<p>在/themes/next/layout/ _custom/ 路径下新建cube-hollow.swig文件</p>
<p>添加如下内容</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">  <span class="comment">/*最外层容器样式*/</span></span></span><br><span class="line"><span class="css">  <span class="selector-class">.wrap</span> &#123;</span></span><br><span class="line">    width: 0px;</span><br><span class="line">    height: 0px;</span><br><span class="line"><span class="css">    <span class="comment">/*margin: 80px;*/</span></span></span><br><span class="line"><span class="css">    <span class="comment">/*position: relative;*/</span></span></span><br><span class="line">    position: fixed;</span><br><span class="line"><span class="css">      <span class="comment">/*显示位置*/</span></span></span><br><span class="line">    bottom: 80px;</span><br><span class="line">    right: 80px;</span><br><span class="line">    z-index: 999;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">  <span class="comment">/*包裹所有容器样式*/</span></span></span><br><span class="line"><span class="css">  <span class="selector-class">.cube</span> &#123;</span></span><br><span class="line">    width: 0px;</span><br><span class="line">    height: 0px;</span><br><span class="line">    margin: 0 auto;</span><br><span class="line">    -webkit-transform-style: preserve-3d;</span><br><span class="line">    transform-style: preserve-3d;</span><br><span class="line">    transform: rotateX(-30deg) rotateY(-80deg);</span><br><span class="line">    animation: rotate linear 10s infinite;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">  @-<span class="keyword">webkit</span>-<span class="keyword">keyframes</span> rotate &#123;</span></span><br><span class="line">    from &#123;</span><br><span class="line">      transform: rotateX(0deg) rotateY(0deg);</span><br><span class="line">    &#125;</span><br><span class="line">    to &#123;</span><br><span class="line">      transform: rotateX(360deg) rotateY(360deg);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">  <span class="selector-class">.cube</span> <span class="selector-tag">div</span> &#123;</span></span><br><span class="line">    position: absolute;</span><br><span class="line"><span class="css">    <span class="comment">/*显示大小*/</span></span></span><br><span class="line">    width: 50px;</span><br><span class="line">    height: 50px;</span><br><span class="line"><span class="css">    <span class="selector-tag">opacity</span>: 0<span class="selector-class">.8</span>;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">transition</span>: <span class="selector-tag">all</span> <span class="selector-class">.4s</span>;</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">  <span class="comment">/*定义所有图片样式*/</span></span></span><br><span class="line"><span class="css">  <span class="selector-class">.pic</span> &#123;</span></span><br><span class="line">    width: 50px;</span><br><span class="line">    height: 50px;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">  <span class="selector-class">.cube</span> <span class="selector-class">.out_front</span> &#123;</span></span><br><span class="line">    transform: rotateY(0deg) translateZ(25px);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">  <span class="selector-class">.cube</span> <span class="selector-class">.out_back</span> &#123;</span></span><br><span class="line">    transform: translateZ(-25px) rotateY(180deg);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">  <span class="selector-class">.cube</span> <span class="selector-class">.out_left</span> &#123;</span></span><br><span class="line">    transform: rotateY(-90deg) translateZ(25px);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">  <span class="selector-class">.cube</span> <span class="selector-class">.out_right</span> &#123;</span></span><br><span class="line">    transform: rotateY(90deg) translateZ(25px);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">  <span class="selector-class">.cube</span> <span class="selector-class">.out_top</span> &#123;</span></span><br><span class="line">    transform: rotateX(90deg) translateZ(25px);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">  <span class="selector-class">.cube</span> <span class="selector-class">.out_bottom</span> &#123;</span></span><br><span class="line">    transform: rotateX(-90deg) translateZ(25px);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">  <span class="comment">/*定义小正方体样式*/</span></span></span><br><span class="line"><span class="css">  <span class="selector-class">.cube</span> <span class="selector-tag">span</span> &#123;</span></span><br><span class="line">    display: block;</span><br><span class="line">    width: 25px;</span><br><span class="line">    height: 25px;</span><br><span class="line">    position: absolute;</span><br><span class="line">    top: 12px;</span><br><span class="line">    left: 12px;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">  <span class="selector-class">.cube</span> <span class="selector-class">.in_pic</span> &#123;</span></span><br><span class="line">    width: 25px;</span><br><span class="line"><span class="css">    <span class="selector-tag">height</span><span class="selector-pseudo">:25px</span>;</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">  <span class="selector-class">.cube</span> <span class="selector-class">.in_front</span> &#123;</span></span><br><span class="line">    transform: rotateY(0deg) translateZ(12px);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">  <span class="selector-class">.cube</span> <span class="selector-class">.in_back</span> &#123;</span></span><br><span class="line">    transform: translateZ(-12px) rotateY(180deg);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">  <span class="selector-class">.cube</span> <span class="selector-class">.in_left</span> &#123;</span></span><br><span class="line">    transform: rotateY(-90deg) translateZ(12px);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">  <span class="selector-class">.cube</span> <span class="selector-class">.in_right</span> &#123;</span></span><br><span class="line">    transform: rotateY(90deg) translateZ(12px);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">  <span class="selector-class">.cube</span> <span class="selector-class">.in_top</span> &#123;</span></span><br><span class="line">    transform: rotateX(90deg) translateZ(12px);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">  <span class="selector-class">.cube</span> <span class="selector-class">.in_bottom</span> &#123;</span></span><br><span class="line">    transform: rotateX(-90deg) translateZ(12px);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">  <span class="comment">/*鼠标移入后样式*/</span></span></span><br><span class="line"><span class="css">  <span class="selector-class">.cube</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.out_front</span> &#123;</span></span><br><span class="line">    transform: rotateY(0deg) translateZ(50px);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">  <span class="selector-class">.cube</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.out_back</span> &#123;</span></span><br><span class="line">    transform: translateZ(-50px) rotateY(180deg);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">  <span class="selector-class">.cube</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.out_left</span> &#123;</span></span><br><span class="line">    transform: rotateY(-90deg) translateZ(50px);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">  <span class="selector-class">.cube</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.out_right</span> &#123;</span></span><br><span class="line">    transform: rotateY(90deg) translateZ(50px);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">  <span class="selector-class">.cube</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.out_top</span> &#123;</span></span><br><span class="line">    transform: rotateX(90deg) translateZ(50px);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">  <span class="selector-class">.cube</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.out_bottom</span> &#123;</span></span><br><span class="line">    transform: rotateX(-90deg) translateZ(50px);</span><br><span class="line">  &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"wrap"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--包裹所有元素的容器--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"cube"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--前面图片 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"out_front"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">onclick</span>=<span class="string">"back2top()"</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"https://raw.githubusercontent.com/Joshua-li-yi/blog_images/master/images/first_1/5.jpg"</span> <span class="attr">class</span>=<span class="string">"pic"</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--后面图片 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"out_back"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">onclick</span>=<span class="string">"back2top()"</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"https://raw.githubusercontent.com/Joshua-li-yi/blog_images/master/images/first_1/5.jpg"</span> <span class="attr">class</span>=<span class="string">"pic"</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--左面图片 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"out_left"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">onclick</span>=<span class="string">"back2top()"</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"https://raw.githubusercontent.com/Joshua-li-yi/blog_images/master/images/first_1/5.jpg"</span> <span class="attr">class</span>=<span class="string">"pic"</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--右面图片 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"out_right"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">onclick</span>=<span class="string">"back2top()"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"https://raw.githubusercontent.com/Joshua-li-yi/blog_images/master/images/first_1/5.jpg"</span> <span class="attr">class</span>=<span class="string">"pic"</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--上面图片 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"out_top"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">onclick</span>=<span class="string">"back2top()"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"https://raw.githubusercontent.com/Joshua-li-yi/blog_images/master/images/first_1/5.jpg"</span> <span class="attr">class</span>=<span class="string">"pic"</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--下面图片 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"out_bottom"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">onclick</span>=<span class="string">"back2top()"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"https://raw.githubusercontent.com/Joshua-li-yi/blog_images/master/images/first_1/5.jpg"</span> <span class="attr">class</span>=<span class="string">"pic"</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--小正方体 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"in_front"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"https://raw.githubusercontent.com/Joshua-li-yi/blog_images/master/images/first_1/6.jpg"</span> <span class="attr">class</span>=<span class="string">"in_pic"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"in_back"</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"https://raw.githubusercontent.com/Joshua-li-yi/blog_images/master/images/first_1/6.jpg"</span> <span class="attr">class</span>=<span class="string">"in_pic"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"in_left"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"https://raw.githubusercontent.com/Joshua-li-yi/blog_images/master/images/first_1/6.jpg"</span> <span class="attr">class</span>=<span class="string">"in_pic"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"in_right"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"https://raw.githubusercontent.com/Joshua-li-yi/blog_images/master/images/first_1/6.jpg"</span> <span class="attr">class</span>=<span class="string">"in_pic"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"in_top"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"https://raw.githubusercontent.com/Joshua-li-yi/blog_images/master/images/first_1/6.jpg"</span> <span class="attr">class</span>=<span class="string">"in_pic"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"in_bottom"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"https://raw.githubusercontent.com/Joshua-li-yi/blog_images/master/images/first_1/6.jpg"</span> <span class="attr">class</span>=<span class="string">"in_pic"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">  <span class="function"><span class="keyword">function</span> <span class="title">back2top</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="javascript">    $(<span class="string">'html, body'</span>).animate(&#123;<span class="attr">scrollTop</span>: <span class="number">0</span>&#125;, <span class="number">500</span>);</span></span><br><span class="line">  &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>其中的照片最好放自己的鸭！</p>
<p>还有就是记得调整显示的位置哦！</p>
<p>这样基本小魔方的实现代码就写辽</p>
<p>2.<strong><em>调用</em></strong></p>
<p>下面就是在个人主页中调用小魔方辽</p>
<ul>
<li><p>在  /themes/next/layout/_custom/custom.swig 文件中引入新建的文件</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 旋转魔方 --&gt;</span></span><br><span class="line">&#123;% if theme.cube.enable %&#125;</span><br><span class="line">   &#123;% if theme.cube.type == "mini" %&#125;</span><br><span class="line">      &#123;% include 'cube-mini.swig' %&#125;</span><br><span class="line">   &#123;% elseif theme.cube.type == "hollow" %&#125;</span><br><span class="line">      &#123;% include 'cube-hollow.swig' %&#125;</span><br><span class="line">   &#123;% endif %&#125;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>



</li>
</ul>
<ul>
<li><p>在主题next中的 _config.yml 中新添加以下动态配置项</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">cube:</span><br><span class="line">  enable: true</span><br><span class="line">  type: hollow # mini | hollow</span><br></pre></td></tr></table></figure>

</li>
</ul>
<p>这样子就好辽</p>
<p>最后再在gitbush中hexo g &amp;&amp; hexo d就可</p>
<h4 id="实现的效果如下"><a href="#实现的效果如下" class="headerlink" title="实现的效果如下"></a>实现的效果如下</h4><p><img src="https://raw.githubusercontent.com/Joshua-li-yi/blog_images/master/images/first_1/1.gif" alt></p>
]]></content>
      <categories>
        <category>HEXO Next美化</category>
      </categories>
      <tags>
        <tag>HEXO Next</tag>
      </tags>
  </entry>
  <entry>
    <title>Qt-画图板</title>
    <url>/2019/11/10/Qt-%E7%94%BB%E5%9B%BE%E6%9D%BF/</url>
    <content><![CDATA[<h2 id="Qt画图板程序的实现"><a href="#Qt画图板程序的实现" class="headerlink" title="Qt画图板程序的实现"></a>Qt画图板程序的实现</h2><h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p><img src="https://raw.githubusercontent.com/Joshua-li-yi/blog_images/master/images/20191110225749.png" alt></p>
<h4 id="Qt环境"><a href="#Qt环境" class="headerlink" title="Qt环境"></a>Qt环境</h4><p>Qt Creator 4.8.2</p>
<h4 id="技术细节"><a href="#技术细节" class="headerlink" title="技术细节"></a>技术细节</h4><p>画图板程序的实现分为以下三个部分，</p>
<ol>
<li><p>画图板界面的设计</p>
</li>
<li><p>界面和后台程序之间信号的传递</p>
</li>
<li><p>画图板功能程序的具体实现</p>
</li>
</ol>
<ol>
<li><strong>画图板界面的设计</strong></li>
</ol>
<p>利用Qt design设计画图板，包括，菜单栏，工具栏和用户窗口</p>
<p>具体界面如下：</p>
<p><img src="https://raw.githubusercontent.com/Joshua-li-yi/blog_images/master/images/first_1/20191111142852.png" alt></p>
<p>绘制图形可以绘制选择，直线，矩形，和圆</p>
<p><img src="https://raw.githubusercontent.com/Joshua-li-yi/blog_images/master/images/first_1/a145.png" alt></p>
<p>选择涂鸦即可绘制自由线条</p>
<p>可以选择，画笔的粗细，颜色和画笔的样式，也可以选择画刷的颜色和样式</p>
<p>二．<strong>界面和后台程序之间信号的传递</strong></p>
<p>在菜单栏的选择中使用了，connect函数实现信号的传递，使用action中自带的triggered()信号，来获得所点击的内容</p>
<p>具体代码如下：</p>
<p><img src="https://raw.githubusercontent.com/Joshua-li-yi/blog_images/master/images/first_1/20191111142945.png" alt></p>
<p>槽的定义为：</p>
<p><img src="https://raw.githubusercontent.com/Joshua-li-yi/blog_images/master/images/first_1/20191111143015.png" alt></p>
<p>graph在头文件中的定义为：</p>
<p><img src="https://raw.githubusercontent.com/Joshua-li-yi/blog_images/master/images/first_1/20191111143100.png" alt></p>
<p>画笔的粗细值的传递的具体代码如下：</p>
<figure class="highlight qt"><table><tr><td class="code"><pre><span class="line">ui-\&gt;spinBox-\&gt;setMinimum(<span class="number">1</span>);</span><br></pre></td></tr></table></figure>



<p><img src="https://raw.githubusercontent.com/Joshua-li-yi/blog_images/master/images/first_1/20191111143158.png" alt></p>
<p>画笔的颜色和画笔的样式，画刷的颜色和样式具体的实现代码如下：</p>
<p><img src="https://raw.githubusercontent.com/Joshua-li-yi/blog_images/master/images/first_1/20191111143227.png" alt></p>
<p><img src="https://raw.githubusercontent.com/Joshua-li-yi/blog_images/master/images/first_1/20191111143258.png" alt></p>
<p><img src="https://raw.githubusercontent.com/Joshua-li-yi/blog_images/master/images/first_1/20191111143328.png" alt></p>
<p>先使用了combox中的activated槽函数，将下拉列表的选择项提取出来，再一一对应对应的颜色与格式。</p>
<p>三 <strong>画图板功能程序的具体实现</strong></p>
<p>使用鼠标press，move，和release函数来获得鼠标的状态，并将状态记录下来</p>
<p>具体代码如下：</p>
<p><img src="https://raw.githubusercontent.com/Joshua-li-yi/blog_images/master/images/first_1/20191111143407.png" alt></p>
<p>isDrawing 用来记录画板是否处于绘画状态</p>
<p><img src="https://raw.githubusercontent.com/Joshua-li-yi/blog_images/master/images/first_1/20191111143436.png" alt></p>
<p><img src="https://raw.githubusercontent.com/Joshua-li-yi/blog_images/master/images/first_1/20191111143505.png" alt></p>
<p>问题及解决</p>
<ol>
<li></li>
</ol>
<p><strong>问题描述</strong>：在涂鸦功能的代码实现上，发现总是只能显示最终所画的两个点，而不能实现，鼠标点击之后路过哪里就在哪里画。</p>
<p><strong>问题解决</strong>：经过对代码的分析发现，造成上面的原因是，直接套用了上面画矩形和圆的双缓冲机制，而忽略了，双缓冲机制，是为了避免拖拽残影而将最终的tempix上的状态复制到pix画板上，所有，应该实时将涂鸦的内容复制到pix画板上，所以最终加了</p>
<p><img src="https://raw.githubusercontent.com/Joshua-li-yi/blog_images/master/images/first_1/20191111143538.png" alt></p>
<p>pix=tempix：这句</p>
<p>最后解决了，涂鸦的路径绘制问题</p>
<p>效果展示：</p>
<p><img src="https://raw.githubusercontent.com/Joshua-li-yi/blog_images/master/images/first_1/a1009.png" alt></p>
<p>2.</p>
<p><strong>问题描述</strong>：无法在画板上进行图形的连续绘制，每次只能在画板上画一个图形，再画另一个图形之后，就会更新前面所画的图形</p>
<p><strong>问题解决</strong>：分析绘制图形的代码发现，应该将</p>
<p>if(isDrawing)放在if(graph==1)里面可以解决上述问题，且只有一个</p>
<p>if(!isDrawing)</p>
<p>pix=tempix;</p>
<p>这样既可实现连续绘制，因为如果有多个</p>
<p>if(!isDrawing)</p>
<p>pix=tempix;</p>
<p>时，每次绘完之后他就会重启一个画板。</p>
<p><img src="https://raw.githubusercontent.com/Joshua-li-yi/blog_images/master/images/first_1/20191111143723.png" alt></p>
<p><img src="https://raw.githubusercontent.com/Joshua-li-yi/blog_images/master/images/first_1/20191111143801.png" alt></p>
<p>效果展示：</p>
<p><img src="https://raw.githubusercontent.com/Joshua-li-yi/blog_images/master/images/first_1/20191111143827.png" alt></p>
<p>3<strong>.</strong></p>
<p><strong>问题描述</strong>：无法更改画笔，画刷，画笔和画刷的信号传递过程没有设计好</p>
<p>开始时直接在构造函数里写combox的信号与槽，发现无法完成画笔和槽之间的切换。</p>
<p><strong>问题解决</strong>：经过查阅资料后，明白了combox和spinbox的使用细节。之后直接调用了他们的相关槽函数，具体代码如下：</p>
<p><img src="https://raw.githubusercontent.com/Joshua-li-yi/blog_images/master/images/first_1/20191111143855.png" alt></p>
<p>使用了combox的activated槽函数，和spinbox的editingfinished槽函数解决了问题。</p>
<p>效果展示：</p>
<p><img src="https://raw.githubusercontent.com/Joshua-li-yi/blog_images/master/images/first_1/a1215.png" alt></p>
]]></content>
      <categories>
        <category>Qt</category>
      </categories>
      <tags>
        <tag>Qt</tag>
      </tags>
  </entry>
  <entry>
    <title>Qt*.ui界面文件对应的ui_*.h文件的作用</title>
    <url>/2019/11/09/Qt-ui%E7%95%8C%E9%9D%A2%E6%96%87%E4%BB%B6%E5%AF%B9%E5%BA%94%E7%9A%84ui-h%E6%96%87%E4%BB%B6%E7%9A%84%E4%BD%9C%E7%94%A8/</url>
    <content><![CDATA[<h3 id="研究-ui界面文件对应的ui-h文件的作用"><a href="#研究-ui界面文件对应的ui-h文件的作用" class="headerlink" title="研究.ui界面文件对应的ui_.h文件的作用"></a>研究<em>.ui界面文件对应的ui_</em>.h文件的作用</h3><p>ui_<em>.h 是在对 *.ui 文件编译后生成的一个文件，ui_</em>.h 会出现在编译后的目录下，或与 *.ui 同目录（与项目的 shadow build 编译设置有关）。</p>
<h4 id="查看-ui-h-文件的内容，发现它主要做了以下的一些工作："><a href="#查看-ui-h-文件的内容，发现它主要做了以下的一些工作：" class="headerlink" title="查看 ui_*.h 文件的内容，发现它主要做了以下的一些工作："></a>查看 ui_*.h 文件的内容，发现它主要做了以下的一些工作：</h4><p>1.定义了一个类 Ui_*，用于封装可视化设计的界面。</p>
<p>2.自动生成了界面各个组件的类成员变量定义。在 public 部分为界面上每个组件定义了一个指针变量，变量的名称就是设置的相关控件的名称。比如，在窗体上放置了一个 QLabel 和一个 QPushButton 并命名后，自动生成的定义是：</p>
<figure class="highlight qt"><table><tr><td class="code"><pre><span class="line">QLabel*LabDemo;</span><br><span class="line"></span><br><span class="line">QPushButton*btnClos;</span><br></pre></td></tr></table></figure>

<p>3.定义了 setupUi() 函数，这个函数用于创建各个界面组件，并设置其位置、大小、文字内容、字体等属性，设置信号与槽的关联。setupUi() 函数体的第一部分是根据可视化设计的界面内容，用 C++ 代码创建界面上各组件，并设置其属性。<br>接下来，setupUi() 调用了函数 retranslateUi(Widget)，用来设置界面各组件的文字内容属性，如标签的文字、按键的文字、窗体的标题等。将界面上的文字设置的内容独立出来作为一个函数 retranslateUi()。</p>
<p>setupUi()函数的第三部分是设置信号于槽的关联，本文件中有一下两行</p>
<figure class="highlight qt"><table><tr><td class="code"><pre><span class="line"><span class="attribute">QObject</span>::connect(btnClose,SIGNAL(clicked()),Widget,SLOT(close()))</span><br><span class="line">;</span><br><span class="line"><span class="attribute">QMetaObject</span>::connectSlotsByName(Widget);</span><br></pre></td></tr></table></figure>

<p>第1 行是调用 connect() 函数，将在 UI 设计器里设置的信号与槽的关联转换为语句。这里是将 btnClose 按键的 clicked() 信号与窗体 Widget 的 close() 槽函数关联起来，就是在图 4 中设置的信号与槽的关联的程序语句实现。这样，当单击 btnClose 按钮时，就会执行 Widget 的 close() 槽函数，而 close() 槽函数的功能是关闭窗口。<br>第 2 行是设置槽函数的关联方式，用于将 UI 设计器自动生成的组件信号的槽函数与组件信号相关联。<br>所以，在Widget 的构造函数里调用 ui-&gt;setupUI(this)，就实现了窗体上组件的创建、属性设置、信号与槽的关联。</p>
<p>定义 namespace Ui，并定义一个从Ui_Widget 继承的类Widget。 </p>
<figure class="highlight qt"><table><tr><td class="code"><pre><span class="line">namespace <span class="title">Ui</span>&#123;</span><br><span class="line">class <span class="attribute">Widget</span>:<span class="attribute">public Ui Widget&#123;&#125;</span></span><br><span class="line"><span class="attribute">&#125;</span></span><br></pre></td></tr></table></figure>

<p>ui_widget.h 文件里实现界面功能的类是 Ui_Widget。再定义一个类 Widget 从 Ui_Widget 继承而来，并定义在 namespace Ui 里，这样 Ui:: Widget 与 widget.h 里的类 Widget 同名，但是用 namespace 区分开来。所以，界面的 Ui:: Widget 类与文件 widget.h 里定义的 Widget 类实际上是两个类，但是设计的程序员对 Qt 的处理让用户感觉不到 Ui:: Widget 类的存在。</p>
]]></content>
      <categories>
        <category>Qt</category>
      </categories>
      <tags>
        <tag>Qt</tag>
      </tags>
  </entry>
  <entry>
    <title>函数递归之斐波那契数列加强版</title>
    <url>/2019/11/09/%E5%87%BD%E6%95%B0%E9%80%92%E5%BD%92%E4%B9%8B%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91%E6%95%B0%E5%88%97%E5%8A%A0%E5%BC%BA%E7%89%88/</url>
    <content><![CDATA[<h1 id="函数递归之斐波那契数列加强版1"><a href="#函数递归之斐波那契数列加强版1" class="headerlink" title="函数递归之斐波那契数列加强版1"></a>函数递归之斐波那契数列加强版1</h1><p><strong>背景</strong></p>
<p>在函数递归问题中一个典型问题是求解斐波那契数列</p>
<p>但是函数递归会面临着资源的大量消耗问题</p>
<p>按照一种最为基本的写法</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">Fib</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> a)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (a &lt; <span class="number">2</span>)</span><br><span class="line">		<span class="keyword">return</span> a;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">		<span class="keyword">return</span> Fib(a - <span class="number">1</span>) + Fib(a - <span class="number">2</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="keyword">int</span> n;</span><br><span class="line">	<span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">	<span class="keyword">if</span> (n &lt;=<span class="number">0</span>||n&gt;<span class="number">90</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">"WORNG"</span>;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">cout</span>&lt;&lt;Fib(n);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>在n&lt;=50左右时，大概等几秒钟是可以得出答案的</p>
<p>然鹅一旦太大的话……</p>
<p>你也许就得等上老一会儿</p>
<p>下面是对该算法的改进</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">Fibo</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span>&amp;,<span class="keyword">long</span> <span class="keyword">long</span>&amp;,<span class="keyword">int</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="keyword">int</span> n;</span><br><span class="line">	<span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">	<span class="keyword">if</span> (n &lt;=<span class="number">0</span>||n&gt;<span class="number">90</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">"WORNG"</span>;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">long</span> <span class="keyword">long</span> a = <span class="number">1</span>, b = <span class="number">1</span>;</span><br><span class="line">	<span class="built_in">cout</span>&lt;&lt;Fibo(a,b,n);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">Fibo</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> &amp;a,<span class="keyword">long</span> <span class="keyword">long</span> &amp;b,<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">long</span> <span class="keyword">long</span> temp1[<span class="number">90</span>],temp2[<span class="number">90</span>];</span><br><span class="line">	<span class="keyword">int</span> j = <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">if</span> (n &gt; <span class="number">2</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			temp1[j] = a + b;</span><br><span class="line">			temp2[j++] = a;</span><br><span class="line">			<span class="keyword">return</span> Fibo(temp1[j<span class="number">-1</span>],temp2[j<span class="number">-1</span>], n - <span class="number">1</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这样写就可极大的缩短时间啦！！！</p>
]]></content>
      <categories>
        <category>c++算法</category>
      </categories>
      <tags>
        <tag>c++ data structure</tag>
      </tags>
  </entry>
  <entry>
    <title>MATLAB—线性规划问题求解</title>
    <url>/2019/11/09/matlab-%E7%BA%BF%E6%80%A7%E8%A7%84%E5%88%92%E9%97%AE%E9%A2%98%E6%B1%82%E8%A7%A3/</url>
    <content><![CDATA[<h1 id="MATLAB求解线性规划问题"><a href="#MATLAB求解线性规划问题" class="headerlink" title="MATLAB求解线性规划问题"></a>MATLAB求解线性规划问题</h1><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>1.（生产问题）某工厂计划生产甲、乙两种产品，主要材料有钢材3500kg，铁材1800kg，专用设备能力2800台时，材料与设备能力的消耗定额及单位产品所获利润如表所示，问如何安排生产，才能使该厂所获利润最大？</p>
<p><img src="https://raw.githubusercontent.com/Joshua-li-yi/blog_images/master/images/20191109034314.png" alt></p>
<h3 id="问题分析"><a href="#问题分析" class="headerlink" title="问题分析"></a>问题分析</h3><p>x1甲种产品的件数，x2乙种产品的件数</p>
<p>max y=80<em>x1+125</em>x2  （该厂所获得的的利润）</p>
<p>8<em>x1+5</em>x2&lt;=3500  （所耗费的钢材不超过3500kg）</p>
<p>6<em>x1+4</em>x2&lt;=1800 （所耗费的铁材不超过1800kg）</p>
<p>4<em>x1+5</em>x2&lt;=2800  （所耗费的设备能力不超过2800台）</p>
<p>-x1&lt;=0  （生产甲的件数为自然数）</p>
<p>-x2&lt;=0  （生产乙的件数为自然数）</p>
<h5 id="MATLAB代码如下"><a href="#MATLAB代码如下" class="headerlink" title="MATLAB代码如下"></a>MATLAB代码如下</h5><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; intcon=[<span class="number">1</span> <span class="number">2</span>]</span><br><span class="line"></span><br><span class="line">intcon =</span><br><span class="line"></span><br><span class="line">     <span class="number">1</span>     <span class="number">2</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; a=[<span class="number">8</span> <span class="number">5</span>;<span class="number">6</span> <span class="number">4</span>;<span class="number">4</span> <span class="number">5</span>;<span class="number">-1</span> <span class="number">0</span>;<span class="number">0</span> <span class="number">-1</span>]</span><br><span class="line"></span><br><span class="line">a =</span><br><span class="line"></span><br><span class="line">     <span class="number">8</span>     <span class="number">5</span></span><br><span class="line">     <span class="number">6</span>     <span class="number">4</span></span><br><span class="line">     <span class="number">4</span>     <span class="number">5</span></span><br><span class="line">    <span class="number">-1</span>     <span class="number">0</span></span><br><span class="line">     <span class="number">0</span>    <span class="number">-1</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; b=[<span class="number">3500</span>;<span class="number">1800</span>;<span class="number">2800</span>;<span class="number">0</span>;<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">b =</span><br><span class="line"></span><br><span class="line">        <span class="number">3500</span></span><br><span class="line">        <span class="number">1800</span></span><br><span class="line">        <span class="number">2800</span></span><br><span class="line">           <span class="number">0</span></span><br><span class="line">           <span class="number">0</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; f=-[<span class="number">80</span> <span class="number">125</span>]</span><br><span class="line"></span><br><span class="line">f =</span><br><span class="line"></span><br><span class="line">   <span class="number">-80</span>  <span class="number">-125</span></span><br><span class="line">&gt;&gt; [x fval exitflag]=intlinprog(f,intcon,a,b)</span><br><span class="line"></span><br><span class="line">x =</span><br><span class="line"></span><br><span class="line">         <span class="number">0</span></span><br><span class="line">  <span class="number">450.0000</span>（生产甲<span class="number">0</span>件，乙<span class="number">450</span>件）</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">fval =</span><br><span class="line"></span><br><span class="line">      <span class="number">-56250</span></span><br><span class="line">      <span class="comment">%（最大利润为56250元）</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">exitflag =</span><br><span class="line"></span><br><span class="line">     <span class="number">1</span></span><br></pre></td></tr></table></figure>

<p>当生产甲0件，乙450件时，该厂利润最大，为56250元</p>
<p>2.（运输问题）设两个建材厂C1和C2，每年沙石的产量分别为35万吨和55万吨，这些沙石需要供应到W1、W2和W3三个建筑工地，每年建筑工地对沙石的需求量分别为26万吨、35万吨和26万吨，各建材厂到建筑工地之间的运费（万元/万吨）如表所示，问应当如何调运才能使得总运费最小。</p>
<p><img src="https://raw.githubusercontent.com/Joshua-li-yi/blog_images/master/images/20191109034734.png" alt></p>
<h3 id="问题分析-1"><a href="#问题分析-1" class="headerlink" title="问题分析"></a>问题分析</h3><p>c1x1,c1x2,c1x3,分别为c1建材厂调到w1，w2，w3三个建筑工地的砂石量（万吨）</p>
<p>c2x1,c2x2,c2x3, 分别为c2建材厂调到w1，w2，w3三个建筑工地的砂石量（万吨）</p>
<p>min y=10<em>c1x1+12</em>c1x2+9<em>c1x3+8</em>c2x1+11<em>c2x2+13</em>c2x3(总运费最小)</p>
<p>c1x1+c1x2+c1x3&lt;=35（c1建材厂产量为35万吨）</p>
<p>c2x1+c2x2+c2x3&lt;=55（c2建材厂产量为55万吨）</p>
<p>c1x1+c2x1&gt;=26（w1建筑工地对沙石的需求量为26万吨）</p>
<p>c1x2+c2x2&gt;=35（w2建筑工地对沙石的需求量为35万吨）</p>
<p>c1x3+c2x3&gt;=26（w3建筑工地对沙石的需求量为26万吨）</p>
<p>cixj&gt;=0(i=1,2 j=1,2,3)（运送量大于等于0万吨）</p>
<h5 id="MATLAB代码如下-1"><a href="#MATLAB代码如下-1" class="headerlink" title="MATLAB代码如下"></a>MATLAB代码如下</h5><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">f=[<span class="number">10</span> <span class="number">12</span> <span class="number">9</span> <span class="number">8</span> <span class="number">11</span> <span class="number">13</span>];</span><br><span class="line">b=-[<span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span>;<span class="number">0</span> <span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span>;<span class="number">0</span> <span class="number">0</span> <span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span>;<span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1</span> <span class="number">0</span> <span class="number">0</span>;<span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1</span> <span class="number">0</span>;<span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1</span>];</span><br><span class="line">a=[<span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span>;<span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span>;<span class="number">-1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">-1</span> <span class="number">0</span> <span class="number">0</span>;<span class="number">0</span> <span class="number">-1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">-1</span> <span class="number">0</span>;<span class="number">0</span> <span class="number">0</span> <span class="number">-1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">-1</span>;b];</span><br><span class="line">c=[<span class="number">35</span>;<span class="number">55</span>;<span class="number">-26</span>;<span class="number">-35</span>;<span class="number">-26</span>;<span class="number">0</span>;<span class="number">0</span>;<span class="number">0</span>;<span class="number">0</span>;<span class="number">0</span>;<span class="number">0</span>];</span><br><span class="line">[cx fmin]=linprog(f,a,c);</span><br><span class="line">cx=</span><br><span class="line"><span class="number">0</span>(c1x1,c1-&gt;w1)</span><br><span class="line"><span class="number">6</span>(c1x2,c1-&gt;w2)</span><br><span class="line"><span class="number">26</span>(c1x3,c1-&gt;w3)</span><br><span class="line"><span class="number">26</span>(c2x1,c2-&gt;w1)</span><br><span class="line"><span class="number">29</span>(c2x2,c2-&gt;w2)</span><br><span class="line"><span class="number">0</span>(c2x3,c2-&gt;w3)</span><br><span class="line">fmin=</span><br><span class="line"><span class="number">833</span></span><br><span class="line"><span class="comment">%（总运费最小为833万元）</span></span><br></pre></td></tr></table></figure>

<p>当c1向w1,w2,w3分别运送0,6,26万吨，c2向w1,w2,w3分别运送26,29,0万吨时，总运费最小，为833万元。</p>
<p>3.（资金分配问题）某企业在今后三年有5项工程考虑施工，每项工程的期望收入和年度费用如表所示。假定每一项已经批准的工程要在整个三年内完成。问企业应怎样选择工程，使企业总收入最大。</p>
<p><img src="https://raw.githubusercontent.com/Joshua-li-yi/blog_images/master/images/20191109034955.png" alt></p>
<h3 id="问题分析-2"><a href="#问题分析-2" class="headerlink" title="问题分析"></a>问题分析</h3><p>x1,x2,x3,x4,x5分别表示工程1,2，3,4,5</p>
<p>max y=20<em>x1+40</em>x2+20<em>x3+15</em>x4+30*x5 (企业总收入最大)</p>
<p>5<em>x1+4</em>x2+3<em>x3+7</em>x4+8*x5&lt;=25（第1年最大可用基金数为25千元）</p>
<p>1<em>x1+7</em>x2+9<em>x3+4</em>x4+6*x5&lt;=25（第2年最大可用基金数为25千元）</p>
<p>8<em>x1+10</em>x2+2<em>x3+1</em>x4+10*x5&lt;=25（第3年最大可用基金数为25千元）</p>
<p>xi=[0 1];(i=1,2 ,3,4,5)</p>
<h5 id="MATLAB代码如下-2"><a href="#MATLAB代码如下-2" class="headerlink" title="MATLAB代码如下"></a>MATLAB代码如下</h5><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">f=-[<span class="number">20</span> <span class="number">40</span> <span class="number">20</span> <span class="number">15</span> <span class="number">30</span>];</span><br><span class="line">a=[<span class="number">5</span> <span class="number">4</span> <span class="number">3</span> <span class="number">7</span> <span class="number">8</span>;<span class="number">1</span> <span class="number">7</span> <span class="number">9</span> <span class="number">4</span> <span class="number">6</span>;<span class="number">8</span> <span class="number">10</span> <span class="number">2</span> <span class="number">1</span> <span class="number">10</span>];</span><br><span class="line">b=[<span class="number">25</span>;<span class="number">25</span>;<span class="number">25</span>];</span><br><span class="line">intcon=[<span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span>];</span><br><span class="line">lb=<span class="built_in">zeros</span>(<span class="number">5</span>,<span class="number">1</span>);</span><br><span class="line">ub=<span class="built_in">ones</span>(<span class="number">5</span>,<span class="number">1</span>);</span><br><span class="line">[x ,fm ,exitflag]=intlinprog(f,intcon,a,b,[],[],lb,ub);</span><br><span class="line">x=</span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">0</span></span><br><span class="line"><span class="comment">%(实施1,2,3,4号项目)</span></span><br><span class="line">fm=</span><br><span class="line">	<span class="number">-95</span></span><br><span class="line">	<span class="comment">%（企业总收入最大为95千元）</span></span><br><span class="line">exitflag=</span><br><span class="line">   <span class="number">1</span></span><br></pre></td></tr></table></figure>

<p>当企业选择1,2,3,4工程时，企业利润最大，为95千元。</p>
]]></content>
      <categories>
        <category>MATLAB</category>
      </categories>
      <tags>
        <tag>MATLAB machine learning</tag>
      </tags>
  </entry>
</search>
